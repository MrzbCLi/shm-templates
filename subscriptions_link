–≤ —à–∞–±–ª–æ–Ω –±–æ—Ç–∞ –≤—Å—Ç–∞–≤–ª—è–µ–º  –≤ –ª—é–±–æ–µ –º–µ—Å—Ç–æ

<% CASE '/notifications_active' %>
{{ item = us.id( args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ TEXT = BLOCK }}
üéâ <b>üéä –£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b> üöÄ  

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b>  ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞

<b>üìÖ –î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b> {{ USE date }}{{ date.format( item.created, '%d.%m.%Y–≥. %H:%M') }}
<b>‚è≥ –î–æ:</b> {{ USE date }}{{ date.format( item.expire, '%d.%m.%Y–≥. %H:%M') }}

<b>üëâ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.</b>
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üöÄ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ args.0 }}"
                        }
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/start"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_block' %>
{{ item = us.id( args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ IF event_name == "BLOCK" }}
{{ TEXT = BLOCK }}
<b>üö´ –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚ö†Ô∏è –°—Ç–∞—Ç—É—Å:</b> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞

<b>üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> <i>{{ user.pays.forecast('blocked', 1).total }}‚ÇΩ</i>

<b>‚ùó –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</b> <i>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.</i> üí≥

<b>üëâ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á–µ—Ç –∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.</b>
{{ END }}
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/start"
                    }
                ]
            ]
        }
    }
}

—Å–æ–∑–¥–∞–µ–º  –æ—Ç–¥–µ–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω —Å  –∏–º–µ–Ω–µ–º subscriptions_link


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
    <meta name="format-detection" content="telephone=no"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="MobileOptimized" content="176"/>
    <meta name="HandheldFriendly" content="True"/>
    <meta name="robots" content="noindex,nofollow"/>
    <title>–ü–æ–¥–ø–∏—Å–∫–∞</title>
    
    <!-- Telegram WebApp SDK -->
    <script src="https://telegram.org/js/telegram-web-app.js?1"></script>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <style>
        /* üåü –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
        body {
             background: url('https://i.ibb.co/wJH1xbb/DALL-E-2025-01-06-16-13.png') no-repeat center center fixed;
               font-family: 'Arial', sans-serif;
            color: #333;
            background-size: cover;
            margin: 0;
            padding: 0;
            color-scheme: var(--tg-color-scheme);
        }

        /* ü™Ñ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä */
        .container-custom {
            background: #fff;
            border-radius: 16px;
            padding: 30px;
            margin: 5vh auto;
            max-width: 500px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            text-align: center;
        }

        /* ‚ú® –°—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–∞ */
        .text-gradient {
            background: linear-gradient(90deg, #ff3b3f, #fd965c, #fdbf60, #30a5f2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: bold;
        }

        /* üõéÔ∏è –ö–Ω–æ–ø–∫–∏ */
        .btn-custom {
            width: 100%;
            margin-top: 20px;
            font-size: 16px;
            font-weight: bold;
            padding: 12px;
            border-radius: 8px;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(90deg, #30a5f2, #0071bc);
            border: none;
        }

        .btn-primary:hover {
            background: linear-gradient(90deg, #0071bc, #00497a);
        }

        .btn-secondary {
            background: linear-gradient(90deg, #ff3b3f, #fd965c);
            border: none;
        }

        .btn-secondary:hover {
            background: linear-gradient(90deg, #fd965c, #fdbf60);
        }

        /* üì± –§—É—Ç–µ—Ä */
        .footer-btn {
            position: fixed;
            left: 0;
            right: 0;
            bottom: 0;
            border-radius: 0;
            padding: 16px;
            text-transform: uppercase;
            font-weight: bold;
            color: #fff;
            background: #0071bc;
        }

        /* Gradient for the buttons */
        .gradient-container * {
            background: linear-gradient(90deg, #ff3b3f, #fd965c, #fdbf60, #30a5f2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    </style>
</head>
<body>
    {{ IF request.params.uid }}
    {{ user = user.switch(request.params.uid) }}
    {{ us = user.services.list_for_api('usi', request.params.us_id) }}
    {{ key = storage.read('name', 'vpn_mrzb_' _ request.params.us_id) }}
    {{ sub_url = storage.read('name', 'vpn_mrzb_' _ args.0 ).subscription_url }}
    {{ bytes = http.get("$sub_url/info").used_traffic }}
    {{ gb = bytes / 1073741824 FILTER format("%.0f") }}
    {{ mb = (bytes % 1073741824) / 1048576 FILTER format("%.0f") }}
    
    {{ TEXT = BLOCK }}
    {{ IF mb == 0 }}
    {{ ELSE}}
        {{ IF gb >= 1 }}
–ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: {{ gb }} Gb.{{ mb }} Mb
        {{ ELSE }}
–ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: {{ mb }} Mb
        {{ END }}
    {{ END }}
{{ END }}
	

    {{ USE date }}
    {{ date_sec = date.now }}
    {{ expire_sec = date.format(us.expire, '%s') }}
    {{ days_left = (expire_sec - date_sec) div 86400 }}
    {{ months = days_left div 30 }}
    {{ days = days_left % 30 }}
    <div class="container container-custom">
        <h2 class="text-gradient">üëã –ü—Ä–∏–≤–µ—Ç, {{ user.full_name }}</h2>
        <br>
        <div class="mb-4 text-start">
            <h5>üîí <strong>–ü–æ–¥–ø–∏—Å–∫–∞:</strong> {{ us.name }}</h5>
            <h5>üìÖ <strong>–ò—Å—Ç–µ–∫–∞–µ—Ç:</strong> {{ us.expire }}</h5>
            <!-- Remaining time display -->
            <h5>
                <strong>‚è≥ –û—Å—Ç–∞–ª–æ—Å—å:</strong> 
                {{ IF months == 0 }}
                    {{ IF days == 1 }}1 –¥–µ–Ω—å üïí
                    {{ ELSIF days == 2 or days == 3 or days == 4 }}{{ days }} –¥–Ω—è üïì
                    {{ ELSE }}{{ days }} –¥–Ω–µ–π üïî
                {{ END }}
                {{ ELSE }}
                    {{ IF months == 1 }}1 –º–µ—Å—è—Ü üìÖ - 
                    {{ ELSIF months == 2 or months == 3 or months == 4 }}{{ months }} –º–µ—Å—è—Ü–∞ üìÖ - 
                    {{ ELSE }}{{ months }} –º–µ—Å—è—Ü–µ–≤ üìÖ - 
                    {{ END }}
                    {{ IF days > 0 }}
                        {{ IF days == 1 }}1 –¥–µ–Ω—å üïí
                        {{ ELSIF days == 2 or days == 3 or days == 4 }}{{ days }} –¥–Ω—è üïì
                        {{ ELSE }}{{ days }} –¥–Ω–µ–π üïî
                        {{ END }}
                    {{ END }}
                {{ END }}
            </h5>

            <!-- Used Traffic Display -->
            <div class="btn btn-primary btn-custom gradient-container">
                {{ TEXT }}
            </div>

            <button class="btn btn-primary btn-custom gradient-container" onclick="ShmSubPage.openDevice(ShmSubPage.device, '{{ key.subscription_url }}');">
                üöÄ –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–ø–∏—Å–∫–∏
            </button>
            <button class="btn btn-secondary btn-custom gradient-container" onclick="copyToClipboard('{{ key.subscription_url }}');">
                üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
            </button>
        </div>
    {{ ELSE }}
        <div class="container text-center mt-5">
            <h2>‚ö†Ô∏è –í–∞—à–∞ —Å–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞</h2>
            <p>–ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–µ" ‚ôªÔ∏è</p>
        </div>
    {{ END }}


    <!-- JavaScript -->
    <script>
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text);
            alert('–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        }

        const ShmSubPage = {
            MainButton: Telegram.WebApp.MainButton,
            device: '',
            init() {
                Telegram.WebApp.ready();
                Telegram.WebApp.MainButton.setParams({
                    text: '–ó–∞–∫—Ä—ã—Ç—å',
                    is_visible: true
                }).onClick(ShmSubPage.close);
                Telegram.WebApp.expand();
            },
            close() {
                Telegram.WebApp.close();
            },
            openDevice(deviceUrl, url) {
                Telegram.WebApp.openLink(deviceUrl + url, { try_instant_view: false });
            }
        };

        document.addEventListener('DOMContentLoaded', () => {
            ShmSubPage.init();
        });
    </script>

    <!-- Bootstrap 5 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
