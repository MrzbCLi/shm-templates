{{ MACRO sendAlert BLOCK }}
    {
        "answerCallbackQuery": {
            "callback_query_id": {{ callback_query.id }},
            "parse_mode":"HTML",
            "text": "{{ errtext.replace('\n','\n') }}",
            "show_alert": true
        }
    }
    {{ IF redirect }}
        ,{
            "shmRedirectCallback": {
                "callback_data": "{{ redirect }}"
            }
        }
    {{ END }}
    {{ STOP }}
{{ END }}

{{ MACRO redirect BLOCK }}
    {
        "shmRedirectCallback": { "callback_data": "{{ callback }}" }
    }
    {{ STOP }}
{{ END }}

{{
    # Get data from storage
    storageMessageType = user.id(1).storage.read('name', 'bot_configuration').messageType;
    storageMenuCmd = user.id(1).storage.read('name', 'bot_configuration').menuCmd;
    storageCheckNotPaidServices = user.id(1).storage.read('name', 'bot_configuration').checkNotPaidServices;
}}

<%# Check for admin rights from user settings %>
<%# for use admin menu, set role = "admin" or "moderator" %>
{{ BLOCK checkAdminRights }}
    {{ IF user.settings.role != "admin" && user.settings.role != "moderator" }}
        {{ sendAlert(code=403, errtext='‚≠ïÔ∏è –†–∞–∑–¥–µ–ª –∑–∞–∫—Ä—ã—Ç', redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}


<%# Check for moderator rights %>
{{ MACRO checkModeratorRights BLOCK }}
    {{ IF user.settings.role == "moderator" && user.settings.moderate.$right != 1 }}
        {{ sendAlert(code=403, errtext="‚≠ïÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!", redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}

<%# sendMessage or editMessageText functional %>
{{ MACRO send BLOCK }}
    {{
        messageType =
            (cmd == '/start') ? 'sendMessage' :
            (cmd == '/menu' && mainMenuCmd == '/menu') ? 'editMessageText' :
            (mainMenuCmd == '/start' || cmd == '/start') ? 'sendMessage' :
            (edit == 0) ? 'sendMessage' :
            (edit == 1) ? 'editMessageText' :
            (defaultMessageType == 'editMessageText' ) ? 'editMessageText' :
            defaultMessageType;

        # Clear state
        ret = user.set_settings({'state' => ''});

        IF user.settings.bot.reqPromo > 0;
            delete(msgID=[user.settings.bot.reqPromo]);
            ret = user.set_settings({'bot' => {'reqPromo' => ''} });
        END;

        IF (cmd != '/start' && !edit && messageType != 'editMessageText' );
            delete(msgID=[message.message_id]);
        END; 
        
        # variable check for admin rights to access admin menu
        IF admin == 1;
            PROCESS checkAdminRights;
        END;
    }}
    {
        "sendChatAction": {
            "chat_id": "{{ user.settings.telegram.chat_id }}",
            "action": "typing"
        }
    },
    {
        "{{messageType}}": {
            {{ IF messageType == 'editMessageText'}}
                "message_id": "{{ message.message_id }}",
            {{ END }}
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            }
        }
    }
{{ END }}

{{ MACRO notification BLOCK }}
    {
        "sendMessage": {
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
            {{ IF force == 1 }}
                "force_reply": true,
                "input_field_placeholder": "{{ placeholder }}"
            {{ END }}
            {{ IF BUTTONS }}
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            {{ END }}
            }
        }
    }
{{ END }}

{{ MACRO delete BLOCK }}
{
    "deleteMessages": { "chat_id": {{ user.settings.telegram.chat_id }}, "message_ids": {{ toJson(msgID) }} }
},
{{ END }}

{{ MACRO cancelRegistration BLOCK }}
{
    "sendMessage": {
        "text": "‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /start.",
        "parse_mode": "HTML"
    }
}
{{ STOP }}
{{ END }}
{{ BLOCK send }}
{
    "sendPhoto": {
        "photo": "{{ config.logo.url }}",
        "caption": "{{ text.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ buttons }}
            ]
        }
    }
}
{{ END }}

{{ name = 'SHM Template BOT'}}
{{ support = 'https://t.me/idsmef'}}
{{ channel = 'https://t.me/mrzbcli_service' }}
{{ chat = '' }}
{{ bot = 'https://t.me/shmtemplatebot' }}
{{ status = '' }}

<% SWITCH cmd %>
<% CASE 'USER_NOT_FOUND' %>
{
    "shmRegister": {
        "partner_id": "{{ args.0 }}",
        "callback_data": "/start",
        "error": "–û–®–ò–ë–ö–ê: –õ–æ–≥–∏–Ω {{ message.chat.username }} –∏–ª–∏ chat_id {{ message.chat.id }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ–¥ –¥—Ä—É–≥–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º."
    }
}
<% CASE ['/menu', '/start', '/menuwelcome'] %>
{{ user_services = ref(user.services.list_for_api('filter', { 'category' => '%', status => 'ACTIVE' } )) }}
{{ IF cmd == '/start' }}
{
        "sendMessage": {
        "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {{ name }} ‚Äî –í–∞—à –ª–∏—á–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ! \n\nüåç –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –æ—Ç streisand –∏ hiddify. \n\n. –î–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–º —Ä–µ—Å—É—Ä—Å–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏. –ü–æ–∫—É–ø–∞—è –∫–ª—é—á –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ç–µ–º, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ —Ü–µ–ª—è—Ö –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—â–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É üîπ\n\n –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n",
{{ END }}
{{ IF cmd == '/menuwelcome' }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {{ name }} ‚Äî –í–∞—à –ª–∏—á–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ! \n\nüåç –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –æ—Ç streisand –∏ hiddify. üöÄ \n\n–ß—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. üîπ\n\n –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n",
{{ END }}
{{ IF cmd == '/menu' }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n{{ IF user.pays.forecast.total !=0 }}üëâ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É: {{ user.pays.forecast.total }} —Ä—É–± {{ END }}",
{{ END }}
        "reply_markup": {
            "inline_keyboard": [
			    {{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                        "callback_data": "admin:menu"
                    }
                ],
                {{ END }}
                [
                {
                    "text": "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    "callback_data": "/balance"
                }
                ],
                {{ IF user_services.size > 0 }}
                {{ FOR user_service_data IN user_services }}
                [
                    {
                        "text": "‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è {{ user_service_data.name }} üÜî {{ user_service_data.user_service_id }}",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ user_service_data.user_service_id }}"
                        }
                    }
                ],
                {{ END }}
				{{ END }}
                [
                {
                    "text": "‚úÖ –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π",
                    "callback_data": "/list"
                },
                {
                    "text": " üõç –ö—É–ø–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á",
                    "callback_data": "/pricelist"
                }
                ],

                [
                {
                    "text": "ü§ù –ë–æ–Ω—É—Å –∑–∞ –¥—Ä—É–∑–µ–π",
                    "callback_data": "/referrals"
                }
                ],
                [
                {
                    "text": "üÜò –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏",
                    "url": "{{ support }}"
                }
                ] 
            ]
        }
    }
}
<% CASE ['/balance', 'üí∞ –ë–∞–ª–∞–Ω—Å'] %>
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ active_services = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'ACTIVE' })) }}

{{ TEXT = BLOCK }}
<b>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

<b>üîπ –ò–º—è:</b> {{ user.full_name }}
<b>üîπ –õ–æ–≥–∏–Ω:</b> {{ user.login }}
<b>üîπ ID:</b> {{ user.id }}
<b>üí∞ –ë–∞–ª–∞–Ω—Å:</b> {{ user.balance }} ‚ÇΩ

<b>üöÄ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF active_services.size > 0 }}
{{ FOR service IN active_services }}
- <code>{{ service.name }}</code> (–¥–æ {{ service.expire }})
{{ END }}
{{ ELSE }}
–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥.
{{ END }}

<b>üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
{{ END }}

{{ buttons = BLOCK }}
				{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    }
                ],
                {{ END }}
		[
					{
                        "text": "üìú –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü–∏—é",
                        "callback_data": "/topup"
                    }
                ],
                [
                    {
                        "text": "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
                        }
                    },
                    {
                        "text": "üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π",
                        "callback_data": "/pays {{ userData.id }} {{ offset - limit }}"
                    }
                ],
        [{ "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥", "callback_data": "promocode" }, { "text": "üè∑Ô∏è Web", "web_app": { "url": "{{ config.api.url }}/shm/v1/public/promo?format=html&user_id={{ user.id }}" }}],
                [
                    {
                        "text": "üöÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏",
                        "callback_data": "/manage_services"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
{{ END }}
{{ process send text=TEXT buttons=buttons }}

<% CASE '/topup' %>
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "disable_web_page_preview": true,
        "text": "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–∏–º –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã:\n\n<a href=\"https://www.tinkoff.ru/rm/\"><b>–¢–∏–Ω—å–∫–æ—Ñ—Ñ</b></a>\n\n–ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥—Ä—É–≥–æ–π –±–∞–Ω–∫, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n<code>+79789028077</code> –¢–∏–Ω—å–∫–æ—Ñ—Ñ (–ü–∞–≤–µ–ª –ü.)\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–ª–∞—Ç–µ–∂–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>\"–Ø –æ–ø–ª–∞—Ç–∏–ª\"</b>.\n\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å: <b>{{ user.pays.forecast('blocked',1).total }}</b> —Ä—É–±–ª–µ–π.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–Ø –æ–ø–ª–∞—Ç–∏–ª",
                        "callback_data": "/sendreceipt {{ amount }}"
                    }
                ],
                [
                    {
                        "text": "–ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/sendreceipt' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ</b>",
        "parse_mode": "HTML",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE '/manage_services' %>
{{ active_services = ref(user.services.list_for_api('filter', { 'status' => 'ACTIVE' })) }}
{{ expired_services = ref(user.services.list_for_api('filter', { 'status' => 'NOT PAID' })) }}
{{ # Variables
    active_services = user.services.list_for_api('usi', args.0);

    # Plugins
    USE date;
}}
{{ TEXT = BLOCK }}
üöÄ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏</b>

{{ IF active_services.size == 0 && expired_services.size == 0 }}
<i>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.</i>
{{ ELSE }}
<b>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF active_services.size > 0 }}
{{ FOR service IN active_services }}
- <b>{{ service.name }}</b> (–¥–æ {{ date.format(service.expire, '%d.%m.%Y') }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥.</i>
{{ END }}

<b>‚ùóÔ∏è –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF expired_services.size > 0 }}
{{ FOR service IN expired_services }}
- <b>{{ service.name }}</b> (–∏—Å—Ç—ë–∫ {{ date.format(service.expire, '%d.%m.%Y') }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥.</i>
{{ END }}
{{ END }}

<b>üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF active_services.size > 0 || expired_services.size > 0 }}
                {{
                    limit = 1;
                    offset = args.0 || 0;
                    offset = (offset < 0) ? 0 : offset;
                    active_services = ref(user.services.list_for_api('filter', { 'status' => 'ACTIVE' }, 'limit', limit, 'offset', offset));
                    expired_services = ref(user.services.list_for_api('filter', { 'status' => 'NOT PAID' }, 'limit', limit, 'offset', offset));
                }}
                {{ IF offset > 0 || active_services.size == limit || expired_services.size == limit }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/manage_services {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF active_services.size == limit || expired_services.size == limit }}
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/manage_services {{ offset + limit }}"
                    }
                    {{ END }}
                ],
                {{ END }}
                {{ END }}
                [
                    {
                        "text": "üõí –ö—É–ø–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/pricelist"
                    },
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/manage_services"
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/pays' %>
{
    "sendMessage": {
        "text": "‚ò∞ <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b>",
        "reply_markup": {
            "inline_keyboard": [
                {{
                    limit = 7;
                    offset = args.0 || 0;
                    offset = (offset < 0) ? 0 : offset;
                    pays = ref(user.pays.list_for_api('limit', limit, 'offset', offset));
                }}
                {{ IF pays.size > 0 }}
                    {{ FOR item in pays }}
                    [
                        {
                            "text": "üìÖ –î–∞—Ç–∞: {{ item.date }} | üí∞ {{ item.money }} —Ä—É–±.",
                            "callback_data": "/checkpay {{ item.id }}"
                        }
                    ],
                    {{ END }}
                {{ ELSE }}
                    [
                        {
                            "text": "‚ùóÔ∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –ø–ª–∞—Ç–µ–∂–∞—Ö.",
                            "callback_data": "/menu"
                        }
                    ],
                {{ END }}
                {{ IF pays.size == limit || offset > 0 }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/pays {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF pays.size == limit }}
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/pays {{ offset + limit }}"
                    }
                    {{ END }}
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/checkpay' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{
    userPay = ref(pay.list_for_api('limit', 1, 'filter', {"id" = args.0})).first;
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userData = user.id(userPay.user_id);
}}
{{ TEXT = BLOCK }}
üí∏ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ</b>
üÜî <b>ID –ø–ª–∞—Ç–µ–∂–∞:</b> {{ userPay.id }}
üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {{ userData.full_name.replace('"', '"') }} ({{ userData.user_id }})

üìÖ <b>–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞:</b> {{ userPay.date }}
üí≥ <b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</b> {{ userPay.pay_system_id }}
üí∞ <b>–°—É–º–º–∞:</b> {{ userPay.money }} —Ä—É–±.

{{ IF userPay.telegram_bot == 'telegram_bot' }}
‚≠ê <b>–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏:</b> {{ userPay.currency }}
{{ END }}

{{ IF userPay.currency == 'XTR' }}
‚≠ê <b>–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏:</b> {{ userPay.currency }}
{{ END }}

{{ IF userPay.comment.comment }}
üìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É:</b>
<blockquote>{{ userPay.comment.comment }}</blockquote>
{{ END }}

{{ IF payData }}
üìÇ <b>–î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞:</b>
<blockquote> üÜî <b>ID –≤ —Å–∏—Å—Ç–µ–º–µ:</b> {{ payData.id }}
üìä <b>–°—Ç–∞—Ç—É—Å:</b> {{ payData.status }}
{{ IF payCard }}
–¢–∏–ø –∫–∞—Ä—Ç—ã: {{ payCard.card_type }}
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {{ payCard.first6 }}******{{ payCard.last4 }}
–ë–∞–Ω–∫: {{ payCard.issuer_name }}
–°—Ç—Ä–∞–Ω–∞ –±–∞–Ω–∫–∞: {{ payCard.issuer_country }}
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {{ payCard.expiry_month }}/{{ payCard.expiry_year }}
{{ END }}
{{ IF payMethod.type == 'sbp' }}
–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –°–ë–ü
–ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –°–ë–ü: {{ payMethod.sbp_operation_id }}
–ë–∏–∫ –ë–∞–Ω–∫–∞: {{ payMethod.payer_bank_details.bic }}
{{ END }}

{{ IF payMethod.title.match('YooMoney') }}
–ö–æ—à–µ–ª–µ–∫ YooMoney: {{ payMethod.title }}
ID –∫–æ—à–µ–ª—å–∫–∞: {{ payMethod.account_number }}
{{ END }}
</blockquote>
{{ END }}

{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/checkpay {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥ ‚á¶",
                        "callback_data": "/pays"
                    }
                ]
            ]
        }
    }
}

<% CASE ['/list'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "üîë  –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∫–ª—é—á",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref( user.services.list_for_api( 'category', 'vpn-%' ) ) }}
                {{ SWITCH item.status }}
                  {{ CASE 'ACTIVE' }}
                  {{ icon = '‚úÖ' }}
                  {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
                  {{ CASE 'BLOCK' }}
                  {{ icon = '‚ùå' }}
                  {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                  {{ CASE 'NOT PAID' }}
                  {{ icon = 'üí∞' }}
                  {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                  {{ CASE }}
                  {{ icon = '‚è≥' }}
                  {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                [
                    {
                        "text": "{{ item.name }} - {{ icon }} {{ status }}",
                        "callback_data": "/service {{ item.user_service_id }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚úö –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á",
                        "callback_data": "/pricelist"
                    }
                ],
                [
                    {"text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                     }
                ]
           ]
        }
    }
}
<% CASE [ '/service', '/back', '/install' ]%>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ data_limit = storage.read('name','us_' _ args.0 ).data_limit }}
{{ data_reset = storage.read('name','us_' _ args.0 ).data_limit_reset_strategy }}
{{ limit =  data_limit / 1024 / 1024 / 1024 }}
{{ IF data_reset == 'no_reset' }}
{{ limit_reset = ''}}
{{ ELSIF data_reset == 'day' }}
{{ limit_reset = '–≤ –¥–µ–Ω—å'}}
{{ ELSIF data_reset == 'week' }}
{{ limit_reset = '–Ω–∞ –Ω–µ–¥–µ–ª—é'}}
{{ ELSIF data_reset == 'month' }}
{{ limit_reset = '–≤ –º–µ—Å—è—Ü'}}
{{ ELSIF data_reset == 'year' }}
{{ limit_reset = '–≤ –≥–æ–¥'}}
{{ END }}

{{ USE date }}
{{ calc = date.calc }}
{{ d2 = date.format(item.created, '%Y %m %d %H %M %S').split(' ') }}
{{ d1 = date.format(date.now, '%Y %m %d %H %M %S').split(' ') }}
{{ diff = calc.Delta_DHMS(d2.0, d2.1, d2.2, d2.3, d2.4, d2.5, d1.0, d1.1, d1.2, d1.3, d1.4, d1.5) }}
{{ days = (diff.0 * 24) + diff.1 }}

{{ IF cmd == '/install' }}
{
    "deleteMessage": { "message_id": {{ message.message_id - 1 }} }
},
{{ END }}
{{ IF cmd == '/back' }}
{
    "deleteMessage": { "message_id": {{ message.message_id - 1 }} }
},
{
    "deleteMessage": { "message_id": {{ message.message_id - 2 }} }
},
{
    "deleteMessage": { "message_id": {{ message.message_id - 3 }} }
},
{{ END }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        {{ SWITCH us.status }}
          {{ CASE 'ACTIVE' }}
          {{ icon = '‚úÖ' }}
          {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
          {{ CASE 'BLOCK' }}
          {{ icon = '‚ùå' }}
          {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
          {{ CASE 'NOT PAID' }}
          {{ icon = 'üí∞' }}
          {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
          {{ CASE }}
          {{ icon = '‚è≥' }}
          {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
        {{ END }}
        "text": "<b>–£—Å–ª—É–≥–∞</b>: {{ us.name }} \n<b>–ù–æ–º–µ—Ä —É—Å–ª—É–≥–∏:</b>{{ args.0 }}{{ IF us.expire }}\n<b>–û–ø–ª–∞—á–µ–Ω–∞ –¥–æ</b>: {{ us.expire }}{{ END }}\n{{ IF limit }}<b>–õ–∏–º–∏—Ç</b>: <code>{{ limit }}</code> –ì–± {{ limit_reset }}{{ END }}<b>–°—Ç–∞—Ç—É—Å</b>: {{ icon }} {{ status }}\n\n –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
            {{ IF us.status == 'ACTIVE' }}
                {{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
            {{ IF us.category.grep('^vpn-mz-').first }}
[
                    {
                        "text": "IOS üì±",
                        "callback_data": "/vios {{ args.0 }}"
                    },
                    {
                        "text": "Android üì±",
                        "callback_data": "/vandroidsingbox {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "Windows üñ•Ô∏è",
                        "callback_data": "/vwin {{ args.0 }}"
                    },
                    {
                        "text": "MACOS üñ•Ô∏è",
                        "callback_data": "/vmac {{ args.0 }}"
                    }
                ],
            {{ END }}
        {{ END }}
        {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí∞ –û–ø–ª–∞—Ç–∏—Ç—å",
                        "callback_data": "/balance"
                    }
                ],
        {{ END }}
        {{ IF us.status != 'PROGRESS' }}
                [
                    {
                        "text": "‚ùå –£–¥–∞–ª–∏—Ç—å",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
        {{ END }}
                [
                    {
                        "text": "‚á¶ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/pricelist' %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "‚ò∑ –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∑–∞–∫–∞–∑–∞",
        "reply_markup" : {
            "inline_keyboard": [
            {{ FOR item IN ref(service.api_price_list( 'category', 'vpn-%' ).nsort('cost')) }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} —Ä—É–±.",
                        "callback_data": "/serviceorder {{ item.service_id }}"
                    }
                ],
            {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/serviceorder' %>
{
    "shmServiceOrder": {
        "service_id": "{{ args.0 }}",
        "check_exists_unpaid": 1,
        "callback_data": "/pocessing",
        "cb_not_enough_money": "/balance",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE '/delete' %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "callback_query_id": "{{ callback_query.id }}",
        "text": "üóë <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏. –£—Å–ª—É–≥—É –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</b>",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üóë –î–ê, –£–î–ê–õ–ò–¢–¨! üóë",
                        "callback_data": "/delete_confirmed {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/delete_confirmed' %>
{
    "editMessageText": { "message_id": {{ message.message_id }} }
},
{
    "shmServiceDelete": {
        "usi": "{{ args.0 }}",
        "callback_data": "/list",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE ['/help'] %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n\n–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–ø–∏—à–∏ –≤ –ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–î–ª—è –ö–ª—é—á–µ–π VLESS",
                        "callback_data": "/vless"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['/vios'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone:\n\n1. 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Streisand –∏–∑ AppStore\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://apps.apple.com/ru/app/streisand/id6450534064"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]                        
            ]
        }
    }
}
<% CASE ['/vandroidsingbox'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify –∏–∑ PlayMarket\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://play.google.com/store/apps/details?id=app.hiddify.com"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]      
            ]
        }
    }
}
<% CASE ['/vwin'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–°–∫–∞—á–∞—Ç—å Hiddify-Next",
                        "url": "https://github.com/hiddify/hiddify-next/releases/download/v2.5.7/Hiddify-Windows-Setup-x64.exe"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]      
            ]
        }
    }
}
<% CASE ['/vmac'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MacOS:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://apps.apple.com/ru/app/streisand/id6450534064"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]                        
            ]
        }
    }
}
<% CASE ['/referrals', 'ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞'] %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "ü§ù–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n\n–ü—Ä–∏–≤–æ–¥–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ {{ config.billing.partner.income_percent }}% —Å –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n\n‚¨áÔ∏èÔ∏è –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n‚îî {{ bot }}?start={{ user.id }}\n\nüèÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚îú –ü—Ä–∏–≤–µ–¥–µ–Ω–æ –¥—Ä—É–∑–µ–π: {{ user.referrals_count }}\n‚îî –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }} ‚ÇΩ",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
                        "url": "https://t.me/share/url?url={{ bot }}?start={{ user.id }}&text="
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/show_mz_keys' %>
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{
    "printQrCode": {
        "data": "{{ subscription_url }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>–°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤—Å—Ç–∞–≤—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ :</b>\n<code>{{ subscription_url }}</code>"
        }
    }
},
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
    "printQrCode": {
        "data": "{{ vless_tcp }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>–¢–≤–æ—è —Å—Å—ã–ª–∫–∞ VLESS TCP (–î–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏):</b>\n<code>{{ vless_tcp }}</code>"
        }
    }
},
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "text": "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö —Å—Å—ã–ª–æ–∫ –≤ —Å–ª—É—á–∞–µ , –µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/back {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/show_mz_keys_1' %>
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{
    "sendMessage": {
        "text": "‚úÖ –í–∞—à –∫–ª—é—á —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n\nüëâ<a href=\"{{ subscription_url }}\"><b> –£–°–¢–ê–ù–û–í–ò–¢–¨</b></a>\n\n‚ùì–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á‚Äì –ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: <a href=\"{{ support }}\"><b>–ù–ê–ü–ò–°–ê–¢–¨</b></a> (–æ—Ç–≤–µ—á–∞–µ–º –±—ã—Å—Ç—Ä–æ)\n\nüî• –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –∫–ª—é—á –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\nüí∏ –ó–∞–±–∏—Ä–∞–π {{ config.billing.partner.income_percent }}% —Å –∫–∞–∂–¥–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∞\n\nüëâ –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: <b>{{ bot }}?start={{ user.id }}</b>\n\n–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ‚Äì /start",
        "parse_mode": "HTML"
    }
}
<% CASE ['/pocessing'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥—É...",
        "parse_mode": "HTML"
    }
}

<% CASE '/notifications_active' %>
{{ item = us.id( args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ TEXT = BLOCK }}
üéâ <b>üéä –£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b> üöÄ

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞

<b>üìÖ –î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b> {{ USE date }}{{ date.format(item.created, '%d.%m.%Y–≥. %H:%M') }}
<b>‚è≥ –î–æ:</b> {{ USE date }}{{ date.format(item.expire, '%d.%m.%Y–≥. %H:%M') }}

<b>üëâ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.</b>
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
			
                [
                    {
                        "text": "üöÄ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ args.0 }}"
                        }
                    }
                ],
                [
                    {
                        "text": "üü¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä—É—á–Ω—É—é",
                        "callback_data": "/list {{ item.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/start"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_block' %>
{{ item = us.id(args.0) }}
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ IF event_name == "BLOCK" }}
{{ TEXT = BLOCK }}
<b>üö´ –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚ö†Ô∏è –°—Ç–∞—Ç—É—Å:</b> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞

<b>üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> <i>{{ user.pays.forecast('blocked', 1).total }}‚ÇΩ</i>
<b>‚ùó –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</b> <i>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.</i> üí≥

<b>üëâ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á–µ—Ç –∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.</b>
{{ END }}
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å",
                        "callback_data": "/balance {{ user.pays.forecast('blocked', 1).total }}"
                    }
                ],
                {{ END }}
                {{ IF us.status != 'PROGRESS' }}
                [
                    {
                        "text": "üóë –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:menu' %>
{{ TEXT = BLOCK }}
„Ä† <b>–ú–µ–Ω—é {{ role = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); role; }}</b>

‚≠ïÔ∏è –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π!
{{ END }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
                        "callback_data": "admin:users:list"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ],
                {{ IF user.settings.role == 'admin' || (user.settings.role == 'moderator' && user.settings.moderate.settings == 1 )}}
                [
                    {
                        "text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞",
                        "callback_data": "admin:settings"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="settings");
}}

{{ TEXT = BLOCK }}
<b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞</b>

–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ: {{ notPaidStatus = (checkNotPaidServices == 0 ? '‚≠ïÔ∏è –í—ã–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –í–∫–ª—é—á–µ–Ω–æ'); notPaidStatus; }}

–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π: {{ messageTypeStatus = (defaultMessageType == 'editMessageText' ? '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : 'üÜï –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'); messageTypeStatus; }}
{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                        "callback_data": "admin:settings:change notpaid"
                    }
                ],
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π",
                        "callback_data": "admin:settings:change msg"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings:change' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;

    IF args.0 == 'notpaid'; 
        IF checkNotPaidServices == 0;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 1, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        ELSIF checkNotPaidServices == 1;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 0, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        END;
        sendAlert(errtext="‚úÖ –ó–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    
    ELSIF args.0 == 'msg';
        IF defaultMessageType == 'sendMessage';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'editMessageText', 'menuCmd' => 'menu' );
        ELSIF defaultMessageType == 'editMessageText';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'sendMessage', 'menuCmd' => 'start' );
        END;
        sendAlert(errtext="‚úÖ –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    END;
}}


<% CASE 'admin:users:list' %>
{{
    limit = 7;
    offset = (args.0 || 0);
    users = ref(user.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter',{"gid" = 0}));
    getCountUsers = ref(user.list_for_api('admin', 1, 'limit', 10000, filter, {"gid" = 0})).size;
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {{ getCountUsers - 1 }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
			[{ "text": "üîé –ù–∞–π—Ç–∏ –ø–æ ID", "callback_data": "admin:users:search" }],
                {{ FOR item IN users }}
                    {{ status = (item.block == 0 ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status _' '_ item.full_name.replace('"', '\"')  }} ({{ item.user_id _'-'_ item.login }})",
                            "callback_data": "admin:users:id {{ item.user_id _' '_ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF users.size == limit || offset > 0 }}
                    [
                        {{ IF offset > 0 }}
                            {
                                "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                "callback_data": "admin:users:list {{ offset - limit }}"
                            },
                        {{ END }}
                        {{ IF users.size == limit }}
                            {
                                "text": "–ï—â—ë ‚û°Ô∏è",
                                "callback_data": "admin:users:list {{ limit + offset }}"
                            }
                        {{ END }}
                    ],
                {{ END }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:users:id' %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin'; }}
{{ user = user.switch(args.0) }}
{{
    userData = user.id(args.0);
    userPartner = user.id(userData.partner_id);
    userServices = ref(userData.services.list_for_api('category', '%'));
    offset = args.1;
}}

{{ TEXT = BLOCK }}
üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

–°—Ç–∞—Ç—É—Å: {{ userStatus = (userData.block == 0 ? "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" : "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"); userStatus; }}

–ò–º—è: {{ userData.full_name.replace('"', '\"') }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {{ userData.created }}
–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞: {{ userData.last_login }}
–ö—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {{ userPartner ? userPartner.full_name + " - " + userPartner.login : "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" }}

–ë–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.  
–ë–æ–Ω—É—Å—ã: {{ userData.get_bonus }} —Ä—É–±.  
–°–∫–∏–¥–∫–∞: {{ userData.discount }}

–ö–æ–ª-–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫: {{ userServices.size }}

{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏",
                        "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ offset }}"
                    }
                ],
                [
                    {
                        "text": "üí∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
				[
                    {
                        "text": "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üí¨",
                        "callback_data": "admin:user:msg {{ user.settings.telegram.chat_id }}"
                    }
                ],
                [
                    {
                        "text": "{{ status = (userData.block == 0 ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                        "callback_data": "admin:users:block {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:user:msg' %>
{
    "sendMessage": {
        "text": "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #{{ args.0 }}#",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:users:block' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="blockUser");

    # Variables
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    retcode = (userData.block == 1 ? "0" : "1");
    ret = userData.set(block = retcode);
    status = (userData.block == 1 ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");

    sendAlert(errtext="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $name ($userData.user_id) $status", redirect="admin:users:id $userData.user_id");
}}

<% CASE 'admin:users:id:subs' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}
{{ TEXT = BLOCK }}
üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏

–ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

{{ IF userServices.size <= 0}}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                    {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status; item.user_service_id _' - '_ item.name  }}",
                            "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                        }
                    ],
                {{ END }}

                {{ IF userServices.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:list {{ limit + offset }}"
                        }
                    ],
                {{ END }}

                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:list {{ offset - limit }}"
                        }
                    ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}

<% CASE ['admin:users:id:subs'] %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}

{{ TEXT = BLOCK }}
üîê <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏</b>

üë§ –ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
üÜî ID: {{ userData.user_id }}  
üì± Telegram: {{ userData.settings.telegram.login }}
üîë –õ–æ–≥–∏–Ω: {{ userData.login }}  

{{ IF userServices.size <= 0 }}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                [
                    {
                        "text": "{{ status }} {{ item.user_service_id }} - {{ item.name }}",
                        "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                    }
                ],
                {{ END }}

                {{ IF userServices.size == limit }}
                [
                    {
                        "text": "‚û°Ô∏è –ï—â—ë",
                        "callback_data": "admin:users:list {{ limit + offset }}"
                    }
                ],
                {{ END }}

                {{ IF offset > 0 }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ offset - limit }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:subs:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in servicesArray }}
                [
                    {
                        "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                        "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                         "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                       "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:add:free' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addFreeSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É —Å 0 —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    {{ FOR item in servicesArray }}
        [
            {
                "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id _' free' }}"
            }
        ],
    {{ END }}
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
        }
    ],
    [
        {
            "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
        }
    ]
            ]
        }
    }
}


<% CASE 'admin:subs:add:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    userData = user.id(args.0);
    createService = service.id(args.1);
    user = user.switch(userData.user_id);
    name = userData.full_name.replace('"', '\"');

    IF args.2 == 'free';
        ret = userData.us.create('service_id' = createService.service_id, 'cost' = 0, 'check_allow_to_order' = 0);
    ELSE;
        ret = userData.us.create('service_id' = createService.service_id, 'check_allow_to_order' = 0);
    END;

    sendAlert(errtext="‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ $createService.name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $name ($userData.user_id)", redirect="admin:users:id:subs $userData.user_id");
}}

<% CASE '/admusermsg' %>
{
"sendMessage": {
        "text": "#{{ args.0 }}#\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:subs:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    # Arguments:
        # 0 - ID of user service id 
        # 1 - ID of user
    # Variables:
    USE date;
    userData = user.id(args.1);
    userService = userData.us.id(args.0);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
    userSubUrl = (userData.storage.read('name', 'vpn_mrzb_'_ userService.user_service_id).subscription_url || "https://notfound.com");
    subData = http.get(userSubUrl _'/info');
}}
{{ TEXT = BLOCK }}
üîê –ü–æ–¥–ø–∏—Å–∫–∞ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

ID: {{ userService.user_service_id }}
ID —Å–ø–∏—Å–∞–Ω–∏—è: {{ userService.withdraw_id }}
–°—Ç–∞—Ç—É—Å: {{ userService.status }}
–°–æ–∑–¥–∞–Ω–∞: {{ userService.created }}
–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è: {{ userService.expire }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }}

–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω: {{ subData.online_at ? date.format(subData.online_at, '%d.%m.%Y %R') : '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏' }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîó –ü–æ–¥–ø–∏—Å–∫–∞ {{ userService.user_service_id }} - {{ userServiceData.name }}",
                        "web_app": {
                            "url": "{{ userSubUrl }}"
                        }
                    }
                ],
                {{ IF userService.status == 'ACTIVE' || userService.status == 'BLOCK' }}
                    [
                        {
                            "text": "{{ status = (userService.status == 'ACTIVE' ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                            "callback_data": "admin:subs:change:status {{ userService.user_service_id }}"
                        }
                    ],
                {{ ELSIF userService.status == 'PROGRESS' }}
                    [
                        {
                            "text": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ (–æ–±–Ω–æ–≤–∏—Ç–µ)",
                            "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                {{ IF userService.status == 'BLOCK' || userService.status == 'NOT PAID' }}
                    [
                        {
                            "text": "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                            "callback_data": "admin:subs:delete {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "ü´∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏",
                        "callback_data": "admin:withdraws:id {{ userService.withdraw_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:current {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Å–ª–µ–¥. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:next {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:subs {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:current:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    username = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);
    
    IF (ret = userData.us.id(data.user_service_id).change('service_id' = nextService));
        sendAlert(
            errtext="‚úÖ –¢–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ $serviceData.name #$data.user_service_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username (#$userData.user_id) –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $userServiceNext.name",
            redirect="admin:subs:id $data.user_service_id $userData.user_id"
        );
    END;
}}


<% CASE 'admin:subs:change:next' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ IF userService.next != userService.service_id || userService.next != 0 }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }} ({{ userService.next }})
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:next:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:next:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    username = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);

    
    IF (ret = userData.us.id(data.user_service_id).set("next", nextService));
        sendAlert(
            errtext="‚úÖ –°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ $serviceData.name #$data.user_service_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username ($userData.user_id) –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ $userServiceNext.name",
            redirect="admin:subs:id $data.user_service_id $userData.user_id"
        );
    END;
}}


<% CASE 'admin:subs:change:status' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    name = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);

    IF data.status == 'ACTIVE';
        ret = userData.us.id(data.user_service_id).block;
    ELSIF data.status == 'BLOCK';
        ret = userData.us.id(data.user_service_id).activate;
    END;
    
    status = (data.status == 'ACTIVE' ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
    sendAlert(
        errtext="‚úÖ –£—Å–ª—É–≥–∞ $serviceData.name ($data.user_service_id) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) $status",
        redirect="admin:subs:id $data.user_service_id $userData.user_id"
    );
}}

<% CASE 'admin:subs:delete' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="deleteSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    name = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);

    IF data.status == 'BLOCK' || data.status == 'NOT PAID';
        IF (ret = userData.us.id(data.user_service_id).delete);
            sendAlert(
                errtext="‚ùå –£—Å–ª—É–≥–∞ $serviceData.name ($data.user_service_id) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) —É–¥–∞–ª–µ–Ω–∞!",
                redirect="admin:users:id:subs $userData.user_id"
            );
        END;
    END;
}}


<% CASE 'admin:users:id:pays' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userPays }}
                    [
                        {
                            "text": "(ID: {{ item.id }}), {{ item.money }} —Ä—É–±, {{ item.date }}",
                            "callback_data": "admin:pays:id {{ item.id }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userPays.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂",
                        "callback_data": "admin:pays:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíªüë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    userPay = ref(pay.list_for_api('admin', 1, 'filter', {"id" = args.0})).first;
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userData = user.id(userPay.user_id);
	partnerData = user.id(data.comment.from_user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ ID {{ userPay.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞: {{ userPay.date }}
–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {{ userPay.pay_system_id }}
–°—É–º–º–∞: {{ userPay.money }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}

{{ IF userPay.comment.comment }}
<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É</b>
<blockquote>{{ userPay.comment.comment }}</blockquote>
{{ END }}

{{ IF payData }}
<b>–î–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ</b>
<blockquote>
ID –≤ —Å–∏—Å—Ç–µ–º–µ: {{ payData.id }}
–°—Ç–∞—Ç—É—Å: {{ payData.status }}
{{ IF payCard }}
–¢–∏–ø –∫–∞—Ä—Ç—ã: {{ payCard.card_type }}
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {{ payCard.first6 }}******{{ payCard.last4 }}
–ë–∞–Ω–∫: {{ payCard.issuer_name }}
–°—Ç—Ä–∞–Ω–∞ –±–∞–Ω–∫–∞: {{ payCard.issuer_country }}
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {{ payCard.expiry_month }}/{{ payCard.expiry_year }}
{{ END }}
{{ IF payMethod.type == 'sbp' }}
–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –°–ë–ü
–ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –°–ë–ü: {{ payMethod.sbp_operation_id }}
–ë–∏–∫ –ë–∞–Ω–∫–∞: {{ payMethod.payer_bank_details.bic }}
{{ END }}

{{ IF payMethod.title.match('YooMoney') }}
–ö–æ—à–µ–ª–µ–∫ YooMoney: {{ payMethod.title }}
ID –∫–æ—à–µ–ª—å–∫–∞: {{ payMethod.account_number }}
{{ END }}
</blockquote>
{{ END }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:pays {{ userPay.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
            ]
        }
    }
}

<% CASE 'admin:pays:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 20"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 100"
                    }
                ],
                [
                    {{ FOR item IN ref(service.api_price_list('category', '%')).nsort('cost') }}
                        {
                            "text": "{{ item.name }} - {{ item.cost }}‚ÇΩ",
                            "callback_data": "admin:pays:add:confirm {{ userData.user_id _ ' ' }} {{ item.cost }}"
                        },
                    {{ END }}
                ],
                [
                    {
                        "text": "–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É",
                        "callback_data": "admin:pays:add:manual {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:add:manual' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);

    ret = user.set_settings({'state' => 'awaiting_amount'});
    ret = user.set_settings({'bot' => {'switchUser' => userData.user_id} });
}}

{{ TEXT = BLOCK }}
üí¨ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }}
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}


<% CASE 'admin:pays:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF (pay = userData.payment('money', amount, 'pay_system_id', 'manual'));
        sendAlert(
            errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.balance —Ä—É–±.",
            redirect="admin:pays:add $userData.user_id"
        );
    END;
}}

<% CASE 'admin:users:id:bonuses' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    limit = 5;
    offset = (args.1 || 0);
    userData = user.id(args.0);
    userBonuses = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"user_id" = userData.user_id}));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤: {{ userData.get_bonus }} —Ä—É–±.
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userBonuses }}
                    [
                        {
                            "text": "ID: {{ item.id }} ‚Äî {{ item.bonus }} —Ä—É–±.",
                            "callback_data": "admin:bonuses:id {{ item.id _ ' ' _ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userBonuses.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å—ã",
                        "callback_data": "admin:bonuses:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    offset = args.1;
    data = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"id" = args.0})).first;
    userData = user.id(data.user_id);
    partnerData = user.id(data.comment.from_user_id)
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤ ID {{ data.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

ID –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.id }}
–î–∞—Ç–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.date }}
–°—É–º–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.bonus }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id _ ' ' _ offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–æ–Ω—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ {{ userData.get_bonus }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 20"
                    },
                    {
                        "text": "30 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 30"
                    },
                    {
                        "text": "40 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 40"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 100"
                    },
                    {
                        "text": "150 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 150"
                    },
                    {
                        "text": "200 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 200"
                    }
                ],
                [
                    {
                        "text": "–£–±—Ä–∞—Ç—å {{ userData.get_bonus }}",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} -{{ userData.get_bonus }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF amount < 0;
        ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'});
    ELSE;
        IF (ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}));
            notification(
                chat_id="$userData.settings.telegram.chat_id",
                TEXT="üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ $amount –±–æ–Ω—É—Å–æ–≤ –Ω–∞ —Å—á–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            ); ",";
        END;
    END;

    sendAlert(
        errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.get_bonus —Ä—É–±.",
        redirect="admin:bonuses:add $userData.user_id"
    );
}}

<% CASE 'admin:withdraws:id' %>
{{
    data = ref(wd.list_for_api('admin', 1, 'filter', {"withdraw_id" = args.0})).first;
    userData = user.id(data.user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏ ‚Ññ{{ data.withdraw_id }}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–£—Å–ª—É–≥–∞: {{ data.name }} ({{ data.user_service_id }})
–°—Ç–æ–∏–º–æ—Å—Ç—å: {{ data.cost }}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {{ data.create_date }}
–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {{ data.withdraw_date }}
–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ —Å–ø–∏—Å–∞–Ω–∏—é: {{ data.end_date }}
–ö–æ–ª-–≤–æ –º–µ—Å—è—Ü–µ–≤: {{ data.months }}

<b>–°–ø–∏—Å–∞–Ω–∏–µ:</b>
<blockquote>
–°–∫–∏–¥–∫–∞: {{ data.discount }}%
–ë–æ–Ω—É—Å–æ–≤: {{ data.bonus }} —Ä—É–±
<b>–í—Å–µ–≥–æ: {{ data.total }}</b>

</blockquote>
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:subs:id {{ data.user_service_id _ ' ' _  userData.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
]
        }
    }
}

<% CASE 'admin:users:search' %>
{{
    # Set state for user
    ret = user.set_settings({'state' => 'awaiting_search'});
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}

<% CASE ['notification:promo'] %>

{{ TEXT = BLOCK }}
‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ {{ args.0 }} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:create' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</b>

üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote><b>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</b></blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:block' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚≠ïÔ∏è <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE ['notification:activate'] %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</b>

üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:prolongate' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –ø—Ä–æ–¥–ª—ë–Ω!</b>

üóìÔ∏è –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:forecast' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
    cost = user.pays.forecast('blocked', 1).total;
}}
{{ TEXT = BLOCK }}
üí∞ <b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª—é—á–∏</b>

    {{ FOR item in ref(user.pays.forecast.items('blocked', 1)) }}
<code>
üîë #<b>{{ item.user_service_id }} - {{ item.name }}</b>
        {{ IF item.expire }}
üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(item.expire, '%d.%m.%Y') }}
        {{ END }}
</code>
    {{ END }}

<b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }} —Ä—É–±.
<b>–ë–∞–ª–∞–Ω—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ </b>{{ cost }} —Ä—É–±.
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å {{ cost }} —Ä—É–±.",
            "web_app": {
                "url": "{{ config.api.url }}/shm/v1/public/tg_payment?format=html"
            }
        }
    ],
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:not_enough_money' %>
{{
    cost = user.pays.forecast('blocked',1).total;
}}
{{ TEXT = BLOCK }}
‚ÑπÔ∏è <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–ª—é—á–µ–π</b>

    {{ FOR item in ref(user.pays.forecast.items) }}
    {{ # NEXT IF item.status != 'NOT PAID'# }}
<code>üîë #<b>{{ item.user_service_id }} - {{ item.name }}</b></code>
    {{ END }}

<b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å </b>{{ cost }} —Ä—É–±.
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å {{ cost }} —Ä—É–±.",
            "web_app": {
                "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
            }
        }
    ],
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:payment' %>
{{ amount = user.pays.last.money }}
{{ total = user.balance }}
{{
    amount = user.pays.last.money;
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ü–ª–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É {{ amount }} —Ä—É–±. –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.</b>

üí∞ <b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }}
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:promo' %>

{{ TEXT = BLOCK }}
‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ {{ args.0 }} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'promocode' %>
{{
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    ret = user.set_settings({'state' => 'awaiting_promocode'});
    IF user.settings.bot.reqPromo;
        temp = user.settings.bot.reqPromo + 1;
        delete(msgID=[temp, user.settings.bot.reqPromo, message.message_id]);
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    ELSE;
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    END;
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:</b>
{{ END }}

{{ notification(TEXT=TEXT, force=1) }}


<% CASE DEFAULT %>

{{ IF user.settings.state == 'awaiting_search'}}
    {{
        temp = message.message_id - 1;
        delete(msgID=[message.message_id, temp]);
        IF message.text.match('^[1-9]\d*$');
            searchString = message.text;
            ret = user.set_settings({'state' => ''});
            ret = ref(user.list_for_api('admin', 1, 'filter', {"user_id" = searchString} ));

            IF (ret.size > 0);
                resultID = ret.first.user_id;
                redirect(callback="admin:users:id $resultID");
            ELSE;
                TEXT = "‚≠ïÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID $searchString –Ω–µ –Ω–∞–π–¥–µ–Ω!";
            END;

        ELSE;
            ret = user.set_settings({'state' => ''});
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> ID –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!";
        END;

        notification(TEXT=TEXT);
    }}
	
{{ ELSIF user.settings.state == 'awaiting_user_message' }}
{{
    temp = message.message_id - 1;
    delete(msgID=[message.message_id, temp]);

    IF message.text.length > 0;
        userID = user.settings.temp_user_id;
        messageText = message.text;
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        ret = user.set_settings({'state' => '', 'temp_user_id' => ''});

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        notification(
            TEXT="üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n<blockquote>$messageText</blockquote>",
            user_id=userID
        );

        TEXT = "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é #$userID!";
    ELSE;
        ret = user.set_settings({'state' => ''});
        TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!";
    END;

    notification(TEXT=TEXT);
}}


{{ ELSIF user.settings.state == 'awaiting_promocode' }}
    {{
        IF user.settings.bot.reqPromo;
            temp = user.settings.bot.reqPromo + 1;
            temp2 = user.settings.bot.reqPromo - 1;
            delete(msgID=[temp, temp2, user.settings.bot.reqPromo, message.message_id]);
            ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
        END;

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ
        IF message.text.match('^[a-zA-Z0-9_-]+$');
            promocode = message.text;
            ret = user.set_settings({'state' => ''});
            
            IF promo.apply(promocode);
                TEXT = "‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>";
            ELSE;
                TEXT = "‚≠ïÔ∏è <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>";
            END;

        ELSE;
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, —Ç–∏—Ä–µ (-) –∏ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (_).";
        END;
    }}

    {{ BUTTONS = BLOCK }}
        [
            {
                "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –µ—â—ë",
                "callback_data": "promocode"
            }
        ],
        [
            {
                "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                "callback_data": "/menu"
            }
        ]
    {{ END }}
    {{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


{{ ELSIF user.settings.state == 'awaiting_amount' AND user.settings.bot.switchUser }}
    {{
        userData = user.id(user.settings.bot.switchUser);
        IF message.text.match('^-?\d+(\.\d+)?$');
            amount = message.text;

            IF (ret = userData.payment('money', amount, 'pay_system_id', 'manual'));
                TEXT = "‚úÖ <b>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $userData.user_id –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.</b>\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: $userData.balance —Ä—É–±.";
            ELSE;
                TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
            END;

            ret = user.set_settings({'state' => ''});
            ret = user.set_settings({'bot' => {'switchUser' => ''} });
        ELSE;
            TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
        END;
    }}

    {{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

{{ ELSIF message.document OR message.photo }}
{
    "forwardMessage": {
        "chat_id": {{ config.shmcustomlab.payment_group }},
        "from_chat_id": {{ message.chat.id }},
        "message_id": {{ message.message_id }}
    }
},
{{ TEXT = BLOCK }}
‚úÖ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ {{ config.shmcustomlab.service_name }}

‚è≥ –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤–∞—à –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω.
üì© –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –¥—Ä—É–≥–∏–µ —ç–º–æ–¥–∑–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–∫–∞–∂–∏! üöÄ
{{ END }}
{{ AmmountToPay = user.pays.forecast('blocked',1).total }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "deleteMessage": { "message_id": {{ message.message_id - 1 }} }
},
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ] 
            ]
        }
    }
},
{{ PERL }}
    use Core::Utils qw(
        passgen
    );
    my $passgen = passgen(10);
    $stash->set('pass', $passgen);
{{ END }}
{{ PaymentID = pass }}
{{ ret = user.set_settings({ $PaymentID => 0 }) }}
{{ item = ref(user.services.list_for_api( 'category', 'vpn-%' )).first }}
{{ con = ref(user.services.list_for_api( 'category', 'vpn-mz%' )).size }}
                {{ FOR env IN ref( user.services.list_for_api( 'category', '%' ) ) }}
                {{ SWITCH item.status }}
                  {{ CASE 'ACTIVE' }}
                  {{ icon = '‚úÖ ' }}
                  {{ status = '–ê–∫—Ç–∏–≤–Ω–∞—è' }}
                  {{ CASE 'BLOCK' }}
                  {{ icon = '‚ùå ' }}
                  {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                  {{ CASE 'NOT PAID' }}
                  {{ icon = 'üí∞ ' }}
                  {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                  {{ CASE }}
                  {{ icon = '‚è≥ ' }}
                  {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                {{ END }}
{{ TEXT = BLOCK }}
üí∞ –ü–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–∞

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ({{ user.id }})
üìõ –ò–º—è: {{ user.full_name }}
üí¨ –¢–µ–ª–µ–≥—Ä–∞–º: @{{ user.settings.telegram.login }}
üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥: {{ con }}

üÜî ID –ø–ª–∞—Ç–µ–∂–∞: {{ PaymentID }}
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {{ AmmountToPay }}

üîé –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É.
‚úèÔ∏è –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞ –ø–µ—Ä–µ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.
{{ END }}
{{ encoded_status = status FILTER uri }}
{{ encoded_name = user.full_name FILTER uri }}
{{ encoded_plan = item.name FILTER uri }}
{
    "sendMessage": {
        "chat_id": {{ config.shmcustomlab.payment_group }},
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üí≥ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                        "url": "{{ config.api.url }}/shm/v1/public/HTML_payment?uid={{ user.id }}&telegram={{ user.settings.telegram.login }}&services={{ con }}&cost={{ AmmountToPay }}&serviceNumber={{ item.user_service_id }}&serviceStatus={{ encoded_status }}&PaymentID={{ PaymentID }}&format=html"
                    }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "forwardMessage": {
        "chat_id": {{ config.shmcustomlab.admin_group }},
        "from_chat_id": {{ message.chat.id }},
        "message_id": {{ message.message_id }}
    }
},
{
    "sendMessage": {
        "text": "‚ùå –û–®–ò–ë–ö–ê! –ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –º–Ω–µ –ø—Ä–∏—Å–ª–∞–ª–∏. üì© –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "reply_to_message_id": {{ message.message_id }},
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üí° –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "https://t.me/{{ config.shmcustomlab.support }}"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% END %>
