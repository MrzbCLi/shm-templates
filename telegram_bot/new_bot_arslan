{{ MACRO sendAlert BLOCK }}
    {
        "answerCallbackQuery": {
            "callback_query_id": {{ callback_query.id }},
            "parse_mode":"HTML",
            "text": "{{ errtext.replace('\n','\n') }}",
            "show_alert": true
        }
    }
    {{ IF redirect }}
        ,{
            "shmRedirectCallback": {
                "callback_data": "{{ redirect }}"
            }
        }
    {{ END }}
    {{ STOP }}
{{ END }}

{{ MACRO redirect BLOCK }}
    {
        "shmRedirectCallback": { "callback_data": "{{ callback }}" }
    }
    {{ STOP }}
{{ END }}



<%# Check for admin rights from user settings %>
<%# for use admin menu, set role = "admin" or "moderator" %>
{{ BLOCK checkAdminRights }}
    {{ IF user.settings.role != "admin" && user.settings.role != "moderator" }}
        {{ sendAlert(code=403, errtext='‚≠ïÔ∏è –†–∞–∑–¥–µ–ª –∑–∞–∫—Ä—ã—Ç', redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}


<%# Check for moderator rights %>
{{ MACRO checkModeratorRights BLOCK }}
    {{ IF user.settings.role == "moderator" && user.settings.moderate.$right != 1 }}
        {{ sendAlert(code=403, errtext="‚≠ïÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!", redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}

<%# sendMessage or editMessageText functional %>
{{ MACRO send BLOCK }}
    {{
        messageType =
            (cmd == '/start') ? 'sendMessage' :
            (cmd == '/menu' && mainMenuCmd == '/menu') ? 'editMessageText' :
            (mainMenuCmd == '/start' || cmd == '/start') ? 'sendMessage' :
            (edit == 0) ? 'sendMessage' :
            (edit == 1) ? 'editMessageText' :
            (defaultMessageType == 'editMessageText' ) ? 'editMessageText' :
            defaultMessageType;

        # Clear state
        ret = user.set_settings({'state' => ''});

        IF user.settings.bot.reqPromo > 0;
            delete(msgID=[user.settings.bot.reqPromo]);
            ret = user.set_settings({'bot' => {'reqPromo' => ''} });
        END;

        IF (cmd != '/start' && !edit && messageType != 'editMessageText' );
            delete(msgID=[message.message_id]);
        END; 
        
        # variable check for admin rights to access admin menu
        IF admin == 1;
            PROCESS checkAdminRights;
        END;
    }}
    {
        "sendChatAction": {
            "chat_id": "{{ user.settings.telegram.chat_id }}",
            "action": "typing"
        }
    },
    {
        "{{messageType}}": {
            {{ IF messageType == 'editMessageText'}}
                "message_id": "{{ message.message_id }}",
            {{ END }}
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            }
        }
    }
{{ END }}

{{ MACRO notification BLOCK }}
    {
        "sendMessage": {
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
            {{ IF force == 1 }}
                "force_reply": true,
                "input_field_placeholder": "{{ placeholder }}"
            {{ END }}
            {{ IF BUTTONS }}
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            {{ END }}
            }
        }
    }
{{ END }}

{{ MACRO delete BLOCK }}
{
    "deleteMessages": { "chat_id": {{ user.settings.telegram.chat_id }}, "message_ids": {{ toJson(msgID) }} }
},
{{ END }}
<% SWITCH cmd %>
<% CASE 'USER_NOT_FOUND' %>
{
    "sendMessage": {
        "text": "üîê <b>–ë–æ—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π</b>",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å...",
                        "callback_data": "/register {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/register' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "shmRegister": {
        "partner_id": "{{ args.0 }}",
        "callback_data": "/pricelist",
        "error": "–û–®–ò–ë–ö–ê: –õ–æ–≥–∏–Ω {{ message.chat.username }} –∏–ª–∏ chat_id {{ message.chat.id }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    }
}
<% CASE ['/start', '/menu', '–ú–µ–Ω—é'] %>
{{ IF cmd == '/menu' OR cmd == '–ú–µ–Ω—é' }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ END }}
{
    "sendMessage": {
        "text":"–ú–µ–Ω—é",
        "parse_mode": "HTML",
        "reply_markup": {
            "keyboard": [
                [
                    {"text": "–ú–µ–Ω—é"}
                ]
            ],
            "one_time_keyboard": false,
            "resize_keyboard": true
        }
    }
},
{
    "sendMessage": {
        "text": "–Ø –ë–æ—Ç Secretum ü§ñ \n\n–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ üîê –∫ –æ–±–ª–∞—á–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É ‚òÅÔ∏è\n\n‚≠ê–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä–æ–π<a href=\"https://youtube.com/shorts/fXgG4xuS6LQ?si=7Y-ekbm9WvTPxXCg\"> –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é‚≠ê</a>",
        "reply_markup": {
            "inline_keyboard": [
			    {{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole }}",
                        "callback_data": "admin:menu"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "ü™ô –ë–∞–ª–∞–Ω—Å",
                        "callback_data": "/balance"
                    }
                ],
                [
                    {
                        "text": "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å",
                        "callback_data": "/payment"
                    }
                ],
                [
                    {
                        "text": "üîë –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π",
                        "callback_data": "/list"
                    }
                ],
                [
                    {
                        "text": "ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                        "callback_data": "/referrals"
                    }
                ],
                [
                    {
                        "text": "üìï –ü–æ–º–æ—â—å",
                        "callback_data": "/help"
                    }
                ]
            ]
        }
    }
}
<% CASE '/servicechange' %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "‚ÑπÔ∏è –°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ us.name }}\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥:</b>",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref(service.api_price_list( 'category', '%' )).nsort('cost') }}
                {{ IF item.category == us.category }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} ‚ÇΩ",
                        "callback_data": "/servicechange_confirmed {{ args.0 _ ' ' _ item.service_id }}"
                    }
                ],
                {{ END }}
                {{ END }}
                [
                    {
                        "text": "‚óÑ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/servicechange_confirmed' %>
{{ ch3m = us.id( args.0 ).set('next', args.1 ) }}
{{ aaa = us.id( args.0 ).touch }}
{{ us_list = user.services.list_for_api( 'usi', args.0 ) }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "parse_mode":"HTML",
        "text": "‚úÖ –í–∞—à —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥ –∏–∑–º–µ–Ω–µ–Ω \n\n–ù–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ: <b><i>{{ service.id( us_list.next ).name }}</i></b>\n\n–ü—Ä–∏ –æ—á–µ—Ä–¥–µ–Ω–æ–π –æ–ø–ª–∞—Ç–µ –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –æ–ø–ª–∞—Ç–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞",
        "reply_markup" : {
            "inline_keyboard": [
                {{ IF user.pays.forecast('blocked',1).total > 0 }}
                [
                    {
                        "text": "–û–ø–ª–∞—Ç–∏—Ç—å {{ user.pays.forecast('blocked',1).total }} ‚ÇΩ",
                        "web_app": {
                        "url": "{{ config.api.url }}/shm/v1/template/tg_payments?format=html&session_id={{ user.gen_session.id }}"
                        }
                    }
                ],
                {{ ELSE }}
                [
                    {
                        "text": "üí∞ –ë–∞–ª–∞–Ω—Å",
                        "callback_data": "/balance"
                    }
                 ],
                {{ END }}
                [
                    {
                        "text": "‚óÑ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}

<% CASE '/balance' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "üí∞ <b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }}\n\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å: <b>{{ user.pays.forecast.total }}</b>",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å",
                        "callback_data": "/payment"
                    }
                ],
                [
                    {
                        "text": "‚ò∞ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π",
                        "callback_data": "/pays"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/list' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "üîë  –í—ã–±—Ä–∞—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ö–ª—é—á",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref( user.services.list_for_api( 'category', '%' ) ) }}
                {{ SWITCH item.status }}
                  {{ CASE 'ACTIVE' }}
                  {{ icon = '‚úÖ' }}
                  {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
                  {{ CASE 'BLOCK' }}
                  {{ icon = '‚ùå' }}
                  {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                  {{ CASE 'NOT PAID' }}
                  {{ icon = 'üí∞' }}
                  {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                  {{ CASE }}
                  {{ icon = '‚è≥' }}
                  {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                [
                    {
                        "text": "{{ icon }} {{ status }} - {{ item.name }}. {{ user.full_name }} - ({{ item.user_service_id }})",
                        {{ IF item.category != 'mz-tv' }}
                        "callback_data": "/service {{ item.user_service_id }}"
                        {{ ELSIF item.category == 'mz-tv' }}
                        "callback_data": "/setup_android {{ item.user_service_id }}"
                        {{ END }}
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üõí –ó–∞–∫–∞–∑–∞—Ç—å –ö–ª—é—á",
                        "callback_data": "/pricelist"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/service' %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        {{ SWITCH us.status }}
          {{ CASE 'ACTIVE' }}
          {{ icon = '‚úÖ' }}
          {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
          {{ CASE 'BLOCK' }}
          {{ icon = '‚ùå' }}
          {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
          {{ CASE 'NOT PAID' }}
          {{ icon = 'üí∞' }}
          {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
          {{ CASE }}
          {{ icon = '‚è≥' }}
          {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
        {{ END }}
        "text": "<b>–¢–∞—Ä–∏—Ñ:</b> {{ us.name }}\n<b>–ù–æ–º–µ—Ä –ö–ª—é—á–∞</b>: {{ us.user_service_id }}\n\n<b>–°—Ç–∞—Ç—É—Å:</b> {{ icon }}{{ status }}\n<b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {{ USE date }}{{ date.format( us.expire, '%d.%m.%Y %H:%M') }}\n\n{{ IF us.next }}<b>–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ:</b> {{ service.id( us.next ).name }}\n\n{{ END }} ",
        "reply_markup" : {
            "inline_keyboard": [
                {{ IF us.status == 'ACTIVE' }}
                {{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}

                {{ IF us.category.grep('^marzban-forigen').first }}
                {{ IF subscription_url.grep('^https:').first }}
                [
                    {
                        "text": "–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∫–ª—é—á",
                        "web_app": {
                            "url": "{{ subscription_url }}"
                        }
                    }
                ],
                [
                    {
                        "text": "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –∫–ª—é—á–∞",
                        "callback_data": "/show_mz_keys {{ args.0 }}"
                    }
                ],
                {{ ELSE }}
                [
                    {
                        "text": "–û–®–ò–ë–ö–ê: –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ SSL –¥–ª—è Marzban",
                        "callback_data": "/menu"
                    }
                ],
                {{ END }}
                {{ ELSE }}
                [
                    {
                        "text": "üóù –°–∫–∞—á–∞—Ç—å –∫–ª—é—á",
                        "callback_data": "/download_qr {{ args.0 }}"
                    },
                    {
                        "text": "üëÄ –ü–æ–∫–∞–∑–∞—Ç—å QR –∫–æ–¥",
                        "callback_data": "/show_qr {{ args.0 }}"
                    }
                ],
                {{ END }}

                {{ END }}
                {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí∞–û–ø–ª–∞—Ç–∏—Ç—å",
                        "callback_data": "/balance"
                    }
                ],
                {{ END }}
                {{ IF us.status == 'ACTIVE' || us.status == 'BLOCK' || us.status == 'NOT PAID'}}
                [
                    {
                        "text": "‚ôªÔ∏è –°–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "/servicechange {{ args.0 }}"
                    }
                ],
                {{ END }}
                {{ IF us.status != 'PROGRESS' }}
                [
                    {
                        "text": "‚ùå–£–¥–∞–ª–∏—Ç—å –∫–ª—é—á",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
<% CASE '/pricelist' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "‚ò∑ –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è –∑–∞–∫–∞–∑–∞",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref(service.api_price_list) }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} —Ä—É–±.",
                        "callback_data": "/serviceorder {{ item.service_id }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE [ '/setup_android', '/setup_android_list' ] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
{{ TEXT = BLOCK }}
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Android TV, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞

–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å Android TV

<b>–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> {{ config.shmcustomlab.tv_domain }}/{{ us.settings.pin }}

{{ END }}
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode":"HTML",
        "reply_markup" : {
            "inline_keyboard": [
                {{ IF us.status == 'ACTIVE' }}
                [
                    {
                        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é",
                        "url": "https://telegra.ph/Secretum----nastrojka-na-TV-11-05"
                    }
                ],
                {{ END }}
                {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí∞ –û–ø–ª–∞—Ç–∏—Ç—å {{ user.pays.forecast('blocked',1).total }} ‚ÇΩ",
                        "web_app": {
                        "url": "{{ config.api.url }}/shm/v1/public/webapp_payments?format=html&uid={{ user.id }}"
                        }
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
                        "url": "https://t.me/{{ config.shmcustomlab.support }}"
                    }
                ],
                [
                    {
                        "text": "‚ùå–£–¥–∞–ª–∏—Ç—å –∫–ª—é—á",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "–ù–∞–∑–∞–¥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
<% CASE '/serviceorder' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "shmServiceOrder": {
        "service_id": "{{ args.0 }}",
        "callback_data": "/list",
        "cb_not_enough_money": "/balance",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE '/download_qr' %>
{
    "uploadDocumentFromStorage": {
        "name": "vpn{{ args.0 }}",
        "filename": "vpn{{ args.0 }}.conf"
    }
}
<% CASE '/show_qr' %>
{
    "uploadPhotoFromStorage": {
        "name": "vpn{{ args.0 }}",
        "format": "qr_code_png"
    }
}
<% CASE '/delete' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "ü§î <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏. –£—Å–ª—É–≥—É –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</b>",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üß® –î–ê, –£–î–ê–õ–ò–¢–¨! üî•",
                        "callback_data": "/delete_confirmed {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
<% CASE '/delete_confirmed' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "shmServiceDelete": {
        "usi": "{{ args.0 }}",
        "callback_data": "/list",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE '/help' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendPhoto": {
        "photo": "https://ibb.co/Trq8wdF",
        "protect_content": "true",
        "parse_mode":"HTML",
        "caption": "<a href=\"https://youtube.com/shorts/fXgG4xuS6LQ?si=JjytQtjPCNg3Fp_H\">‚≠êÔ∏è–í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è‚≠êÔ∏è</a>\n\n<a href=\"https://telegra.ph/Instrukciya-dlya-iPhone-12-16\">‚≠êÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ iPhone‚≠êÔ∏è</a>\n\n<a href=\"https://telegra.ph/Instrukciya-dlya-MacOS-12-25\">‚≠êÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ MacOS‚≠êÔ∏è</a>\n\n<a href=\"https://telegra.ph/Instrukciya-dlya-Android-12-16-2\">‚≠êÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android‚≠êÔ∏è</a>\n\n<a href=\"https://telegra.ph/Secretum----nastrojka-na-TV-11-05\">‚≠êÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Android TV‚≠êÔ∏è</a>\n\n1Ô∏è‚É£ –í —Ä–∞–∑–¥–µ–ª–µ  –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π –Ω–∞–∂–º–∏—Ç–µ –ó–∞–∫–∞–∑–∞—Ç—å –∫–ª—é—á –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω.\n\n2Ô∏è‚É£ –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤–∞—Å –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –Ω–∞ —Å–µ—Ä–≤–∏—Å YooMoney, –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –±–æ—Ç–∞.\n\n3Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ\n\nV2RayTun –¥–ª—è <a href=\"https://apps.apple.com/ru/app/v2raytun/id6476628951\">iOS</a>\n\nV2Box - V2ray –¥–ª—è <a href=\"https://apps.apple.com/ru/app/v2box-v2ray-client/id6446814690\">MacOS</a>\n\n<a href=\"https://youtu.be/njw6ae5B6N4\">‚≠êÔ∏è–í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MAC OS</a>\n\nV2rayNG –¥–ª—è <a href=\"https://play.google.com/store/apps/details?id=com.v2ray.ang&hl=en&gl=US\">Android</a>.\n\nInvisible Man –¥–ª—è <a href=\"https://github.com/InvisibleManVPN/InvisibleMan-XRayClient/releases/download/v2.3.2/InvisibleManXRay-x64.zip/\">Windows</a>\n\n4Ô∏è‚É£ –î–∞–ª–µ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∫–ª—é—á –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. \n\n–ú–µ–Ω—é -> –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π  -> –ö–ª—é—á X  -> –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∫–ª—é—á -> –î–æ–±–∞–≤–∏—Ç—å –≤  iOS / Android.",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "https://t.me/+5Y1-M6eHsH5kNzMy"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/pays' %>
{
    "sendMessage": {
        "text": "–ü–ª–∞—Ç–µ–∂–∏",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref(user.pays.list_for_api('limit', 5)) }}
                [
                    {
                        "text": "–î–∞—Ç–∞: {{ item.date }}, –°—É–º–º–∞: {{ item.money }} —Ä—É–±.",
                        "callback_data": "/menu"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/payment' %>
{
  "sendMessage": {
    "text": "–û–ø–ª–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏",
    "reply_markup": {
      "inline_keyboard": [
        [
          {
            "text": "–û–ø–ª–∞—Ç–∏—Ç—å...",
            "web_app": {
              "url": "{{ config.api.url }}/shm/v1/template/tg_payments?format=html&session_id={{ user.gen_session.id }}"
            }
          }
        ]
      ]
    }
  }
}
<% CASE '/referrals' %>
{
    "sendMessage": {
        "text": "ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n\n–ü—Ä–∏–≤–æ–¥–∏ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π {{ config.billing.partner.income_percent }}% —Å –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n\n‚¨áÔ∏èÔ∏è –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n‚îî https://t.me/wgitzbot?start={{ user.id }}\n\nüèÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚îú –ü—Ä–∏–≤–µ–¥–µ–Ω–æ –¥—Ä—É–∑–µ–π: {{ user.referrals_count }}\n‚îî –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: {{ user.get_bonus }} ‚ÇΩ",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ù–∞–∑–∞–¥...",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/show_mz_keys' %>
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{
    "printQrCode": {
        "data": "{{ subscription_url }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>Subscription URL:</b>\n<code>{{ subscription_url }}</code>"
        }
    }
},
{{ ss = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^ss:').first }}
{
    "printQrCode": {
        "data": "{{ ss }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>ShadowSocks:</b>\n<code>{{ ss }}</code>"
        }
    }
},
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
    "printQrCode": {
        "data": "{{ vless_tcp }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>VLESS TCP:</b>\n<code>{{ vless_tcp }}</code>"
        }
    }
},
{{ vless_grpc = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').last }}
{
    "printQrCode": {
        "data": "{{ vless_grpc }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>VLESS GRPC:</b>\n<code>{{ vless_grpc }}</code>"
        }
    }
}

<% CASE 'admin:menu' %>
{{ TEXT = BLOCK }}
„Ä† <b>–ú–µ–Ω—é {{ role = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); role; }}</b>

‚≠ïÔ∏è –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π!
{{ END }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
                        "callback_data": "admin:users:list"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ],
                {{ IF user.settings.role == 'admin' || (user.settings.role == 'moderator' && user.settings.moderate.settings == 1 )}}
                [
                    {
                        "text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞",
                        "callback_data": "admin:settings"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="settings");
}}

{{ TEXT = BLOCK }}
<b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞</b>

–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ: {{ notPaidStatus = (checkNotPaidServices == 0 ? '‚≠ïÔ∏è –í—ã–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –í–∫–ª—é—á–µ–Ω–æ'); notPaidStatus; }}

–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π: {{ messageTypeStatus = (defaultMessageType == 'editMessageText' ? '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : 'üÜï –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'); messageTypeStatus; }}
{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                        "callback_data": "admin:settings:change notpaid"
                    }
                ],
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π",
                        "callback_data": "admin:settings:change msg"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings:change' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;

    IF args.0 == 'notpaid'; 
        IF checkNotPaidServices == 0;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 1, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        ELSIF checkNotPaidServices == 1;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 0, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        END;
        sendAlert(errtext="‚úÖ –ó–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    
    ELSIF args.0 == 'msg';
        IF defaultMessageType == 'sendMessage';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'editMessageText', 'menuCmd' => 'menu' );
        ELSIF defaultMessageType == 'editMessageText';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'sendMessage', 'menuCmd' => 'start' );
        END;
        sendAlert(errtext="‚úÖ –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    END;
}}


<% CASE 'admin:users:list' %>
{{
    limit = 7;
    offset = (args.0 || 0);
    users = ref(user.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter',{"gid" = 0}));
    getCountUsers = ref(user.list_for_api('admin', 1, filter, {"gid" = 0})).size;
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {{ getCountUsers - 1 }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN users }}
                    {{ status = (item.block == 0 ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status _' '_ item.full_name.replace('"', '\"')  }} ({{ item.user_id _'-'_ item.login }})",
                            "callback_data": "admin:users:id {{ item.user_id _' '_ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF users.size == limit || offset > 0 }}
                    [
                        {{ IF offset > 0 }}
                            {
                                "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                "callback_data": "admin:users:list {{ offset - limit }}"
                            },
                        {{ END }}
                        {{ IF users.size == limit }}
                            {
                                "text": "–ï—â—ë ‚û°Ô∏è",
                                "callback_data": "admin:users:list {{ limit + offset }}"
                            }
                        {{ END }}
                    ],
                {{ END }}
				 [{ "text": "üîé –ù–∞–π—Ç–∏ –ø–æ ID", "callback_data": "admin:users:search" }],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:users:id' %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin'; }}
{{ user = user.switch(args.0) }}
{{
    userData = user.id(args.0);
    userPartner = user.id(userData.partner_id);
    userServices = ref(userData.services.list_for_api('category', '%'));
    offset = args.1;
}}

{{ TEXT = BLOCK }}
üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

–°—Ç–∞—Ç—É—Å: {{ userStatus = (userData.block == 0 ? "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" : "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"); userStatus; }}

–ò–º—è: {{ userData.full_name.replace('"', '\"') }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {{ userData.created }}
–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞: {{ userData.last_login }}
–ö—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {{ userPartner ? userPartner.full_name + " - " + userPartner.login : "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" }}

–ë–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.  
–ë–æ–Ω—É—Å—ã: {{ userData.get_bonus }} —Ä—É–±.  
–°–∫–∏–¥–∫–∞: {{ userData.discount }}

–ö–æ–ª-–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫: {{ userServices.size }}

{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏",
                        "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ offset }}"
                    }
                ],
                [
                    {
                        "text": "üí∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
				[
                    {
                        "text": "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üí¨",
                        "callback_data": "admin:user:msg {{ user.settings.telegram.chat_id }}"
                    }
                ],
                [
                    {
                        "text": "{{ status = (userData.block == 0 ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                        "callback_data": "admin:users:block {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:user:msg' %>
{
    "sendMessage": {
        "text": "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #{{ args.0 }}#",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:users:block' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="blockUser");

    # Variables
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    retcode = (userData.block == 1 ? "0" : "1");
    ret = userData.set(block = retcode);
    status = (userData.block == 1 ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");

    sendAlert(errtext="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $name ($userData.user_id) $status", redirect="admin:users:id $userData.user_id");
}}

<% CASE 'admin:users:id:subs' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}
{{ TEXT = BLOCK }}
üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏

–ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

{{ IF userServices.size <= 0}}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                    {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status; item.user_service_id _' - '_ item.name  }}",
                            "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                        }
                    ],
                {{ END }}

                {{ IF userServices.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:list {{ limit + offset }}"
                        }
                    ],
                {{ END }}

                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:list {{ offset - limit }}"
                        }
                    ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}

<% CASE ['admin:users:id:subs'] %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}

{{ TEXT = BLOCK }}
üîê <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏</b>

üë§ –ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
üÜî ID: {{ userData.user_id }}  
üì± Telegram: {{ userData.settings.telegram.login }}
üîë –õ–æ–≥–∏–Ω: {{ userData.login }}  

{{ IF userServices.size <= 0 }}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                [
                    {
                        "text": "{{ status }} {{ item.user_service_id }} - {{ item.name }}",
                        "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                    }
                ],
                {{ END }}

                {{ IF userServices.size == limit }}
                [
                    {
                        "text": "‚û°Ô∏è –ï—â—ë",
                        "callback_data": "admin:users:list {{ limit + offset }}"
                    }
                ],
                {{ END }}

                {{ IF offset > 0 }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ offset - limit }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:subs:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in servicesArray }}
                [
                    {
                        "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                        "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                         "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                       "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:add:free' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addFreeSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É —Å 0 —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    {{ FOR item in servicesArray }}
        [
            {
                "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id _' free' }}"
            }
        ],
    {{ END }}
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
        }
    ],
    [
        {
            "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
        }
    ]
            ]
        }
    }
}


<% CASE 'admin:subs:add:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    userData = user.id(args.0);
    createService = service.id(args.1);
    user = user.switch(userData.user_id);
    name = userData.full_name.replace('"', '\"');

    IF args.2 == 'free';
        ret = userData.us.create('service_id' = createService.service_id, 'cost' = 0, 'check_allow_to_order' = 0);
    ELSE;
        ret = userData.us.create('service_id' = createService.service_id, 'check_allow_to_order' = 0);
    END;

    sendAlert(errtext="‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ $createService.name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $name ($userData.user_id)", redirect="admin:users:id:subs $userData.user_id");
}}

<% CASE '/admusermsg' %>
{
"sendMessage": {
        "text": "#{{ args.0 }}#\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:subs:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    # Arguments:
        # 0 - ID of user service id 
        # 1 - ID of user
    # Variables:
    USE date;
    userData = user.id(args.1);
    userService = userData.us.id(args.0);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
    userSubUrl = (userData.storage.read('name', 'vpn_mrzb_'_ userService.user_service_id).subscription_url || "https://notfound.com");
    subData = http.get(userSubUrl _'/info');
}}
{{ TEXT = BLOCK }}
üîê –ü–æ–¥–ø–∏—Å–∫–∞ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

ID: {{ userService.user_service_id }}
ID —Å–ø–∏—Å–∞–Ω–∏—è: {{ userService.withdraw_id }}
–°—Ç–∞—Ç—É—Å: {{ userService.status }}
–°–æ–∑–¥–∞–Ω–∞: {{ userService.created }}
–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è: {{ userService.expire }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }}

–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω: {{ subData.online_at ? date.format(subData.online_at, '%d.%m.%Y %R') : '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏' }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîó –ü–æ–¥–ø–∏—Å–∫–∞ {{ userService.user_service_id }} - {{ userServiceData.name }}",
                        "web_app": {
                            "url": "{{ userSubUrl }}"
                        }
                    }
                ],
                {{ IF userService.status == 'ACTIVE' || userService.status == 'BLOCK' }}
                    [
                        {
                            "text": "{{ status = (userService.status == 'ACTIVE' ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                            "callback_data": "admin:subs:change:status {{ userService.user_service_id }}"
                        }
                    ],
                {{ ELSIF userService.status == 'PROGRESS' }}
                    [
                        {
                            "text": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ (–æ–±–Ω–æ–≤–∏—Ç–µ)",
                            "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                {{ IF userService.status == 'BLOCK' || userService.status == 'NOT PAID' }}
                    [
                        {
                            "text": "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                            "callback_data": "admin:subs:delete {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "ü´∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏",
                        "callback_data": "admin:withdraws:id {{ userService.withdraw_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:current {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Å–ª–µ–¥. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:next {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:subs {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:current:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);
}}
{{ TEXT = BLOCK }}
‚úÖ –¢–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ serviceData.name }} ({{ data.user_service_id }}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }}) –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {{ userServiceNext.name }}
{{ END }}
{
    "answerCallbackQuery": {
         "callback_query_id": {{ callback_query.id }},
         "parse_mode":"HTML",
         "text": "{{ TEXT.replace('\n','\n') }}",
         "show_alert": true
     }
},
{
    "shmRedirectCallback": {
        "callback_data": "admin:subs:id {{ data.user_service_id }}"
    }
}
{{ ret = userData.us.id(data.user_service_id).change('service_id' = nextService) }}


<% CASE 'admin:subs:change:next' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ IF userService.next != userService.service_id || userService.next != 0 }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }} ({{ userService.next }})
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:next:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:next:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);
}}
{{ ret = userData.us.id(data.user_service_id).set("next", nextService) }}
{{ TEXT = BLOCK }}
‚úÖ –°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ serviceData.name }} ({{ data.user_service_id }}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }}) –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {{ userServiceNext.name }}
{{ END }}
{
    "answerCallbackQuery": {
         "callback_query_id": {{ callback_query.id }},
         "parse_mode":"HTML",
         "text": "{{ TEXT.replace('\n','\n') }}",
         "show_alert": true
     }
},
{
    "shmRedirectCallback": {
        "callback_data": "admin:subs:id {{ data.user_service_id }}"
    }
}


<% CASE 'admin:subs:change:status' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    serviceData = service.id(data.service_id);
}}
{{ IF data.status == 'ACTIVE' }}
    {{ ret = userData.us.id(data.user_service_id).block }}
{{ ELSIF data.status == 'BLOCK' }}
    {{ ret = userData.us.id(data.user_service_id).activate }}
{{ END }}
{
    "answerCallbackQuery": {
         "callback_query_id": {{ callback_query.id }},
         "parse_mode":"HTML",
         "text": "‚úÖ –£—Å–ª—É–≥–∞ {{ serviceData.name }} ({{ data.user_service_id }}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }}) {{ status = (data.status == 'ACTIVE' ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞"); status; }}",
        "show_alert": true
     }
},
{
    "shmRedirectCallback": {
        "callback_data": "admin:subs:id {{ data.user_service_id }}"
    }
}

<% CASE 'admin:subs:delete' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="deleteSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    serviceData = service.id(data.service_id);
}}
{{ IF data.status == 'BLOCK' || data.status == 'NOT PAID' }}
    {{ ret = userData.us.id(data.user_service_id).delete }}
{{ END }}
{
    "answerCallbackQuery": {
         "callback_query_id": {{ callback_query.id }},
         "parse_mode":"HTML",
         "text": "‚ùå –£—Å–ª—É–≥–∞ {{ serviceData.name }} ({{ data.user_service_id }}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }}) —É–¥–∞–ª–µ–Ω–∞!",
        "show_alert": true
     }
},
{
    "shmRedirectCallback": {
        "callback_data": "admin:users:id:subs {{ userData.user_id }}"
    }
}


<% CASE 'admin:users:id:pays' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userPays }}
                    [
                        {
                            "text": "(ID: {{ item.id }}), {{ item.money }} —Ä—É–±, {{ item.date }}",
                            "callback_data": "admin:pays:id {{ item.id }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userPays.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂",
                        "callback_data": "admin:pays:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíªüë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    userPay = ref(pay.list_for_api('admin', 1, 'filter', {"id" = args.0})).first;
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userData = user.id(userPay.user_id);
	partnerData = user.id(data.comment.from_user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ ID {{ userPay.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞: {{ userPay.date }}
–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {{ userPay.pay_system_id }}
–°—É–º–º–∞: {{ userPay.money }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}

{{ IF userPay.comment.comment }}
<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É</b>
<blockquote>{{ userPay.comment.comment }}</blockquote>
{{ END }}

{{ IF payData }}
<b>–î–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ</b>
<blockquote>
ID –≤ —Å–∏—Å—Ç–µ–º–µ: {{ payData.id }}
–°—Ç–∞—Ç—É—Å: {{ payData.status }}
{{ IF payCard }}
–¢–∏–ø –∫–∞—Ä—Ç—ã: {{ payCard.card_type }}
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {{ payCard.first6 }}******{{ payCard.last4 }}
–ë–∞–Ω–∫: {{ payCard.issuer_name }}
–°—Ç—Ä–∞–Ω–∞ –±–∞–Ω–∫–∞: {{ payCard.issuer_country }}
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {{ payCard.expiry_month }}/{{ payCard.expiry_year }}
{{ END }}
{{ IF payMethod.type == 'sbp' }}
–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –°–ë–ü
–ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –°–ë–ü: {{ payMethod.sbp_operation_id }}
–ë–∏–∫ –ë–∞–Ω–∫–∞: {{ payMethod.payer_bank_details.bic }}
{{ END }}

{{ IF payMethod.title.match('YooMoney') }}
–ö–æ—à–µ–ª–µ–∫ YooMoney: {{ payMethod.title }}
ID –∫–æ—à–µ–ª—å–∫–∞: {{ payMethod.account_number }}
{{ END }}
</blockquote>
{{ END }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:pays {{ userPay.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
            ]
        }
    }
}

<% CASE 'admin:pays:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 20"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 100"
                    }
                ],
                [
                    {{ FOR item IN ref(service.api_price_list('category', '%')).nsort('cost') }}
                        {
                            "text": "{{ item.name }} - {{ item.cost }}‚ÇΩ",
                            "callback_data": "admin:pays:add:confirm {{ userData.user_id _ ' ' }} {{ item.cost }}"
                        },
                    {{ END }}
                ],
                [
                    {
                        "text": "–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É",
                        "callback_data": "admin:pays:add:manual {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:add:manual' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);

    ret = user.set_settings({'state' => 'awaiting_amount'});
    ret = user.set_settings({'bot' => {'switchUser' => userData.user_id} });
}}

{{ TEXT = BLOCK }}
üí¨ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }}
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}



<% CASE 'admin:pays:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF (pay = userData.payment('money', amount, 'pay_system_id', 'manual'));
        sendAlert(
            errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.balance —Ä—É–±.",
            redirect="admin:pays:add $userData.user_id"
        );
    END;
}}


<% CASE 'admin:users:id:bonuses' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    limit = 5;
    offset = (args.1 || 0);
    userData = user.id(args.0);
    userBonuses = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"user_id" = userData.user_id}));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤: {{ userData.get_bonus }} —Ä—É–±.
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userBonuses }}
                    [
                        {
                            "text": "ID: {{ item.id }} ‚Äî {{ item.bonus }} —Ä—É–±.",
                            "callback_data": "admin:bonuses:id {{ item.id _ ' ' _ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userBonuses.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å—ã",
                        "callback_data": "admin:bonuses:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    offset = args.1;
    data = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"id" = args.0})).first;
    userData = user.id(data.user_id);
    partnerData = user.id(data.comment.from_user_id)
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤ ID {{ data.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

ID –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.id }}
–î–∞—Ç–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.date }}
–°—É–º–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.bonus }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id _ ' ' _ offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–æ–Ω—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ {{ userData.get_bonus }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 20"
                    },
                    {
                        "text": "30 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 30"
                    },
                    {
                        "text": "40 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 40"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 100"
                    },
                    {
                        "text": "150 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 150"
                    },
                    {
                        "text": "200 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 200"
                    }
                ],
                [
                    {
                        "text": "–£–±—Ä–∞—Ç—å {{ userData.get_bonus }}",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} -{{ userData.get_bonus }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF amount < 0;
        ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'});
    ELSE;
        IF (ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}));
            notification(
                chat_id="$userData.settings.telegram.chat_id",
                TEXT="üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ $amount –±–æ–Ω—É—Å–æ–≤ –Ω–∞ —Å—á–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            ); ",";
        END;
    END;

    sendAlert(
        errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.get_bonus —Ä—É–±.",
        redirect="admin:bonuses:add $userData.user_id"
    );
}}

<% CASE 'admin:withdraws:id' %>
{{
    data = ref(wd.list_for_api('admin', 1, 'filter', {"withdraw_id" = args.0})).first;
    userData = user.id(data.user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏ ‚Ññ{{ data.withdraw_id }}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–£—Å–ª—É–≥–∞: {{ data.name }} ({{ data.user_service_id }})
–°—Ç–æ–∏–º–æ—Å—Ç—å: {{ data.cost }}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {{ data.create_date }}
–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {{ data.withdraw_date }}
–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ —Å–ø–∏—Å–∞–Ω–∏—é: {{ data.end_date }}
–ö–æ–ª-–≤–æ –º–µ—Å—è—Ü–µ–≤: {{ data.months }}

<b>–°–ø–∏—Å–∞–Ω–∏–µ:</b>
<blockquote>
–°–∫–∏–¥–∫–∞: {{ data.discount }}%
–ë–æ–Ω—É—Å–æ–≤: {{ data.bonus }} —Ä—É–±
<b>–í—Å–µ–≥–æ: {{ data.total }}</b>

</blockquote>
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:subs:id {{ data.user_service_id _ ' ' _  userData.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
]
        }
    }
}

<% CASE 'admin:users:search' %>
{{
    # Set state for user
    ret = user.set_settings({'state' => 'awaiting_search'});
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}

<% CASE ['notification:promo'] %>

{{ TEXT = BLOCK }}
‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ {{ args.0 }} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'promocode' %>
{{
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    ret = user.set_settings({'state' => 'awaiting_promocode'});
    IF user.settings.bot.reqPromo;
        temp = user.settings.bot.reqPromo + 1;
        delete(msgID=[temp, user.settings.bot.reqPromo, message.message_id]);
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    ELSE;
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    END;
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:</b>
{{ END }}

{{ notification(TEXT=TEXT, force=1) }}

<% CASE DEFAULT %>

{{ IF user.settings.state == 'awaiting_search'}}
    {{
        temp = message.message_id - 1;
        delete(msgID=[message.message_id, temp]);
        IF message.text.match('^[1-9]\d*$');
            searchString = message.text;
            ret = user.set_settings({'state' => ''});
            ret = ref(user.list_for_api('admin', 1, 'filter', {"user_id" = searchString} ));

            IF (ret.size > 0);
                resultID = ret.first.user_id;
                redirect(callback="admin:users:id $resultID");
            ELSE;
                TEXT = "‚≠ïÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID $searchString –Ω–µ –Ω–∞–π–¥–µ–Ω!";
            END;

        ELSE;
            ret = user.set_settings({'state' => ''});
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> ID –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!";
        END;

        notification(TEXT=TEXT);
    }}
	
{{ ELSIF user.settings.state == 'awaiting_user_message' }}
{{
    temp = message.message_id - 1;
    delete(msgID=[message.message_id, temp]);

    IF message.text.length > 0;
        userID = user.settings.temp_user_id;
        messageText = message.text;
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        ret = user.set_settings({'state' => '', 'temp_user_id' => ''});

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        notification(
            TEXT="üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n<blockquote>$messageText</blockquote>",
            user_id=userID
        );

        TEXT = "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é #$userID!";
    ELSE;
        ret = user.set_settings({'state' => ''});
        TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!";
    END;

    notification(TEXT=TEXT);
}}


{{ ELSIF user.settings.state == 'awaiting_promocode' }}
    {{
        IF user.settings.bot.reqPromo;
            temp = user.settings.bot.reqPromo + 1;
            temp2 = user.settings.bot.reqPromo - 1;
            delete(msgID=[temp, temp2, user.settings.bot.reqPromo, message.message_id]);
            ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
        END;

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ
        IF message.text.match('^[a-zA-Z0-9_-]+$');
            promocode = message.text;
            ret = user.set_settings({'state' => ''});
            
            IF promo.apply(promocode);
                TEXT = "‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>";
            ELSE;
                TEXT = "‚≠ïÔ∏è <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>";
            END;

        ELSE;
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, —Ç–∏—Ä–µ (-) –∏ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (_).";
        END;
    }}

    {{ BUTTONS = BLOCK }}
        [
            {
                "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –µ—â—ë",
                "callback_data": "promocode"
            }
        ],
        [
            {
                "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                "callback_data": "/menu"
            }
        ]
    {{ END }}
    {{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


{{ ELSIF user.settings.state == 'awaiting_amount' AND user.settings.bot.switchUser }}
    {{
        userData = user.id(user.settings.bot.switchUser);
        IF message.text.match('^-?\d+(\.\d+)?$');
            amount = message.text;

            IF (ret = userData.payment('money', amount, 'pay_system_id', 'manual'));
                TEXT = "‚úÖ <b>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $userData.user_id –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.</b>\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: $userData.balance —Ä—É–±.";
            ELSE;
                TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
            END;

            ret = user.set_settings({'state' => ''});
            ret = user.set_settings({'bot' => {'switchUser' => ''} });
        ELSE;
            TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
        END;
    }}

    {{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}
{{ ELSE }}
    {{ 
        ret = user.set_settings({'bot' => {'switchUser' => ''} });
        ret = user.set_settings({'state' => ''});
        delete(msgID=[message.message_id]);
    }}
{{ END }}
<% END %>
