{{ name = 'Juba'}}
{{ support = 'https://t.me/Arslan2711'}}
{{ channel = 'https://t.me/Arslan2711' }}
{{ chat = '' }}
{{ bot = 'https://t.me/Juba_vpn_bot' }}
{{ status = '' }}
<% SWITCH cmd %>
<% CASE 'USER_NOT_FOUND' %>
{
    "shmRegister": {
        "partner_id": "{{ args.0 }}",
        "callback_data": "/start",
        "error": "–û–®–ò–ë–ö–ê: –õ–æ–≥–∏–Ω {{ message.chat.username }} –∏–ª–∏ chat_id {{ message.chat.id }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ–¥ –¥—Ä—É–≥–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º."
    }
}
<% CASE ['/menu', '/start', '/menuwelcome'] %>
{{ user_services = ref(user.services.list_for_api('filter', { 'category' => '%', status => 'ACTIVE' } )) }}
{{ IF cmd == '/start' }}
{
        "sendMessage": {
        "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {{ name }} ‚Äî –í–∞—à –ª–∏—á–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ! \n\nüåç –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –æ—Ç streisand –∏ hiddify. \n\n. –î–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–º —Ä–µ—Å—É—Ä—Å–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏. –ü–æ–∫—É–ø–∞—è –∫–ª—é—á –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ç–µ–º, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ —Ü–µ–ª—è—Ö –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—â–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É üîπ\n\n –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n",
{{ END }}
{{ IF cmd == '/menuwelcome' }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {{ name }} ‚Äî –í–∞—à –ª–∏—á–Ω—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä —Å–≤–æ–±–æ–¥—ã –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ! \n\nüåç –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –æ—Ç streisand –∏ hiddify. üöÄ \n\n–ß—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. üîπ\n\n –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n",
{{ END }}
{{ IF cmd == '/menu' }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\nüë§ ID: {{ user.id }}\nüë®‚Äçü¶∞ –ò–º—è: {{ user.full_name}}\nüí∞ –ë–∞–ª–∞–Ω—Å: {{ user.balance }}\nü§ù –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }}\n\n{{ IF user.pays.forecast.total !=0 }}üëâ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É: {{ user.pays.forecast.total }} —Ä—É–± {{ END }}",
{{ END }}
        "reply_markup": {
            "inline_keyboard": [
			    {{ IF message.chat.id == config.telegram_admin.id }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                {{ END }}
                [
                {
                    "text": "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    "web_app": {
                    "url": "{{ config.api.url }}/shm/v1/template/tg_payments?format=html&session_id={{ user.gen_session.id }}"
                }
                }
                ],
                {{ IF user_services.size > 0 }}
                {{ FOR user_service_data IN user_services }}
                [
                    {
                        "text": "‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è {{ user_service_data.name }} üÜî {{ user_service_data.user_service_id }}",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ user_service_data.user_service_id }}"
                        }
                    }
                ],
                {{ END }}
				{{ END }}
                [
                {
                    "text": "‚úÖ –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π",
                    "callback_data": "/list"
                },
                {
                    "text": " üõç –ö—É–ø–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á",
                    "callback_data": "/pricelist"
                }
                ],

                [
                {
                    "text": "ü§ù –ë–æ–Ω—É—Å –∑–∞ –¥—Ä—É–∑–µ–π",
                    "callback_data": "/referrals"
                }
                ],
                [
                {
                    "text": "üÜò –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏",
                    "url": "{{ support }}"
                }
                ] 
            ]
        }
    }
}
<% CASE ['/balance', 'üí∞ –ë–∞–ª–∞–Ω—Å'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "üí∞ <b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }}\n\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å: <b>{{ user.pays.forecast.total }}</b>",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚úö –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/public/tg_payments?uid={{ user.id }}&format=html"
                        }
                     }
                ],
                [
                    {
                    "text": "‚á¶ –ù–∞–∑–∞–¥",
                    "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
<% CASE ['/list'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "üîë  –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∫–ª—é—á",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref( user.services.list_for_api( 'category', 'vpn-%' ) ) }}
                {{ SWITCH item.status }}
                  {{ CASE 'ACTIVE' }}
                  {{ icon = '‚úÖ' }}
                  {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
                  {{ CASE 'BLOCK' }}
                  {{ icon = '‚ùå' }}
                  {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                  {{ CASE 'NOT PAID' }}
                  {{ icon = 'üí∞' }}
                  {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                  {{ CASE }}
                  {{ icon = '‚è≥' }}
                  {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                [
                    {
                        "text": "{{ item.name }} - {{ icon }} {{ status }}",
                        "callback_data": "/service {{ item.user_service_id }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚úö –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á",
                        "callback_data": "/pricelist"
                    }
                ],
                [
                    {"text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                     }
                ]
           ]
        }
    }
}
<% CASE [ '/service', '/back', '/install' ]%>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ data_limit = storage.read('name','us_' _ args.0 ).data_limit }}
{{ data_reset = storage.read('name','us_' _ args.0 ).data_limit_reset_strategy }}
{{ limit =  data_limit / 1024 / 1024 / 1024 }}
{{ IF data_reset == 'no_reset' }}
{{ limit_reset = ''}}
{{ ELSIF data_reset == 'day' }}
{{ limit_reset = '–≤ –¥–µ–Ω—å'}}
{{ ELSIF data_reset == 'week' }}
{{ limit_reset = '–Ω–∞ –Ω–µ–¥–µ–ª—é'}}
{{ ELSIF data_reset == 'month' }}
{{ limit_reset = '–≤ –º–µ—Å—è—Ü'}}
{{ ELSIF data_reset == 'year' }}
{{ limit_reset = '–≤ –≥–æ–¥'}}
{{ END }}

{{ USE date }}
{{ calc = date.calc }}
{{ d2 = date.format(item.created, '%Y %m %d %H %M %S').split(' ') }}
{{ d1 = date.format(date.now, '%Y %m %d %H %M %S').split(' ') }}
{{ diff = calc.Delta_DHMS(d2.0, d2.1, d2.2, d2.3, d2.4, d2.5, d1.0, d1.1, d1.2, d1.3, d1.4, d1.5) }}
{{ days = (diff.0 * 24) + diff.1 }}

{{ IF cmd == '/install' }}
{
    "deleteMessage": { "message_id": {{ message.message_id - 1 }} }
},
{{ END }}
{{ IF cmd == '/back' }}
{
    "deleteMessage": { "message_id": {{ message.message_id - 1 }} }
},
{
    "deleteMessage": { "message_id": {{ message.message_id - 2 }} }
},
{
    "deleteMessage": { "message_id": {{ message.message_id - 3 }} }
},
{{ END }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        {{ SWITCH us.status }}
          {{ CASE 'ACTIVE' }}
          {{ icon = '‚úÖ' }}
          {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
          {{ CASE 'BLOCK' }}
          {{ icon = '‚ùå' }}
          {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
          {{ CASE 'NOT PAID' }}
          {{ icon = 'üí∞' }}
          {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
          {{ CASE }}
          {{ icon = '‚è≥' }}
          {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
        {{ END }}
        "text": "<b>–£—Å–ª—É–≥–∞</b>: {{ us.name }} \n<b>–ù–æ–º–µ—Ä —É—Å–ª—É–≥–∏:</b>{{ args.0 }}{{ IF us.expire }}\n<b>–û–ø–ª–∞—á–µ–Ω–∞ –¥–æ</b>: {{ us.expire }}{{ END }}\n{{ IF limit }}<b>–õ–∏–º–∏—Ç</b>: <code>{{ limit }}</code> –ì–± {{ limit_reset }}{{ END }}<b>–°—Ç–∞—Ç—É—Å</b>: {{ icon }} {{ status }}\n\n –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
            {{ IF us.status == 'ACTIVE' }}
                {{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
            {{ IF us.category.grep('^vpn-mz-').first }}
[
                    {
                        "text": "IOS üì±",
                        "callback_data": "/vios {{ args.0 }}"
                    },
                    {
                        "text": "Android üì±",
                        "callback_data": "/vandroidsingbox {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "Windows üñ•Ô∏è",
                        "callback_data": "/vwin {{ args.0 }}"
                    },
                    {
                        "text": "MACOS üñ•Ô∏è",
                        "callback_data": "/vmac {{ args.0 }}"
                    }
                ],
            {{ END }}
        {{ END }}
        {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí∞ –û–ø–ª–∞—Ç–∏—Ç—å",
                        "callback_data": "/balance"
                    }
                ],
        {{ END }}
        {{ IF us.status != 'PROGRESS' }}
                [
                    {
                        "text": "‚ùå –£–¥–∞–ª–∏—Ç—å",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
        {{ END }}
                [
                    {
                        "text": "‚á¶ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/pricelist' %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "‚ò∑ –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∑–∞–∫–∞–∑–∞",
        "reply_markup" : {
            "inline_keyboard": [
            {{ FOR item IN ref(service.api_price_list( 'category', 'vpn-%' ).nsort('cost')) }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} —Ä—É–±.",
                        "callback_data": "/serviceorder {{ item.service_id }}"
                    }
                ],
            {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/serviceorder' %>
{
    "shmServiceOrder": {
        "service_id": "{{ args.0 }}",
        "check_exists_unpaid": 1,
        "callback_data": "/pocessing",
        "cb_not_enough_money": "/balance",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE '/delete' %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "callback_query_id": "{{ callback_query.id }}",
        "text": "üóë <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏. –£—Å–ª—É–≥—É –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</b>",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üóë –î–ê, –£–î–ê–õ–ò–¢–¨! üóë",
                        "callback_data": "/delete_confirmed {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/delete_confirmed' %>
{
    "editMessageText": { "message_id": {{ message.message_id }} }
},
{
    "shmServiceDelete": {
        "usi": "{{ args.0 }}",
        "callback_data": "/list",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
<% CASE ['/help'] %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑ —Å–ø–∏—Å–∫–∞\n\n–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–ø–∏—à–∏ –≤ –ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–î–ª—è –ö–ª—é—á–µ–π VLESS",
                        "callback_data": "/vless"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['/vios'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone:\n\n1. 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Streisand –∏–∑ AppStore\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://apps.apple.com/ru/app/streisand/id6450534064"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]                        
            ]
        }
    }
}
<% CASE ['/vandroidsingbox'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify –∏–∑ PlayMarket\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://play.google.com/store/apps/details?id=app.hiddify.com"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]      
            ]
        }
    }
}
<% CASE ['/vwin'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–°–∫–∞—á–∞—Ç—å Hiddify-Next",
                        "url": "https://github.com/hiddify/hiddify-next/releases/download/v2.5.7/Hiddify-Windows-Setup-x64.exe"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]      
            ]
        }
    }
}
<% CASE ['/vmac'] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MacOS:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify\n\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á \n\nüëâ <code>{{ vless_tcp }}</code>\n\n–ù–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º \"–≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞\", –≤—ã–¥–∞–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        "url": "https://apps.apple.com/ru/app/streisand/id6450534064"
                    }
                ],
                [
                    {
                        "text": "–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "{{ support }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]                        
            ]
        }
    }
}
<% CASE ['/referrals', 'ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞'] %>
{
        "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "ü§ù–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n\n–ü—Ä–∏–≤–æ–¥–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ {{ config.billing.partner.income_percent }}% —Å –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n\n‚¨áÔ∏èÔ∏è –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n‚îî {{ bot }}?start={{ user.id }}\n\nüèÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚îú –ü—Ä–∏–≤–µ–¥–µ–Ω–æ –¥—Ä—É–∑–µ–π: {{ user.referrals_count }}\n‚îî –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: {{ user.get_bonus }} ‚ÇΩ",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
                        "url": "https://t.me/share/url?url={{ bot }}?start={{ user.id }}&text="
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE '/show_mz_keys' %>
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{
    "printQrCode": {
        "data": "{{ subscription_url }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>–°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤—Å—Ç–∞–≤—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ :</b>\n<code>{{ subscription_url }}</code>"
        }
    }
},
{{ vless_tcp = storage.read('name','vpn_mrzb_' _ args.0 ).links.grep('^vless:').first }}
{
    "printQrCode": {
        "data": "{{ vless_tcp }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "<b>–¢–≤–æ—è —Å—Å—ã–ª–∫–∞ VLESS TCP (–î–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏):</b>\n<code>{{ vless_tcp }}</code>"
        }
    }
},
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "text": "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö —Å—Å—ã–ª–æ–∫ –≤ —Å–ª—É—á–∞–µ , –µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –ø–æ–º–æ–≥–ª–∞.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/back {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}
<% CASE '/show_mz_keys_1' %>
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{
    "sendMessage": {
        "text": "‚úÖ –í–∞—à –∫–ª—é—á —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n\nüëâ<a href=\"{{ subscription_url }}\"><b> –£–°–¢–ê–ù–û–í–ò–¢–¨</b></a>\n\n‚ùì–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á‚Äì –ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: <a href=\"{{ support }}\"><b>–ù–ê–ü–ò–°–ê–¢–¨</b></a> (–æ—Ç–≤–µ—á–∞–µ–º –±—ã—Å—Ç—Ä–æ)\n\nüî• –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –∫–ª—é—á –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\nüí∏ –ó–∞–±–∏—Ä–∞–π {{ config.billing.partner.income_percent }}% —Å –∫–∞–∂–¥–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∞\n\nüëâ –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: <b>{{ bot }}?start={{ user.id }}</b>\n\n–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ‚Äì /start",
        "parse_mode": "HTML"
    }
}
<% CASE ['/pocessing'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥—É...",
        "parse_mode": "HTML"
    }
}

<% CASE '/adminmenu' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "üì° <b>–ê–¥–º–∏–Ω–∫–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n\n1Ô∏è‚É£ <b>–£—Å–ª—É–≥–∏</b>\n2Ô∏è‚É£ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ª—É–≥</b>\n3Ô∏è‚É£ <b>–ü—Ä–æ–º–æ–∫–æ–¥—ã</b>\n4Ô∏è‚É£ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n5Ô∏è‚É£ <b>–û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü</b>",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "callback_data": "/admusers" }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE '/adminsettings' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", "callback_data": "/updateconfig" },
                    { "text": "üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏", "callback_data": "/manageparams" }
                ],
                [
                    { "text": "üîî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏", "callback_data": "/managenotifications" },
                    { "text": "üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞–º–∏", "callback_data": "/manageapikeys" }
                ],
                [
                    { "text": "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º", "callback_data": "/managestorage" }
                ],
                [
                    { "text": "üîô –í –∞–¥–º–∏–Ω–∫—É", "callback_data": "/adminmenu" },
                    { "text": "üè† –î–æ–º–æ–π", "callback_data": "/menu" }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ."
    }
}
{{ END }}

<% CASE '/manageparams' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚öôÔ∏è <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤", "callback_data": "/viewparams" },
                    { "text": "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", "callback_data": "/editparams" }
                ],
                [
                    { "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä", "callback_data": "/addparam" },
                    { "text": "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä", "callback_data": "/deleteparam" }
                ],
                [
                    { "text": "üîô –ù–∞–∑–∞–¥", "callback_data": "/adminmenu" },
                    { "text": "üè† –î–æ–º–æ–π", "callback_data": "/menu" }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ."
    }
}
{{ END }}

<% CASE '/updateconfig' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{ exec("sudo bash -c 'cd /opt/shm && docker compose pull && docker compose down && docker compose up -d'") }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "üîÑ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞—á–∞–ª–æ—Å—å...</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üîô –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "callback_data": "/adminsettings" },
                    { "text": "üè† –î–æ–º–æ–π", "callback_data": "/menu" }
                ]
            ]
        }
    }
},
{{ sleep(35) }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚úÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</b>\n\nDocker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üîô –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "callback_data": "/adminsettings" },
                    { "text": "üè† –î–æ–º–æ–π", "callback_data": "/menu" }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ."
    }
}
{{ END }}

<% CASE '/dockerlogs' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{ exec("cd /opt/shm && docker compose logs -f > /tmp/docker_logs_output.log 2>&1 &") }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "üîç <b>–õ–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ</b>\n\n–§–∞–π–ª –ª–æ–≥–æ–≤: <code>/tmp/docker_logs_output.log</code>.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    { "text": "üîô –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "callback_data": "/adminsettings" },
                    { "text": "üè† –î–æ–º–æ–π", "callback_data": "/menu" }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ."
    }
}
{{ END }}


<% CASE '/adminpromocodes' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  limit = 10; 
  data = []; 
}} 

{{  
  offset = (args.0 || 0); 
  arr = ref(user.promocodes.list_for_api('admin', 1, 'limit', limit, 'offset', offset)) 
}} 

{{ IF arr.size > 0 }}
{
  "sendMessage": {
    "message_id": {{ message.message_id }},
    "parse_mode": "HTML",
    "text": "üí≥ <b>–ü—Ä–æ–º–æ–∫–æ–¥—ã</b>\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: <b>{{ arr.size }}</b>\n\n",
    "reply_markup": {
      "inline_keyboard": [
        {{ FOR item IN arr }}
        {{  
          promocode = item.promocode || "N/A";
          status = item.status == "ACTIVE" ? "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" : "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω";
        }}
        [
          { 
            "text" = "<b>–ü—Ä–æ–º–æ–∫–æ–¥:</b> " _ promocode _ "\n<b>–°—Ç–∞—Ç—É—Å:</b> " _ status,
            "callback_data" = "/viewpromocode " _ item.id
          },
          { 
            "text" = "‚ùå <b>–£–¥–∞–ª–∏—Ç—å</b>", 
            "callback_data" = "/deletepromocode " _ item.id 
          },
          { 
            "text" = "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</b>", 
            "callback_data" = "/editpromocode " _ item.id 
          }
        ]
        {{ END }},
        [
          { 
            "text" = "–î–∞–ª–µ–µ ‚ñ∂Ô∏è", 
            "callback_data" = "/adminpromocodes " _ (offset + limit) 
          }
        ],
        [
          { 
            "text" = "‚óÄÔ∏è –ù–∞–∑–∞–¥", 
            "callback_data" = "/adminpromocodes " _ (offset - limit) 
          }
        ],
        [
          { 
            "text" = "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ ‚ûï", 
            "callback_data" = "/addpromocode" 
          },
          { 
            "text" = "üè† –î–æ–º–æ–π", 
            "callback_data" = "/menu" 
          }
        ]
      ]
    }
  }
}
{{ ELSE }}
{
  "sendMessage": {
    "message_id": {{ message.message_id }},
    "parse_mode": "HTML",
    "text": "‚ö†üí≥ <b>–ü—Ä–æ–º–æ–∫–æ–¥—ã</b>\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: <b>{{ FOR code IN codes }}{{ code }}{{ END }}</b>\n\n"
  }
}
{{ END }}
{{ END }}

<% CASE '/monthlyreport' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{ sum = 0 }}
{{ page = 1 }}
{{ items_per_page = 10 }}
{{ month = '12' }}
{{ year = '2024' }}

{{ arr = ref(user.pays.list_for_api('admin', 1, 'limit', items_per_page, 'offset', (page - 1) * items_per_page, 'filter', { 'date' => '2024-%-%' })) }}
{{ FOR item IN arr }}
{{ sum = sum + item.money }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "üí∞ –î–æ—Ö–æ–¥:\nüíµ –ò—Ç–æ–≥–æ –∑–∞ {{ month }}/{{ year }}: {{ sum }} —Ä—É–±. üè¶",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üõ† –ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/monthlyreport?page={{ page - 1 }}"
                    },
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/monthlyreport?page={{ page + 1 }}"
                    }
                ]
            ]
        }
    }
}
{{ END }}


<% CASE '/admservicestats' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}

{{ active_services = ref(user.services.list_for_api('admin', 1, 'limit', 0, 'filter', { 'status' => 'ACTIVE' })) }}
{{ blocked_services = ref(user.services.list_for_api('admin', 1, 'limit', 0, 'filter', { 'status' => 'BLOCK' })) }}
{{ unpaid_services = ref(user.services.list_for_api('admin', 1, 'limit', 0, 'filter', { 'status' => 'NOT PAID' })) }}

{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ª—É–≥</b>\n\nüíº <b>–ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b> <b>{{ active_services.size }}</b>\nüö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:</b> <b>{{ blocked_services.size }}</b>\nüí≥ <b>–ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:</b> <b>{{ unpaid_services.size }}</b>\n\nüìù <b>–î–µ—Ç–∞–ª–∏:</b>\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥: <b>{{ active_services.size + blocked_services.size + unpaid_services.size }}</b>\n–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —É—Å–ª—É–≥–∏: <b>{{ (active_services.sum('withdraws.cost') / active_services.size) * 100 / 100 }}</b> —Ä—É–±.\n–°—Ä–µ–¥–Ω—è—è —Å–∫–∏–¥–∫–∞: <b>{{ (active_services.sum('withdraws.discount') / active_services.size) * 100 / 100 }}%</b>\n\nüïë <b>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</b> {{ current_time }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üöÄ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏",
                        "callback_data": "/admservices_active"
                    },
                    {
                        "text": "‚õî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
                        "callback_data": "/admservices_stop"
                    },
                    {
                        "text": "üí≥ –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
                        "callback_data": "/admservices_notpaid"
                    }
                ],
                [
                    {
                        "text": "üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Å–ª—É–≥–∞–º",
                        "callback_data": "/admservices"
                    }
                ],
                [
                    {
                        "text": "üìã –í—Å–µ —É—Å–ª—É–≥–∏",
                        "callback_data": "/admallservices"
                    }
                ],
                [
                    {
                        "text": "üîô –ù–∞–∑–∞–¥",
                        "callback_data": "/adminmenu"
                    },
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE '/admservices_active' %>
{{ usisbl = user.services.list_for_api('usi', {}) }}
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  limit = 10; 
  data = []; 
}} 

{{  
  offset = (args.0 || 0); 
  arr = ref(user.services.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', { 'status' = 'ACTIVE' })) 
}} 

{{ FOR item IN arr }} 
{{  
  status = (item.status == "ACTIVE" ? "üü¢" : "üî¥") 
}}
{{  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É —É—Å–ª—É–≥–∏
  service_id = (item.id || item.user_service_id || "N/A")
}} 
{{  
  # Add service details to the button text 
  data.push( 
    [{ 
      "text" = status _ " –£—Å–ª—É–≥–∞: " _ item.name _  " ID: " _ service_id _ "", 
      "callback_data" = "/admallservices " _ item.id 
    }],
    [{ 
      "text" = "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å ‚ùå", 
      "callback_data" = "/admuserblock " _ item.id 
    }],
    [{ 
      "text" = "–£–¥–∞–ª–∏—Ç—å üóëÔ∏è", 
      "callback_data" = "/admdelete " _ item.id 
    }]
  ) 
}} 
{{ END }} 

{{ IF arr.size == limit }}
{{  
  data.push( 
    [{ 
      "text" = "–î–∞–ª–µ–µ ‚ñ∂Ô∏è", 
      "callback_data" = "/admaddservice_block " _ (offset + limit) 
    }] 
  )
}} 
{{ END }}

{{ IF offset > 0 }}
{{  
  data.push( 
    [{ 
      "text" = "‚óÄÔ∏è –ù–∞–∑–∞–¥", 
      "callback_data" = "/admaddservice_block " _ (offset - limit) 
    }] 
  ) 
}}
{{ END }}

{{ data.push( 
    [{ 
      "text" = "–í–µ—Å—å —Å–ø–∏—Å–æ–∫", 
      "callback_data" = "/admservices_active 0" 
    }], 
    [{ 
      "text" = "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ üî¥", 
      "callback_data" = "/admaddservice_block" 
    }],
    [{ 
      "text" = "–£—Å–ª—É–≥–∏ –±–µ–∑ –æ–ø–ª–∞—Ç—ã üí≥", 
      "callback_data" = "/admaddservice_notpaid" 
    }],
    [{ 
      "text" = "–ê–¥–º–∏–Ω–∫–∞", 
      "callback_data" = "/adminmenu" 
    }, { 
      "text" = "üè† –î–æ–º–æ–π", 
      "callback_data" = "/menu" 
    }] 
  ) 
}} 

{{ IF cmd == "/qadmservices" }} 
{ 
    "sendMessage": {  
{{ ELSIF cmd == "/admservices_active" }} 
{ 
    "editMessageText": { 
    {{ END }}
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML", 
        "text": "üíº <b>–£—Å–ª—É–≥–∏</b>\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥: <b>{{ arr.size }}</b>\n\n", 
        "reply_markup": { 
          "inline_keyboard": {{ toJson(data) }} 
        } 
    } 
}
{{ END }}

<% CASE '/block_service' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  service_id = args.0; 
  # Code to block the service
  result = ref(user.services.update_service_status(service_id, "BLOCK"))
}} 

{{ IF result.success }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "üî¥ –£—Å–ª—É–≥–∞ –±—ã–ª–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞."
    } 
  }
{{ ELSE }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —É—Å–ª—É–≥–∏."
    } 
  }
{{ END }}
{{ END }}

<% CASE '/delete_service' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  service_id = args.0; 
  # Code to delete the service
  result = ref(user.services.delete_service(service_id))
}} 

{{ IF result.success }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "üóëÔ∏è –£—Å–ª—É–≥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞."
    } 
  }
{{ ELSE }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏."
    } 
  }
{{ END }}
{{ END }}

<% CASE '/activate_service' %>
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  service_id = args.0; 
  # Code to activate the service
  result = ref(user.services.update_service_status(service_id, "ACTIVE"))
}} 

{{ IF result.success }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "üü¢ –£—Å–ª—É–≥–∞ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞."
    } 
  }
{{ ELSE }}
  { 
    "sendMessage": {  
      "chat_id": {{ message.chat.id }},
      "text": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—Å–ª—É–≥–∏."
    } 
  }
{{ END }}
{{ END }}


<% CASE '/admaddservice_block' %> 

{{ usisbl = user.services.list_for_api('usi', {}) }}
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  limit = 10; 
  data = []; 
}} 

{{  
  offset = (args.0 || 0); 
  arr = ref(user.services.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', { 'status' = 'BLOCK' })) 
}} 

{{ FOR item IN arr }} 
{{  
  status = (item.status == "ACTIVE" ? "üü¢" : "üî¥") 
}}
{{  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É —É—Å–ª—É–≥–∏
  service_id = (item.id || item.user_service_id || "N/A")
}} 
{{  
  # Add service details to the button text 
  data.push( 
    [{ 
      "text" = status _ " –£—Å–ª—É–≥–∞: " _ item.name _  " ID: " _ service_id _ "", 
      "callback_data" = "/admallservices " _ item.id 
    }],
	[{ 
      "text" = "–£–¥–∞–ª–∏—Ç—å üóëÔ∏è", 
      "callback_data" = "/delete_service " _ item.id 
    }],
    [{ 
      "text" = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å üü¢", 
      "callback_data" = "/activate_service " _ item.id 
    }]
  ) 
}} 
{{ END }} 

{{ IF arr.size == limit }}
{{  
  data.push( 
    [{ 
      "text" = "–î–∞–ª–µ–µ ‚ñ∂Ô∏è", 
      "callback_data" = "/admaddservice_block " _ (offset + limit) 
    }] 
  )
}} 
{{ END }}

{{ IF offset > 0 }}
{{  
  data.push( 
    [{ 
      "text" = "‚óÄÔ∏è –ù–∞–∑–∞–¥", 
      "callback_data" = "/admaddservice_block " _ (offset - limit) 
    }] 
  ) 
}}
{{ END }}

{{ data.push( 
    [{ 
      "text" = "–í–µ—Å—å —Å–ø–∏—Å–æ–∫", 
      "callback_data" = "/admservicesall" 
    }],
    [{ 
      "text" = "–£—Å–ª—É–≥–∏ –±–µ–∑ –æ–ø–ª–∞—Ç—ã üí≥", 
      "callback_data" = "/admaddservice_notpaid" 
    }],
    [{ 
      "text" = "–ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏ üü¢", 
      "callback_data" = "/admaddservice_active" 
    }],
    [{ 
      "text" = "–ê–¥–º–∏–Ω–∫–∞", 
      "callback_data" = "/adminmenu" 
    }, { 
      "text" = "üè† –î–æ–º–æ–π", 
      "callback_data" = "/menu" 
    }] 
  ) 
}} 

{{ IF cmd == "/qadmservices" }} 
{ 
    "sendMessage": {  
{{ ELSIF cmd == "/admaddservice_block" }} 
{ 
    "editMessageText": { 
    {{ END }}
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML", 
        "text": "üíº <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏</b>\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥: <b>{{ arr.size }}</b>\n\n", 
        "reply_markup": { 
          "inline_keyboard": {{ toJson(data) }} 
        } 
    } 
}
{{ END }}

<% CASE '/admaddservice_notpaid' %>
{{ usisact = user.services.list_for_api('usi', {}) }}
{{ IF message.chat.id == config.telegram_admin.id OR message.chat.id == config.telegram_admin2.id OR message.chat.id == config.telegram_admin3.id }}
{{  
  limit = 10; 
  data = []; 
}} 

{{  
  offset = (args.0 || 0); 
  arr = ref(user.services.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', { 'status' = 'NOT_PAID' })) 
}} 

{{ FOR item IN arr }} 
{{  
  status = (item.status == "ACTIVE" ? "üü¢" : "üî¥") 
}}
{{  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É —É—Å–ª—É–≥–∏
  service_id = (item.id || item.user_service_id || "N/A")
}} 
{{  
  # Add service details to the button text 
  data.push( 
    [{ 
      "text" = status _ " –£—Å–ª—É–≥–∞: " _ item.name _  " ID: " _ service_id _ "", 
      "callback_data" = "/admallservices " _ item.id 
    }],
	[{ 
      "text" = "–£–¥–∞–ª–∏—Ç—å üóëÔ∏è", 
      "callback_data" = "/delete_service " _ item.id 
    }],
    [{ 
      "text" = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å üü¢", 
      "callback_data" = "/activate_service " _ item.id 
    }]
  ) 
}} 
{{ END }} 


{{ IF arr.size == limit }}
{{  
  data.push( 
    [{ 
      "text" = "–î–∞–ª–µ–µ ‚ñ∂Ô∏è", 
      "callback_data" = "/admaddservice_notpaid " _ (offset + limit) 
    }] 
  )
}} 
{{ END }}

{{ IF offset > 0 }}
{{  
  data.push( 
    [{ 
      "text" = "‚óÄÔ∏è –ù–∞–∑–∞–¥", 
      "callback_data" = "/admaddservice_notpaid " _ (offset - limit) 
    }] 
  ) 
}}
{{ END }}

{{ data.push( 
    [{ 
      "text" = "–í–µ—Å—å —Å–ø–∏—Å–æ–∫", 
      "callback_data" = "/admaddservice_notpaid " _ (offset - limit)
    }],
    [{ 
      "text" = "–ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏ üü¢", 
      "callback_data" = "/admaddservice_active" 
    }],
	[{ 
      "text" = "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ üî¥", 
      "callback_data" = "/admaddservice_block" 
    }],
    [{ 
      "text" = "–ê–¥–º–∏–Ω–∫–∞", 
      "callback_data" = "/adminmenu" 
    }, { 
      "text" = "üè† –î–æ–º–æ–π", 
      "callback_data" = "/menu" 
    }] 
  ) 
}} 

{{ IF cmd == "/qadmservices" }} 
{ 
    "sendMessage": {  
{{ ELSIF cmd == "/admaddservice_notpaid" }} 
{ 
    "editMessageText": { 
    {{ END }}
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML", 
        "text": "üíº <b>–£—Å–ª—É–≥–∏ –±–µ–∑ –æ–ø–ª–∞—Ç—ã</b>\n\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥: <b>{{ arr.size }}</b>\n\n", 
        "reply_markup": { 
          "inline_keyboard": {{ toJson(data) }} 
        } 
    } 
}
{{ END }}
<% CASE ['/admusers', '/qadmusers'] %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{
    limit = 7;
    offset = (args.0 || 0);
    users = ref(user.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter',{"gid" = 0}));
    getCountUsers = ref(user.list_for_api('admin', 1, filter, {"gid" = 0})).size;
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {{ getCountUsers - 1 }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN users }}
                    {{ status = (item.block == 0 ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status _' '_ item.full_name.replace('"', '\"')  }} ({{ item.user_id _'-'_ item.login }})",
                            "callback_data": "/admuser {{ item.user_id _' '_ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF users.size == limit || offset > 0 }}
                    [
                        {{ IF offset > 0 }}
                            {
                                "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                "callback_data": "/admusers {{ offset - limit }}"
                            },
                        {{ END }}
                        {{ IF users.size == limit }}
                            {
                                "text": "–ï—â—ë ‚û°Ô∏è",
                                "callback_data": "/admusers {{ limit + offset }}"
                            }
                        {{ END }}
                    ],
                {{ END }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                        "callback_data": "/adminmenu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admusersall' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR itema IN ref(user.list_for_api( 'admin', 1, 'limit', 999).nsort('user_id')) }}
                  {{ IF itema.gid == 0 }}
                [
                    {
                        "text": "{{ IF itema.block == 0}}üü¢{{ ELSE }}üî¥{{ END }}{{ itema.user_id }}.{{ itema.full_name }}  - {{ itema.login }} ",
                        "callback_data": "/admuser {{ itema.user_id }} "
                    }
                ],    {{ END }}  
{{ END }}           
                  [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admusers"
                    }
                ],[
                    {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }, {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE ['/admuser', '/qadmuser'] %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ user_services = ref(user.services.list_for_api('category','%')) }}
{{ FOR itemlk IN ref(user.id(args.0)) }}
{{ IF cmd == '/qadmuser' }}
{
    "sendMessage": {
{{ END }}
{{ IF cmd == '/admuser' }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
{{ END }}
        "text": "{{ itemlk.full_name }}\n{{ itemlk.login }}\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {{ itemlk.created }}\n–£—Å–ª—É–≥: {{ user_services.size }}\n–ë–∞–ª–∞–Ω—Å: {{ itemlk.balance }}‚ÇΩ\n–°–∫–∏–¥–∫–∞: {{ itemlk.discount }}%\n–ë–æ–Ω—É—Å—ã: {{ itemlk.get_bonus }}{{ IF user.block == 1 }}\nüî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω{{ END }}",
        "reply_markup" : {
            "inline_keyboard": [
                         {{ IF user.block == 0 }}
                         {{ IF user_services.size > 0 }}
                       [
                    {
                        "text": "–£—Å–ª—É–≥–∏",
                        "callback_data": "/admservice {{ itemlk.id }}"
                    }
                ],{{ ELSE }} 
                 [
                    {
                        "text": "–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/admpricelist {{ itemlk.id }}"
                    }
                ],
                  {{ END }} [
                    {
                        "text": "–ü–ª–∞—Ç–µ–∂–∏",
                        "callback_data": "/admpay {{ itemlk.id }}"
                    }
                ],[
                    {
                        "text": "–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π",
                        "callback_data": "/admpayhistory {{ itemlk.id }}"
                    }
                ],
                 [
                    {
                        "text": "–ë–æ–Ω—É—Å—ã",
                        "callback_data": "/admpayb {{ itemlk.id }}"
                    }
                ], [
                    {
                        "text": "–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
                        "callback_data": "/admusermsg {{ user.settings.telegram.chat_id }}"
                    }
                ],{{ END }}
                  {{ IF user.block == 0 }}
                     [
                    {
                        "text": "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                        "callback_data": "/admuserblock {{ itemlk.id }}"
                    }
                ], {{ ELSE }}[
                    {
                        "text": "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                        "callback_data": "/admuseractiv {{ itemlk.id }}"
                    }
                ],
               {{ END }}
                 [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]{{ END }}    
        }
    }
}
{{ END }}
<% CASE '/admusermsg' %>
{
"sendMessage": {
        "text": "#{{ args.0 }}#\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "reply_markup": {
            "force_reply": true
        }
    }
}
<% CASE '/admservice' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ FOR itemlks IN ref(user.id(args.0)) }}
{{ user = user.switch(args.0) }}
{{ usis = user.services.list_for_api( 'usi', args.1 ) }}
{{ USE date }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–£—Å–ª—É–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n{{ itemlks.full_name }}\n{{ itemlks.login }}\n–£—Å–ª—É–≥–∞: {{ usis.name }}\n–°—Ç–∞—Ç—É—Å: {{ usis.status }}\n–°–æ–∑–¥–∞–Ω: {{ usis.created }}\n–û–ø–¥–∞—á–µ–Ω –¥–æ: {{ usis.expire }}{{ IF usis.next }} {{ FOR itemis IN ref(service.api_price_list)}}{{ IF itemis.service_id == usis.next }}\n\n<b>–°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞:</b>{{ itemis.name }} \n–ü—Ä–æ–∏–∑–æ–π–¥—ë—Ç: {{ date.format(usis.expire, '%H:%M %d.%m.%Y') }}  (–ú–°–ö) {{ END }} {{ END }}{{ ELSE }}  {{ END }}",
        "reply_markup" : {
            "inline_keyboard": [
               {{ IF usis.status == 'ACTIVE' }}     
                 [
                    {
                        "text": "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/admusiblock {{ user.id }}"
                    }
                ],  {{ ELSE }}         
              [
                    {
                        "text": "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/admusiactive {{ user.id }}"
                    }
                ],    {{ END }}   
{{ IF usis.next }}
{{ FOR itemis IN ref(service.api_price_list)}}
{{ IF itemis.service_id == usis.next }}
                 [
                    {
                        "text": "–û—Ç–º–µ–Ω–∏—Ç—å —Å–º–µ–Ω—É —Ç–∞—Ä–∏—Ñ–∞",
                        "callback_data": "/admchoisenull {{ user.id }}"
                    }
                ],
{{ END }} {{ END }}
{{ ELSE }} 
                   [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "/admsmena {{ user.id }}"
                    }
                ],
{{ END }}
                [
                    {
                        "text": "‚ùå –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/admdelete {{ user.id }}"
                    }
                ], [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                    {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]{{ END }}    
        }
    }
}
{{ END }}
<% CASE '/admpricelist' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "‚ò∑ –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{ user.full_name }}",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR itemprl IN ref(service.api_price_list).nsort('cost') }}
                [
                    {
                        "text": "{{ itemprl.name }}.",
                        "callback_data": "/admserviceorder {{ user.id }} 0 {{ itemprl.service_id }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }}
<% CASE '/admserviceorder' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }} }
},
{
    "billcpServiceOrder": {
        "service_id": "{{ args.2 }}",
        "callback_data": "/admuser {{ user.id }}",
        "cb_not_enough_money": "/admuser {{ user.id }}",
        "error": "–û–®–ò–ë–ö–ê"
    }
}{{ END }}
<% CASE '/admuserblock' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisbl = user.services.list_for_api('usi', {}) }}
{{ usblall =  us.id(usisbl.user_service_id(usisbl.user_service_id)).block }}
{{ userblocks = user.set('block',1) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user.full_name }}\n–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüî¥\n–£—Å–ª—É–≥–∞: {{ usisbl.name }}\n–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞üî¥",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                     {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admuseractiv' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisact = user.services.list_for_api('usi', {}) }}
{{ activ =  us.id(usisact.user_service_id(usisact.user_service_id)).activate }}
{{ useractivs = user.set('block',0) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user.full_name }}\n–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüü¢\n–£—Å–ª—É–≥–∞: {{ usisact.name }}\n–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞üü¢",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                     {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admusiblock' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisb = user.services.list_for_api('usi', {}) }}
{{ blocks =  us.id(usisb.user_service_id(usisb.user_service_id)).block }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user.full_name }}\n–£—Å–ª—É–≥–∞: {{ usisb.name }}\n–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                     {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admusiactive' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisa = user.services.list_for_api('usi', {}) }}
{{ activ =  us.id(usisa.user_service_id(usisa.user_service_id)).activate }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user.full_name }}\n–£—Å–ª—É–≥–∞: {{ usisa.name }}\n–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                     {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/users"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/admin"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admsmena' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ ussm = user.services.list_for_api('usi', {}) }}
{{ USE date }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏\n\n<b>–¢–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{ user.full_name }}\n</b>{{ ussm.name }}\n<b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ</b>: {{ date.format(us.expire, '%H:%M %d.%m.%Y') }}  (–ú–°–ö)\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥</b>",
        "reply_markup" : {
            "inline_keyboard": [               
                {{ FOR itemsm IN ref(service.api_price_list).nsort('cost') }}                 
                [
                    {
                        "text": "{{ itemsm.name }}.",
                        "callback_data": "/admchoise {{ ussm.user_id }} 0 {{ itemsm.service_id }}"
                    }
                ],
                {{ END }} 
                  [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }} 
<% CASE '/admchoise' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ itemadmch = user.services.list_for_api('usi', {}) }}
{{ ntch = us.id(itemadmch.user_service_id).set('next', args.2) }}
{{ USE date }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–¢–∞—Ä–∏—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ user.full_name }} –∏–∑–º–µ–Ω—ë–Ω. \n\n–°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç {{ date.format(us.expire, '%H:%M %d.%m.%Y') }}",
        "reply_markup" : {
            "inline_keyboard": [ 
                  [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ],[
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }}
<% CASE '/admchoisenull' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ itemadmchn = user.services.list_for_api('usi', {}) }}
{{ ntchn = us.id(itemadmchn.user_service_id).set('next') }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞: {{ itemadmchn.name }}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{ user.full_name }}\n–û—Ç–º–µ–Ω–µ–Ω–∞.",
        "reply_markup" : {
            "inline_keyboard": [ 
                  [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% CASE '/admdelete' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisdel = user.services.list_for_api( 'usi', {} ) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏: {{ usisdel.name }}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{ user.full_name }}\n\nü§î <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ. –ö–ª—é—á –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</b>",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üóë –î–ê, –£–î–ê–õ–ò–¢–¨! üóë",
                        "callback_data": "/admdelete_confirmed {{ user.id }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }}
<% CASE '/admdelete_confirmed' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ usisdels = user.services.list_for_api( 'usi', {} ) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }} }
},
{
    "billcpServiceDelete": {
        "usi": "{{ usisdels.user_service_id }}",
        "callback_data": "/admuser {{ user.id }}",
        "error": "–û–®–ò–ë–ö–ê"
    }
}
 {{ END }}
<% CASE '/admpay' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ FOR itempl IN ref(user.id(args.0)) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "{{ itempl.full_name }}\n–ë–∞–ª–∞–Ω—Å: {{ itempl.balance }}‚ÇΩ\n\n–ó–∞—á–∏—Å–ª–∏—Ç—å:",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "10‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 10"
                    }
                ], [
                    {
                        "text": "50‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 50"
                    }
                ], 
				[
                    {
                        "text": "100‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 100"
                    }
                ],
				[
                    {
                        "text": "200‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 200"
                    }
                ],
				[
                    {
                        "text": "350‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 350"
                    }
                ],
				[
                    {
                        "text": "500‚ÇΩ",
                        "callback_data": "/admpayment {{ itempl.user_id }} 500"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                   {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    }, {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]{{ END }}    
        }
    }
}
{{ END }}  

<% CASE '/admpayment_manual' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ userData = user.id(args.0) }}
{
    "sendMessage": {
        "text": "üí≥ <b>–†—É—á–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>{{ userData.full_name }}</b> (ID: <code>{{ userData.user_id }}</code>):",
        "parse_mode": "HTML",
        "reply_markup": {
            "force_reply": true,
            "input_field_placeholder": "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 150)"
        }
    }
}
{{ END }}

<% CASE '/admpayment' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ userData = user.id(args.0) }}
{{ amount = args.1 }}
{{ pay = userData.payment('money', amount, 'pay_system_id', 'manual') }}
{
    "sendMessage": {
        "text": "üí≥ <b>–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —É—Å–ø–µ—à–Ω–æ!</b>\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–∏–ª–∏ <b>{{ amount }}‚ÇΩ</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID <code>{{ userData.user_id }}</code>.",
        "parse_mode": "HTML"
    }
}
{{ END }}


<% CASE '/admpayb' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{{ FOR itemplb IN ref(user.id(args.0)) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "{{ itemplb.full_name }}\n–ë–æ–Ω—É—Å–æ–≤: {{ itemplb.get_bonus }}\n\n–ó–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å–æ–≤:",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "10",
                        "callback_data": "/admpaymentb {{ itemplb.user_id }} 10"
                    }
                ], [
                    {
                        "text": "50",
                        "callback_data": "/admpaymentb {{ itemplb.user_id }} 50"
                    }
                ], [
                    {
                        "text": "100",
                        "callback_data": "/admpaymentb {{ itemplb.user_id }} 100"
                    }
                ],
                          [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ],  [
                    {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]{{ END }}    
        }
    }
}
{{ END }}  

<% CASE '/admpaymentb' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch( args.0 ) }}
{{ bon = user.add_bonus( args.1 ) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userb.full_name }} –Ω–∞—á–∏—Å–ª–µ–Ω–æ {{ args.1 }}  - {{ args.0 }}–±–æ–Ω—É—Å–æ–≤",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ],  [
                    {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }}
<% CASE '/payitogo' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ sum = 0 }}
{{ arr = ref(user.pays.list_for_api( 'admin', 1, 'limit', 0,  'filter', { 'date' => '2024-%-%'} )) }}
{{ FOR item IN arr }}
{{ sum = sum + item.money }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–î–æ—Ö–æ–¥:\n–ò—Ç–æ–≥–æ –∑–∞ 2024 –≥–æ–¥: {{ sum }} —Ä—É–±.",
        "reply_markup" : {
            "inline_keyboard": [
                       [
                    {
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}{{ END }}
<% CASE '/admpayhistory' %>
{{ IF message.chat.id == config.telegram_admin.id }}
{{ user = user.switch(args.0) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode":"HTML",
        "text": "–ü–ª–∞—Ç–µ–∂–∏",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR itemhis IN ref(user.pays.list_for_api('limit', 10)) }}
                [
                    {
                        "text": "–î–∞—Ç–∞: {{ itemhis.date }}, –°—É–º–º–∞: {{ itemhis.money }} —Ä—É–±.",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ],
                {{ END }}
				
                 [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/admuser {{ user.id }}"
                    }
                ], [
                    {
                        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                        "callback_data": "/admusers"
                    },{
                        "text": "–ê–¥–º–∏–Ω–∫–∞",
                        "callback_data": "/adminmenu"
                    }
                ],
                 [
                    {
                        "text": "üè† –î–æ–º–æ–π",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}
<% END %>
