<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta name="format-detection" content="telephone=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="MobileOptimized" content="176">
    <meta name="HandheldFriendly" content="True">
    <meta name="robots" content="noindex,nofollow">
    <title>–ü–æ–¥–ø–∏—Å–∫–∞</title>

    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            background: url('https://i.ibb.co/wJH1xbb/DALL-E-2025-01-06-16-13.png') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .container-custom {
            background: #fff;
            border-radius: 16px;
            padding: 30px;
            margin: 5vh auto;
            max-width: 500px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            text-align: center;
        }

        .btn-custom {
            width: 100%;
            margin-top: 20px;
            font-size: 16px;
            font-weight: bold;
            padding: 12px;
            border-radius: 8px;
        }

        .btn-primary {
            background: linear-gradient(90deg, #30a5f2, #0071bc);
            border: none;
        }

        .btn-primary:hover {
            background: linear-gradient(90deg, #0071bc, #00497a);
        }

        @media (max-width: 576px) {
            .container-custom {
                padding: 20px;
                max-width: 90%;
            }

            .btn-custom {
                font-size: 14px;
                padding: 10px;
            }
        }
    </style>
</head>
    <body>
    {{ IF request.params.uid }}
    {{ user = user.switch(request.params.uid) }}
    {{ us = user.services.list_for_api('usi', request.params.us_id) }}
    {{ key = storage.read('name', 'vpn_mrzb_' _ request.params.us_id) }}
    {{ sub_url = storage.read('name', 'vpn_mrzb_' _ args.0 ).subscription_url }}
    {{ bytes = http.get("$sub_url/info").used_traffic }}
    {{ gb = bytes / 1073741824 FILTER format("%.0f") }}
    {{ mb = (bytes % 1073741824) / 1048576 FILTER format("%.0f") }}
    
    {{ TEXT = BLOCK }}
    {{ IF mb == 0 }}
    {{ ELSE}}
        {{ IF gb >= 1 }}
–ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: {{ gb }} Gb.{{ mb }} Mb
        {{ ELSE }}
–ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: {{ mb }} Mb
        {{ END }}
    {{ END }}
{{ END }}
	

    {{ USE date }}
    {{ date_sec = date.now }}
    {{ expire_sec = date.format(us.expire, '%s') }}
    {{ days_left = (expire_sec - date_sec) div 86400 }}
    {{ months = days_left div 30 }}
    {{ days = days_left % 30 }}
    <div class="container container-custom">
                <strong>‚è≥ –û—Å—Ç–∞–ª–æ—Å—å:</strong> 
                {{ IF months == 0 }}
                    {{ IF days == 1 }}1 –¥–µ–Ω—å üïí
                    {{ ELSIF days == 2 or days == 3 or days == 4 }}{{ days }} –¥–Ω—è üïì
                    {{ ELSE }}{{ days }} –¥–Ω–µ–π üïî
                {{ END }}
                {{ ELSE }}
                    {{ IF months == 1 }}1 –º–µ—Å—è—Ü üìÖ - 
                    {{ ELSIF months == 2 or months == 3 or months == 4 }}{{ months }} –º–µ—Å—è—Ü–∞ üìÖ - 
                    {{ ELSE }}{{ months }} –º–µ—Å—è—Ü–µ–≤ üìÖ - 
                    {{ END }}
                    {{ IF days > 0 }}
                        {{ IF days == 1 }}1 –¥–µ–Ω—å üïí
                        {{ ELSIF days == 2 or days == 3 or days == 4 }}{{ days }} –¥–Ω—è üïì
                        {{ ELSE }}{{ days }} –¥–Ω–µ–π üïî
                        {{ END }}
                    {{ END }}
                {{ END }}
            </h5>
            </div>
        </div>
    {{ END }}
    <div class="container container-custom">
 <h2>üëã –ü—Ä–∏–≤–µ—Ç, {{ user.full_name }}</h2>
         <p>üîí –ü–æ–¥–ø–∏—Å–∫–∞: {{ us.name }}</p>
        <p>üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: {{ us.expire }}</p>
 
<div class="container container-custom">
    <!-- Device Information -->
    <div id="device-info-container">
        <p id="device-info">–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ...</p>
    </div>

    <!-- Links and Buttons -->
    <div id="device-buttons" style="display: none;">
        <!-- Auto-connect link -->
        <a id="auto-connect-link" class="btn btn-primary btn-custom" href="#" style="display: none;" target="_blank">
            üåê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        </a>

        <!-- Download app link -->
        <a id="download-link" class="btn btn-success btn-custom" href="#" style="display: none;" target="_blank">
            üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        </a>

        <!-- Copy subscription URL -->
        <button class="btn btn-primary btn-custom" onclick="copyToClipboard('{{ key.subscription_url }}');">üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</button>
    </div>
</div>

<!-- Scripts -->
<script>
    function checkHiddifyInstalled(autoConnectUrl) {
        const downloadLink = document.getElementById('download-link');
        let appOpened = false;

        // Attempt to open the custom URI scheme
        const timeout = setTimeout(() => {
            if (!appOpened) {
                console.log('App is not installed');
                downloadLink.style.display = 'block'; // Show download link
            }
        }, 1500);

        // Try to open the app
        const hiddenFrame = document.createElement('iframe');
        hiddenFrame.style.display = 'none';
        hiddenFrame.src = autoConnectUrl;

        hiddenFrame.onload = () => {
            appOpened = true;
            clearTimeout(timeout);
            console.log('App is installed');
            downloadLink.style.display = 'none'; // Hide download link
        };

        document.body.appendChild(hiddenFrame);

        // Clean up iframe after the attempt
        setTimeout(() => {
            document.body.removeChild(hiddenFrame);
        }, 2000);
    }

    function detectDevice() {
        const userAgent = navigator.userAgent.toLowerCase();
        const deviceInfo = document.getElementById('device-info');
        const autoConnectLink = document.getElementById('auto-connect-link');
        const downloadLink = document.getElementById('download-link');
        const deviceButtons = document.getElementById('device-buttons');

        let platform;
        let downloadUrl = '#';
        let autoConnectUrl = `hiddify://install-config/?url={{ key.subscription_url }}`;

        // Detect platform
        if (userAgent.includes('iphone') || userAgent.includes('ipad')) {
            platform = 'Apple (iPhone/iPad)';
            downloadUrl = 'https://apps.apple.com/ru/app/hiddify-proxy-vpn/id6596777532'; // App Store link
        } else if (userAgent.includes('android')) {
            platform = 'Android';
            downloadUrl = 'https://play.google.com/store/apps/details?id=app.hiddify.com&hl=ru'; // Play Store link
        } else {
            platform = '–ü–ö';
            downloadUrl = 'https://admin.mrzbcli.ru/shm/v1/template/subscriptions_apps?format=html'; // PC download link
        }

        // Update UI based on platform
        deviceInfo.textContent = `–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${platform}`;
        autoConnectLink.href = autoConnectUrl;
        autoConnectLink.style.display = 'block';
        downloadLink.href = downloadUrl;

        deviceButtons.style.display = 'block';

        // Check if the app is installed
        checkHiddifyInstalled(autoConnectUrl);
    }

    // Initialize on page load
    window.onload = detectDevice;
</script>


    <!-- Bootstrap 5 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
