<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8">
    <meta name="viewport"
          content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
    <meta name="format-detection" content="telephone=no"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="MobileOptimized" content="176"/>
    <meta name="HandheldFriendly" content="True"/>
    <meta name="robots" content="noindex,nofollow"/>
    <title></title>
    <script src="https://telegram.org/js/telegram-web-app.js?1"></script>
    <style>
        body {
            --bg-color: var(--tg-theme-bg-color, #fff);
            font-family: sans-serif;
            background-color: var(--bg-color);
            color: var(--tg-theme-text-color, #222);
            font-size: 14px;
            margin: 0;
            padding: 0;
            color-scheme: var(--tg-color-scheme);
        }

        .btn {
            font-size: 14px;
            padding: 10px 17px;
        }

        .btn-primary {
            background-color: var(--tg-theme-button-color, #50a8eb);
            color: var(--tg-theme-button-text-color, #fff);
            border: none;
        }

        .button-container {
            display: flex;
        }

        button {
            display: block;
            width: 100%;
            font-size: 14px;
            margin: 5px 0;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            background-color: var(--tg-theme-button-color, #50a8eb);
            color: var(--tg-theme-button-text-color, #ffffff);
            cursor: pointer;
        }

        button.remove {
            width: 40px;
            padding: 10px;
            margin-left: 10px;
            background-color: red;
        }

        .main-container {
            padding: 15px;
        }

        button[disabled] {
            opacity: 0.6;
            cursor: auto;
            pointer-events: none;
        }

        button.close_btn {
            /*position: fixed;*/
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            border-radius: 0;
            margin: 0;
            padding: 16px 20px;
            text-transform: uppercase;
        }

        input[type="number"],
        .input[contenteditable] {
            display: block;
            box-sizing: border-box;
            font-size: 14px;
            width: 100%;
            padding: 12px 20px;
            margin: 15px 0;
            border: 1px solid var(--tg-theme-link-color, #000);
            background-color: var(--tg-theme-bg-color, #ffffff);
            border-radius: 4px;
            color: var(--tg-theme-text-color, #222222);
            text-align: start;
        }

        input[type="number"]::-webkit-input-placeholder {
            color: var(--tg-theme-hint-color, #ccc);
        }

        input[type="number"]::-moz-placeholder {
            color: var(--tg-theme-hint-color, #ccc);
        }

        input[type="number"]:-ms-input-placeholder {
            color: var(--tg-theme-hint-color, #ccc);
        }

        .input[data-placeholder] {
            position: relative;
        }

        .input[data-placeholder]:empty:before {
            position: absolute;
            left: 0;
            right: 0;
            content: attr(data-placeholder);
            color: var(--tg-theme-hint-color, #ccc);
            padding: 0 20px;
            font-weight: normal;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            pointer-events: none;
            z-index: -1;
        }

        section {
            padding: 15px;
            text-align: center;
            background-color: var(--bg-color, #ffffff);
        }

        section .sect_row {
            margin: 10px 0;
        }

        section + section {
            padding: 0 15px 65px;
        }

        p {
            margin: 40px 0 15px;
        }
    </style>
</head>

<body class="" style="visibility: hidden;">

<section class="main-container">
    <h2>Оплата подписки</h2>
    <h4 style="text-align:left;">Сумма к оплате:</h4>
    <input
        type="number"
        step="0.01"
        min="1"
        class="input"
        value=""
        id="text_amount"
        placeholder="введите сумму к оплате"
        inputmode="numeric" \
        pattern="\d*"
        required
    />
</section>

<section id="main_section">
    <h4 style="text-align:left;">Выберите способ оплаты:</h4>

{{ FOR item IN ref(pay.paysystems) }}
    <div class="button-container" id='{{ item.shm_url }}'>
        <button onclick="ShmPayApp.makePayment('{{ item.shm_url }}','{{ item.recurring }}');">{{ item.name }}</button>
        {{ IF item.recurring }}
        <button onclick="ShmPayApp.removePayment('{{ item.shm_url }}');" class="remove">Х</button>
        {{ END }}
    </div>
{{ END }}
</section>

<script type="application/javascript">
    const ShmPayApp = {
        user_id       : {{ user.id }},
        initData      : Telegram.WebApp.initData || '',
        initDataUnsafe: Telegram.WebApp.initDataUnsafe || {},
        MainButton    : Telegram.WebApp.MainButton,

        init(options) {
            document.body.style.visibility = '';
            Telegram.WebApp.ready();
            Telegram.WebApp.MainButton.setParams({
                text      : 'Закрыть',
                is_visible: true
            }).onClick(ShmPayApp.close);
            Telegram.WebApp.expand();
        },
        expand() {
            Telegram.WebApp.expand();
        },
        close() {
            Telegram.WebApp.close();
        },

        makePayment(shm_url, recurring) {
            var amount = document.getElementById('text_amount').value;
            if ( amount < 1 ) {
                Telegram.WebApp.showAlert("Ошибка: Некоректная сумма к оплате");
                return;
            };

            if ( recurring == '1' ) {
                Telegram.WebApp.MainButton.showProgress();
                document.getElementById('main_section').style.display = 'none';

                var xhr = new XMLHttpRequest();
                xhr.open('GET', shm_url + amount);
                xhr.responseType = 'json';

                xhr.onload = function() {
                    Telegram.WebApp.MainButton.hideProgress();
                    if (xhr.status === 200) {
                        Telegram.WebApp.showAlert( "Платеж проведен успешно" );
                    } else {
                        var jsonResponse = xhr.response;
                        Telegram.WebApp.showAlert( "Ошибка: " + ( jsonResponse.msg_ru || jsonResponse.msg ) );
                    }
                    Telegram.WebApp.close();
                }
                xhr.send();
            } else {
                Telegram.WebApp.openLink( shm_url + amount, { try_instant_view: false } );
                Telegram.WebApp.close();
            }
        },
        removePayment(shm_url) {
            Telegram.WebApp.showConfirm('Отвязать сохраненный способ оплаты?', function(confirmed) {
                if (!confirmed) return;

                document.getElementById( shm_url ).style.display = 'none';
                var xhr = new XMLHttpRequest();
                xhr.open('DELETE', '/shm/v1/user/autopayment');
                xhr.setRequestHeader('session-id', '{{ user.user.gen_session.id }}');
                xhr.send();
            });
        },
    }
</script>

<script type="application/javascript">
    document.getElementById('text_amount').value = "{{ ref(pay.paysystems).0.amount }}";
    ShmPayApp.init();
</script>

</body>
</html>
