{{ MACRO sendAlert BLOCK }}
    {
        "answerCallbackQuery": {
            "callback_query_id": {{ callback_query.id }},
            "parse_mode":"HTML",
            "text": "{{ errtext.replace('\n','\n') }}",
            "show_alert": true
        }
    }
    {{ IF redirect }}
        ,{
            "shmRedirectCallback": {
                "callback_data": "{{ redirect }}"
            }
        }
    {{ END }}
    {{ STOP }}
{{ END }}

{{ MACRO redirect BLOCK }}
    {
        "shmRedirectCallback": { "callback_data": "{{ callback }}" }
    }
    {{ STOP }}
{{ END }}

{{
    # Get data from storage
    storageMessageType = user.id(1).storage.read('name', 'bot_configuration').messageType;
    storageMenuCmd = user.id(1).storage.read('name', 'bot_configuration').menuCmd;
    storageCheckNotPaidServices = user.id(1).storage.read('name', 'bot_configuration').checkNotPaidServices;
}}

<%# Check for admin rights from user settings %>
<%# for use admin menu, set role = "admin" or "moderator" %>
{{ BLOCK checkAdminRights }}
    {{ IF user.settings.role != "admin" && user.settings.role != "moderator" }}
        {{ sendAlert(code=403, errtext='‚≠ïÔ∏è –†–∞–∑–¥–µ–ª –∑–∞–∫—Ä—ã—Ç', redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}


<%# Check for moderator rights %>
{{ MACRO checkModeratorRights BLOCK }}
    {{ IF user.settings.role == "moderator" && user.settings.moderate.$right != 1 }}
        {{ sendAlert(code=403, errtext="‚≠ïÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!", redirect=mainMenuCmd) }}
    {{ END }}
{{ END }}

<%# sendMessage or editMessageText functional %>
{{ MACRO send BLOCK }}
    {{
        messageType =
            (cmd == '/start') ? 'sendMessage' :
            (cmd == '/menu' && mainMenuCmd == '/menu') ? 'editMessageText' :
            (mainMenuCmd == '/start' || cmd == '/start') ? 'sendMessage' :
            (edit == 0) ? 'sendMessage' :
            (edit == 1) ? 'editMessageText' :
            (defaultMessageType == 'editMessageText' ) ? 'editMessageText' :
            defaultMessageType;

        # Clear state
        ret = user.set_settings({'state' => ''});

        IF user.settings.bot.reqPromo > 0;
            delete(msgID=[user.settings.bot.reqPromo]);
            ret = user.set_settings({'bot' => {'reqPromo' => ''} });
        END;

        IF (cmd != '/start' && !edit && messageType != 'editMessageText' );
            delete(msgID=[message.message_id]);
        END; 
        
        # variable check for admin rights to access admin menu
        IF admin == 1;
            PROCESS checkAdminRights;
        END;
    }}
    {
        "sendChatAction": {
            "chat_id": "{{ user.settings.telegram.chat_id }}",
            "action": "typing"
        }
    },
    {
        "{{messageType}}": {
            {{ IF messageType == 'editMessageText'}}
                "message_id": "{{ message.message_id }}",
            {{ END }}
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            }
        }
    }
{{ END }}

{{ MACRO notification BLOCK }}
    {
        "sendMessage": {
            "parse_mode": "HTML",
            "text": "{{ TEXT.replace('\n','\n') }}",
            "reply_markup": {
            {{ IF force == 1 }}
                "force_reply": true,
                "input_field_placeholder": "{{ placeholder }}"
            {{ END }}
            {{ IF BUTTONS }}
                "inline_keyboard": [
                    {{ BUTTONS }}
                ]
            {{ END }}
            }
        }
    }
{{ END }}

{{ MACRO delete BLOCK }}
{
    "deleteMessages": { "chat_id": {{ user.settings.telegram.chat_id }}, "message_ids": {{ toJson(msgID) }} }
},
{{ END }}

{{ MACRO cancelRegistration BLOCK }}
{
    "sendMessage": {
        "text": "‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /start.",
        "parse_mode": "HTML"
    }
}
{{ STOP }}
{{ END }}

<% SWITCH cmd %>
<% CASE 'cancel_registration' %>
{
        "deleteMessage": { "message_id": "{{ message.message_id }}" }
},
    {
        "sendMessage": {
            "text": "‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /start.",
            "parse_mode": "HTML"
        }
    }
    <% CASE 'USER_NOT_FOUND' %>
    {
        "deleteMessage": { "message_id": "{{ message.message_id }}" }
    },
    {
        "sendMessage": {
            "text": "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{{ config.company.name }}</b>. –Ø —Å–¥–µ–ª–∞—é —Ç–≤–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–æ–ª–µ–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏ –æ—Ç–∫—Ä—ã—Ç—ã–º.\n\n- üîí –ê–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ª—é–±—ã–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º —Å–µ—Ç—è–º\n- üåê –û–±—Ö–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n- üîì –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º\n- üîë –î–≤–æ–π–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n- üí≥ –û–ø–ª–∞—Ç–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏\n\n<b>–ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ:</b>",
            "parse_mode": "HTML",
            "photo": "{{ config.logo.url }}",
            "reply_markup": {
                "inline_keyboard": [
                    [
                        {
                            "text": "–°–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                            "web_app": {
                                "url": "https://sogl.mrzbcli.ru/privacy_policy.html"
                            }
                        }
                    ],
                    [
                        {
                            "text": "‚úÖ –î–∞",
                            "callback_data": "/register {{ args.0 }}"
                        },
                        {
                            "text": "‚ùå –ù–µ—Ç",
                            "callback_data": "cancel_registration"
                        }
                    ]
                ]
            }
        }
    }
<% CASE '/register' %>
    {
        "deleteMessage": { "message_id": "{{ message.message_id }}" }
    },
    {
        "shmRegister": {
            "partner_id": "{{ args.0 }}",
            "callback_data": "/start",
            "error": "–û–®–ò–ë–ö–ê: –õ–æ–≥–∏–Ω {{ message.chat.username }} –∏–ª–∏ chat_id {{ message.chat.id }} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        }
}

<% CASE ['/start', '/menu', 'üåç –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é', 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å'] %>
{{   # variables
     messageType = (cmd == '/menu') ? 1 : 0;
}}
{
    "deleteMessage": { 
        "message_id": {{ message.message_id }} 
    }
},
{{ user_services = ref(user.services.list_for_api('filter', { 'category' => '%', status => 'ACTIVE' } )) }}
{{ TEXT = BLOCK }}
üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>{{ config.company.name }}</b>!
<i>‚ú® –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —É–¥–æ–±—Å—Ç–≤–æ –∏ –ø—Ä–æ—Å—Ç–æ—Ç—É —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º ‚Äî –≤–∞—à–∏–º –≤–µ—Ä–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º!

üõ† –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞–º–∏ –∑–∞ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.
üí≥ –£–¥–æ–±–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –°–ë–ü –∏ T-PAY.
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
üîÑ –°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –±–µ–∑ –∞–¥–º–∏–Ω–∞.
üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN: TLS –∏ –¥—Ä.

üí° –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?
üïí –≠–∫–æ–Ω–æ–º—å—Ç–µ –≤—Ä–µ–º—è ‚Äî –≤—Å—ë –ø–æ–¥ —Ä—É–∫–æ–π.
üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
üì± –î–æ—Å—Ç—É–ø —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.</i>
{{ END }}
{
    "sendPhoto": {
        "photo": "{{ config.logo.url }}",
        "caption": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole }}",
                        "callback_data": "admin:menu"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "ü™™ –ü—Ä–æ—Ñ–∏–ª—å: {{ user.balance }} ‚ÇΩ",
                        "callback_data": "/profile"
                    },
                    {
                        "text": "‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
                        }
                    }
                ],
                [
                    {
                        "text": "üõí –ö—É–ø–∏—Ç—å",
                        "callback_data": "/pricelist"
                    },
                    {
                        "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
                        "callback_data": "/list"
                    }
                ],
                [
                    {
                        "text": "ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                        "callback_data": "/referrals"
                    },
                    {
                        "text": "üìñ –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                        "callback_data": "/help"
                    }
                ],
                [
                    {
                        "text": "üíö –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤",
                        "web_app": {
                            "url": "{{ config.uptime.url }}"
                        }
                    }
                ],
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/profile' %>
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ active_services = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'ACTIVE' })) }}

{{ TEXT = BLOCK }}
<b>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

<b>üîπ –ò–º—è:</b> {{ user.full_name }}
<b>üîπ –õ–æ–≥–∏–Ω:</b> {{ user.login }}
<b>üîπ ID:</b> {{ user.id }}
<b>üí∞ –ë–∞–ª–∞–Ω—Å:</b> {{ user.balance }} ‚ÇΩ

<b>üöÄ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF active_services.size > 0 }}
{{ FOR service IN active_services }}
- <code>{{ service.name }}</code> (–¥–æ {{ service.expire }})
{{ END }}
{{ ELSE }}
–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥.
{{ END }}

<b>üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
                        }
                    },
                    {
                        "text": "üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π",
                        "callback_data": "/pays {{ userData.id }} {{ offset - limit }}"
                    }
                ],
        [{ "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥", "callback_data": "promocode" }, { "text": "üè∑Ô∏è Web", "web_app": { "url": "{{ config.api.url }}/shm/v1/public/promo?format=html&user_id={{ user.id }}" }}],
                [
                    {
                        "text": "üöÄ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏",
                        "callback_data": "/manage_services"
                    },
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ],
                {{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    }
                ]
                {{ END }}
            ]
        }
    }
}

<% CASE '/manage_services' %>
{{ active_services = ref(user.services.list_for_api('filter', { 'status' => 'ACTIVE' })) }}
{{ expired_services = ref(user.services.list_for_api('filter', { 'status' => 'NOT PAID' })) }}
{{ # Variables
    active_services = user.services.list_for_api('usi', args.0);

    # Plugins
    USE date;
}}
{{ TEXT = BLOCK }}
üöÄ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏</b>

{{ IF active_services.size == 0 && expired_services.size == 0 }}
<i>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.</i>
{{ ELSE }}
<b>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF active_services.size > 0 }}
{{ FOR service IN active_services }}
- <b>{{ service.name }}</b> (–¥–æ {{ date.format(service.expire, '%d.%m.%Y') }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥.</i>
{{ END }}

<b>‚ùóÔ∏è –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF expired_services.size > 0 }}
{{ FOR service IN expired_services }}
- <b>{{ service.name }}</b> (–∏—Å—Ç—ë–∫ {{ date.format(service.expire, '%d.%m.%Y') }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥.</i>
{{ END }}
{{ END }}

<b>üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF active_services.size > 0 || expired_services.size > 0 }}
                {{
                    limit = 1;
                    offset = args.0 || 0;
                    offset = (offset < 0) ? 0 : offset;
                    active_services = ref(user.services.list_for_api('filter', { 'status' => 'ACTIVE' }, 'limit', limit, 'offset', offset));
                    expired_services = ref(user.services.list_for_api('filter', { 'status' => 'NOT PAID' }, 'limit', limit, 'offset', offset));
                }}
                {{ IF offset > 0 || active_services.size == limit || expired_services.size == limit }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/manage_services {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF active_services.size == limit || expired_services.size == limit }}
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/manage_services {{ offset + limit }}"
                    }
                    {{ END }}
                ],
                {{ END }}
                {{ END }}
                [
                    {
                        "text": "üõí –ö—É–ø–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/pricelist"
                    },
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/manage_services"
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/manage_users' %>
{{ limit = 5 }}
{{ offset = args.0 || 0 }}
{{ offset = (offset < 0) ? 0 : offset }}

{{ active_users = ref(user.list_for_api('filter', { 'status' => 'ACTIVE' }, 'limit', limit, 'offset', offset)) }}
{{ blocked_users = ref(user.list_for_api('filter', { 'status' => 'BLOCKED' }, 'limit', limit, 'offset', offset)) }}

{{ total_users = ref(user.list_for_api('count', { 'status' => 'ACTIVE' })) }}
{{ total_blocked = ref(user.list_for_api('count', { 'status' => 'BLOCKED' })) }}

{{ total_pages_active = Math.ceil(total_users / limit) }}
{{ total_pages_blocked = Math.ceil(total_blocked / limit) }}

{{ TEXT = BLOCK }}
üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>

<b>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
{{ IF active_users.size > 0 }}
{{ FOR user IN active_users }}
- <b>{{ user.name }}</b> (ID: {{ user.id }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</i>
{{ END }}

<b>‚õî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
{{ IF blocked_users.size > 0 }}
{{ FOR user IN blocked_users }}
- <b>{{ user.name }}</b> (ID: {{ user.id }})
{{ END }}
{{ ELSE }}
<i>–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</i>
{{ END }}

<b>üëâ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF offset > 0 || active_users.size == limit }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/manage_users {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF active_users.size == limit }}
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/manage_users {{ offset + limit }}"
                    }
                    {{ END }}
                ],
                {{ END }}
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫",
                        "callback_data": "/manage_users"
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}


<% CASE '/balance' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ userlogs = user.services.list_for_api('usi', {}) }}
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ last_payment = user.payments.last() }}
{{ forecast = user.pays.forecast }}
{{ user_services = ref(user.services.list_for_api('category', '%')) }}
{{ blocked_services = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'BLOCK' })) }}
{{ expired_services = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'NOT PAID' })) }}
{{ active_services = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'ACTIVE' })) }}
{{ USE date }}
{{ TEXT = BLOCK }}
üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {{ user.balance }} ‚ÇΩ  
üéÅ <b>–ë–æ–Ω—É—Å—ã:</b> {{ user.get_bonus }} ‚ÇΩ  
üîñ <b>–°–∫–∏–¥–∫–∞:</b> {{ user.discount }}%  
üë• <b>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π:</b> {{ user.referrals_count }}  
üí≥ <b>–û–±—â–∏–π –¥–æ—Ö–æ–¥ –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> {{ user.get_bonus }} ‚ÇΩ  

‚è≥ <b>–°–ª–µ–¥—É—é—â–µ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ:</b> 
{{ IF userlogs.expire }} 
  <i>{{ date.format(userlogs.expire, '%H:%M %d.%m.%Y') }}</i> 
{{ ELSE }} 
  <i>–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ</i> 
{{ END }}  

üíµ <b>–û–∂–∏–¥–∞–µ–º–∞—è –æ–ø–ª–∞—Ç–∞:</b> <i>{{ forecast.total }} ‚ÇΩ</i>  

<b>üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:</b>
{{ IF blocked_services.size > 0 }}
    {{ FOR service IN blocked_services }}
    - {{ service.name }}
    {{ END }}
{{ ELSE }}
    –ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
{{ END }}


<b>‚ùó –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:</b>
{{ IF expired_services.size > 0 }}
    {{ FOR service IN expired_services }}
    - {{ service.name }}
    {{ END }}
{{ ELSE }}
    –ù–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
{{ END }}

<b>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
{{ IF active_services.size > 0 }}
    {{ FOR service IN active_services }}
    - {{ service.name }} (–¥–æ {{ date.format(service.expire, '%H:%M %d.%m.%Y') }})
    {{ END }}
{{ ELSE }}
    –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥.
{{ END }}

üíµ <b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å:</b> <b>{{ user.pays.forecast('blocked',1).total }} ‚ÇΩ</b>
{{ END }}

{
    "sendPhoto": {
        "photo": "{{ config.logo.url }}",
        "caption": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚úö –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
                        }
                    }
                ],
				 [{ "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥", "callback_data": "promocode" }, { "text": "üè∑Ô∏è Web", "web_app": { "url": "{{ config.api.url }}/shm/v1/public/promo?format=html&user_id={{ user.id }}" }}],
                [
                    {
                        "text": "‚ò∞ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π",
                        "callback_data": "/pays {{ userData.user_id }} {{ offset - limit }}"
                    }
                ],
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/balance"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "{{ mainMenuCmd }}"
                    }
                ]
            ]
        }
    }
}


<% CASE '/pays' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendPhoto": {
        "photo": "{{ config.logo.url }}",
        "caption": "‚ò∞ <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b>",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{
                    limit = 7;
                    offset = args.0 || 0;
                    offset = (offset < 0) ? 0 : offset;
                    pays = ref(user.pays.list_for_api('limit', limit, 'offset', offset));
                }}
                {{ IF pays.size > 0 }}
                    {{ FOR item in pays }}
                    {{ TEXT = BLOCK }}
					  üìÖ –î–∞—Ç–∞: {{ USE date }}{{ date.format(item.date, '%d.%m.%Y') }}
					  üí∞ –°—É–º–º–∞: {{ item.money }} ‚ÇΩ
                    {{ END }}
                    [
                        {
                            "text": "{{ TEXT.replace('\n',' ') }}",
                            "callback_data": "/checkpay {{ item.id }}"
                        }
                    ],
                    {{ END }}
                {{ ELSE }}
                    [
                        {
                            "text": "‚ùóÔ∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –ø–ª–∞—Ç–µ–∂–∞—Ö.",
                            "callback_data": "/menu"
                        }
                    ],
                {{ END }}
                {{ IF pays.size == limit || offset > 0 }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/pays {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF pays.size == limit }}
                    {
                        "text": "‚û°Ô∏è –î–∞–ª–µ–µ",
                        "callback_data": "/pays {{ offset + limit }}"
                    }
                    {{ END }}
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/checkpay' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{
    userPay = ref(pay.list_for_api('limit', 1, 'filter', {"id" = args.0})).first;
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userData = user.id(userPay.user_id);
}}
{{ TEXT = BLOCK }}
üí∏ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ</b>
üÜî <b>ID –ø–ª–∞—Ç–µ–∂–∞:</b> {{ userPay.id }}
üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {{ userData.full_name.replace('"', '"') }} ({{ userData.user_id }})

üìÖ <b>–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞:</b> {{ userPay.date }}
üí≥ <b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</b> {{ userPay.pay_system_id }}
üí∞ <b>–°—É–º–º–∞:</b> {{ userPay.money }} —Ä—É–±.

{{ IF userPay.telegram_bot == 'telegram_bot' }}
‚≠ê <b>–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏:</b> {{ userPay.currency }}
{{ END }}

{{ IF userPay.currency == 'XTR' }}
‚≠ê <b>–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏:</b> {{ userPay.currency }}
{{ END }}

{{ IF userPay.comment.comment }}
üìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É:</b>
<blockquote>{{ userPay.comment.comment }}</blockquote>
{{ END }}

{{ IF payData }}
üìÇ <b>–î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞:</b>
<blockquote> üÜî <b>ID –≤ —Å–∏—Å—Ç–µ–º–µ:</b> {{ payData.id }}
üìä <b>–°—Ç–∞—Ç—É—Å:</b> {{ payData.status }}
{{ IF payCard }}
üí≥ –¢–∏–ø –∫–∞—Ä—Ç—ã: {{ payCard.card_type }}
üî¢ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {{ payCard.first6 }}******{{ payCard.last4 }}
üè¶ –ë–∞–Ω–∫: {{ payCard.issuer_name }}
üåç –°—Ç—Ä–∞–Ω–∞ –±–∞–Ω–∫–∞: {{ payCard.issuer_country }}
üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {{ payCard.expiry_month }}/{{ payCard.expiry_year }}
{{ END }}
{{ IF payMethod.type == 'sbp' }}
üè¶ –¢–∏–ø –æ–ø–ª–∞—Ç—ã: –°–ë–ü
üî¢ –ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –°–ë–ü: {{ payMethod.sbp_operation_id }}
üè¶ –ë–∏–∫ –ë–∞–Ω–∫–∞: {{ payMethod.payer_bank_details.bic }}
{{ END }}

{{ IF payMethod.title.match('YooMoney') }}
üí∞ –ö–æ—à–µ–ª–µ–∫ YooMoney: {{ payMethod.title }}
üÜî ID –∫–æ—à–µ–ª—å–∫–∞: {{ payMethod.account_number }}
{{ END }}
</blockquote>
{{ END }}

{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/checkpay {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥ ‚á¶",
                        "callback_data": "/pays"
                    }
                ]
            ]
        }
    }
}

<% CASE '/list' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ services = user.services.list_for_api('category', '%') }}
{{ TEXT = BLOCK }}
‚≠êÔ∏è <b>–í–∞—à ID:</b> {{ user.id }} ‚≠êÔ∏è

üí° <i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–º –∫–ª—é—á–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∏–∂–µ.</i>

‚ùáÔ∏è <b>–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–ª—é—á–∞:</b> –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å. –í–∞—à–∏ –∫–ª—é—á–∏ –±—É–¥—É—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.

üîë <b>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∫–ª—é—á–∏:</b>
{{ END }}

{{ IF services.size > 0 }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN services }}
                {{ SWITCH item.status }}
                    {{ CASE 'ACTIVE' }}
                        {{ icon = '‚úÖ' }}
                        {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
                    {{ CASE 'BLOCK' }}
                        {{ icon = '‚ùå' }}
                        {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                    {{ CASE 'NOT PAID' }}
                        {{ icon = 'üíµ' }}
                        {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                    {{ CASE }}
                        {{ icon = '‚è≥' }}
                        {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                [
                    {
                        "text": "#{{ item.user_service_id }} - {{ item.name }} - {{ icon }} {{ status }}",
                        {{ IF item.status == 'NOT PAID' }}
                        "callback_data": "/profile {{ item.user_service_id }}"
                        {{ ELSIF item.category != 'vpn-mz-tv' }}
                        "callback_data": "/service {{ item.user_service_id }}"
                        {{ ELSIF item.category == 'vpn-mz-tv' }}
                        "callback_data": "/setup_android {{ item.user_service_id }}"
                        {{ END }}
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚úö –ö—É–ø–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á",
                        "callback_data": "/pricelist"
                    }
                ],
				[
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ üîÑ",
                        "callback_data": "/list"
                    }
                ],
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "text": "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–ª–∏ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚úö –ö—É–ø–∏—Ç—å –∫–ª—é—á",
                        "callback_data": "/pricelist"
                    }
                ],
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}


<% CASE '/hint' %>
{
    "sendMessage": {
        "chat_id": {{ message.chat.id }},
        "parse_mode": "HTML",
        "text": "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ!** –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π:\n\n1Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç–µ  üí≥  –≤—Å–µ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.\n2Ô∏è‚É£ –£–¥–∞–ª–∏—Ç–µ  üóëÔ∏è  –≤—Å–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.\n\n–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! üôè",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/service' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ # Variables
    us = user.services.list_for_api('usi', args.0);

    # Plugins
    USE date;
}}
{{ EXPIRE = BLOCK }}
    {{ USE date }}
    {{ now = date.now }}
    {{ created = date.format(us.created, '%s') }}
    {{ expire = date.format(us.expire, '%s') }}
    {{ remaining = expire - now }}
    {{ IF remaining > 0 }}
        {{ years = remaining DIV (365 * 24 * 60 * 60) }}
        {{ remaining = remaining MOD (365 * 24 * 60 * 60) }}
        {{ months = remaining DIV (30 * 24 * 60 * 60) }}
        {{ remaining = remaining MOD (30 * 24 * 60 * 60) }}
        {{ days = remaining DIV (24 * 60 * 60) }}
        {{ remaining = remaining MOD (24 * 60 * 60) }}
        {{ hours = remaining DIV (60 * 60) }}
        {{ remaining = remaining MOD (60 * 60) }}
        {{ minutes = remaining DIV 60 }}
        {{ seconds = remaining MOD 60 }}
        {{ IF years > 0 }}
            {{ "üìÖ –û—Å—Ç–∞–ª–æ—Å—å: " _ years _ " –≥ " _ months _ " –º–µ—Å." }}
        {{ ELSIF months > 0 }}
            {{ "üìÖ –û—Å—Ç–∞–ª–æ—Å—å: " _ months _ " –º–µ—Å " _ days _ " –¥–Ω " _ hours _ " —á " _ minutes _ " –º–∏–Ω " _ seconds _ " —Å" }}
        {{ ELSE }}
            {{ "üìÖ –û—Å—Ç–∞–ª–æ—Å—å: " _ days _ " –¥–Ω " _ hours _ " —á " _ minutes _ " –º–∏–Ω " _ seconds _ " —Å" }}
        {{ END }}
    {{ ELSE }}
        –£—Å–ª—É–≥–∞ –∏—Å—Ç–µ–∫–ª–∞.
    {{ END }}
{{ END }}
{{ sub_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ bytes = http.get("$sub_url/info").used_traffic }}
{{ gb = bytes / 1073741824 FILTER format("%.0f") }}
{{ mb = (bytes % 1073741824) / 1048576 FILTER format("%.0f") }}
{
    "sendPhoto": {
        {{ SWITCH us.status }}
  {{ CASE 'ACTIVE' }}
  {{ icon = '‚úÖ' }}
  {{ status = ' –†–∞–±–æ—Ç–∞–µ—Ç' }}
  {{ CASE 'BLOCK' }}
  {{ icon = 'üö´' }}
  {{ status = ' –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
  {{ CASE 'NOT PAID' }}
  {{ icon = 'üí≥' }}
  {{ status = ' –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
  {{ CASE }}
  {{ icon = '‚è≥' }}
  {{ status = ' –û–±—Ä–∞–±–æ—Ç–∫–∞' }}
{{ END }}
{{ TEXT = BLOCK }}
<b>üîë –£—Å–ª—É–≥–∞: #id <b>{{ us.user_service_id }}</b> - <code>{{ us.name }}</code></b>
    {{ IF us.expire }}
<b>üóìÔ∏è –û–ø–ª–∞—á–µ–Ω–∞ –¥–æ</b>: {{ date.format(us.expire, '%d.%m.%Y') }}
    {{ END }}
<b>üìä –°—Ç–∞—Ç—É—Å</b>: {{ icon }} {{ status }}
{{ IF us.next != us.service_id && us.next > 0 }}
<b>–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –∫–ª—é—á–∞</b>: {{ service.id(us.next).name }}
{{ END }}
    {{ IF mb == 0 }}
    {{ ELSE}}
        {{ IF gb >= 1 }}
üìà –ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: <b>{{ gb }} Gb.{{ mb }} Mb</b>
        {{ ELSE }}
üìà –ò–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ —Ç—Ä–∞—Ñ–∏–∫–∞: <b>{{ mb }} Mb</b>
        {{ END }}
    {{ END }}
{{ END }}
        "photo": "https://i.ibb.co/6csKNZS7/DALL-E-2025-01-28-20-25-12-A-modern-and-sleek-logo-for-Mrzb-CLI-Service-using-the-Butler-font.png",
        "caption": "{{ TEXT.replace('\n','\n') }}\n <b>{{ EXPIRE }}</b>",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF us.status == 'ACTIVE' }}
                    {{ subscription_url = storage.read('name', 'vpn_mrzb_' _ us.user_service_id).subscription_url }}
                    {{ IF us.category.grep('^vpn-mz-').first && subscription_url.grep('^https:').first }}
                        [
                            {
                                "text": "üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
                                "web_app": {
                                    "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ args.0 }}"
                                }
                            }
                        ],
                        [
                            {
                                "text": "üåê –ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏",
                                "callback_data": "/show_mz_keys {{ us.user_service_id }}"
                            }
                        ],
                    {{ ELSE }}
                        [
                            {
                                "text": "üò¢ –û—à–∏–±–∫–∞: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                                "callback_data": "/menu"
                            }
                        ],
                    {{ END }}
                {{ ELSIF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                    [
                        {
                            "text": "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å",
                            "callback_data": "/profile {{ us.user_service_id }}"
                        }
                    ],
                    [
                        {
                            "text": "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á",
                            "callback_data": "/delete {{ us.user_service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ôªÔ∏è –°–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "/change {{ us.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —É—Å–ª—É–≥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}

<% CASE '/change' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "üìã **–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è —Å–º–µ–Ω—ã:**\n\nüîÑ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∏–∂–µ. –¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö (‚ÇΩ).",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN ref(service.api_price_list( 'category', 'vpn-%' )).nsort('cost') }}
                    [
                        {
                            "text": "üíº {{ item.name }} ‚Äî {{ item.cost }} ‚ÇΩ",
                            "callback_data": "/change_id {{ args.0 _ ' ' _ item.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/change_id' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ change = us.id( args.0 ).change( service_id = args.1 ) }}
{{ TEXT = BLOCK }}
üéâ <b>–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b> üöÄ

üìù <b>–í–∞—à –Ω–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:</b>  
{{ FOR item IN ref(service.list_for_api('service_id', args.1 )) }}
üîπ <b>{{ item.name }}</b>
{{ END }}

‚úÖ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!</b>

{{ IF user.pays.forecast('blocked',1).total > 0 }}
üí≥ <b>–î–æ–ø–ª–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞!</b>  
–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–ª–∞—Ç–∏—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –ø–æ –Ω–æ–≤–æ–º—É —Ç–∞—Ä–∏—Ñ—É.  
üí° –û—Å—Ç–∞—Ç–æ–∫ —Å—É–º–º—ã –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –±—É–¥–µ—Ç —É—á—Ç—ë–Ω.  
üíµ <b>–°—É–º–º–∞ –∫ –¥–æ–ø–ª–∞—Ç–µ:</b> <code>{{ user.pays.forecast('blocked', 1).total }}‚ÇΩ</code>

{{ us.finish('money_back', 1) }}
{{ END }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}



<% CASE '/renewal' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ us = us.id(args.0) }}
{{ IF us.next == '-1' }}
    {{ tkas = us.set('next',) }}
    {{ renewal_status = "‚úÖ –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–æ!" }}
    {{ renewal_hint = "–¢–µ–ø–µ—Ä—å —É—Å–ª—É–≥–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ." }}
{{ ELSE }}
    {{ tkas = us.set('next', -1) }}
    {{ renewal_status = "‚ùå –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ!" }}
    {{ renewal_hint = "–£—Å–ª—É–≥–∞ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å—Å—è. –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë –≤—Ä—É—á–Ω—É—é." }}
{{ END }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "üîÑ <b>–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>\n\n{{ renewal_status }}\n\n‚ÑπÔ∏è {{ renewal_hint }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Å–ª—É–≥–µ",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}

<% CASE '/pricelist' %>
{{ IF checkNotPaidServices == 1 }}
    {{ notPaid = user.services.list_for_api('filter', { 'status' => 'NOT PAID' }, 'limit', 1) }}
    {{ IF ref(notPaid).size == 1 }}
        {
            "sendAlert": {
                "errtext": "‚≠ïÔ∏è –£ –≤–∞—Å –∏–º–µ–µ—Ç—Å—è –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∫–ª—é—á\nüîë #{{ notPaid.user_service_id }} - {{ notPaid.name }}\n–û–ø–ª–∞—Ç–∏—Ç–µ, –ª–∏–±–æ —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–æ–≤–æ–≥–æ.",
                "redirect": "/list {{ notPaid.user_service_id }}"
            }
        },
        {{ STOP }}
    {{ END }}
{{ END }}

{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ TEXT = BLOCK }}
<i>–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ä–æ–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω:</i>
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN ref(service.api_price_list).nsort('cost') }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} —Ä—É–±/–º–µ—Å.",
                        "callback_data": "/serviceorder {{ item.service_id }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/pricelist_android_tv' %>
{{ hasnotpaidus = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'NOT PAID' } )).size }}
{{ hasblocked = ref(user.services.list_for_api('category', '%', 'filter', { 'status' => 'BLOCK' } )).size }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ TEXT = BLOCK }}
<i>–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ä–æ–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω:</i>
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN ref( user.services.list_for_api( 'category', 'vpn-mz-tv' ) ) }}
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost }} —Ä—É–±/–º–µ—Å.",
                        {{ IF hasnotpaidus > 0 || hasblocked > 0 }}
                            "callback_data": "/hint"
                        {{ ELSE }}
                            "callback_data": "/serviceorder {{ item.service_id }}"
                        {{ END }}
                    }
                ],
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost * 6 }} —Ä—É–±/6 –º–µ—Å.",
                        {{ IF hasnotpaidus > 0 || hasblocked > 0 }}
                            "callback_data": "/hint"
                        {{ ELSE }}
                            "callback_data": "/serviceorder {{ item.service_id }} duration:6"
                        {{ END }}
                    }
                ],
                [
                    {
                        "text": "{{ item.name }} - {{ item.cost * 12 }} —Ä—É–±/12 –º–µ—Å.",
                        {{ IF hasnotpaidus > 0 || hasblocked > 0 }}
                            "callback_data": "/hint"
                        {{ ELSE }}
                            "callback_data": "/serviceorder {{ item.service_id }} duration:12"
                        {{ END }}
                    }
                ],
                {{ END }}
                [
					{
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/list_android_tv"
                    }
                ]
            ]
        }
    }
}

<% CASE '/serviceorder' %>
{
    "shmServiceOrder": {
        "service_id": "{{ args.0 }}",
        "check_exists_unpaid": 1,
        "callback_data": "/pocessing",
        "cb_not_enough_money": "/profile",
        "error": "–û–®–ò–ë–ö–ê"
    }
}

<% CASE ['/pocessing'] %>
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "text": "–°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥—É...",
        "parse_mode": "HTML"
    }
}

<% CASE '/notifications_active' %>
{{ item = us.id( args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ TEXT = BLOCK }}
üéâ <b>üéä –£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b> üöÄ  

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b>  ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚úÖ –°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞

<b>üìÖ –î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b> {{ USE date }}{{ date.format( item.created, '%d.%m.%Y–≥. %H:%M') }}
<b>‚è≥ –î–æ:</b> {{ USE date }}{{ date.format( item.expire, '%d.%m.%Y–≥. %H:%M') }}

<b>üëâ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.</b>
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üöÄ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
                        "web_app": {
                            "url": "{{ config.api.url }}/shm/v1/template/subscriptions_link?format=html&session_id={{ user.gen_session.id }}&uid={{ user.id }}&us_id={{ args.0 }}"
                        }
                    }
                ],
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/start"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_block' %>
{{ item = us.id(args.0) }}
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{{ subscription_url = storage.read('name','vpn_mrzb_' _ args.0 ).subscription_url }}
{{ IF event_name == "BLOCK" }}
{{ TEXT = BLOCK }}
<b>üö´ –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>‚ö†Ô∏è –°—Ç–∞—Ç—É—Å:</b> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞

<b>üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> <i>{{ user.pays.forecast('blocked', 1).total }}‚ÇΩ</i>

<b>‚ùó –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</b> <i>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.</i> üí≥

<b>üëâ –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á–µ—Ç –∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.</b>
{{ END }}
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å",
                        "callback_data": "/profile {{ user.pays.forecast('blocked', 1).total }}"
                    }
                ],
                {{ END }}
                {{ IF us.status != 'PROGRESS' }}
                [
                    {
                        "text": "üóë –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "/delete {{ args.0 }}"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_renewal' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>‚è≥ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>üìÖ –î–∞—Ç–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b> <i>{{ item.renewal_date }}</i>

<b>üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> <i>{{ user.pays.forecast('active', 1).total }}‚ÇΩ</i>

<b>‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–æ –¥–∞—Ç—ã –ø—Ä–æ–¥–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—Å–ª—É–≥–∏.</b> üí≥

<b>üëâ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</b> <a href="{{ subscription_url }}">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</a>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    },
                    [
                        {
                            "text": "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                            "url": "/balance {{ args.1 }}"
                        }
                    ]
                ]
            ]
        }
    }
}

<% CASE '/notifications_payment' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>üí∏ –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>üìÖ –î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã:</b> <i>{{ payment_date }}</i>

<b>üí∞ –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã:</b> <i>{{ payment_amount }}‚ÇΩ</i>

<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏!</b> üôå
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_registered' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

<b>üîπ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.</b>
<b>üîπ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> ‚Ññ <code>{{ item.user_id }}</code>

<b>–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!</b> üöÄ
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_remove' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>‚ùå –£—Å–ª—É–≥–∞ —É–¥–∞–ª–µ–Ω–∞</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>

<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏!</b>
{{ END }}


{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_prolongate' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>üîÑ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —É—Å–ª—É–≥–∏ –ø—Ä–æ–¥–ª–µ–Ω!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>üìÖ –ù–æ–≤—ã–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</b> <i>{{ item.new_date }}</i>

<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏!</b> üôè
{{ END }}


{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_changed' %>
{{ item = us.id(args.0) }}
{{ IF event_name == "CHANGED" }}
{{ TEXT = BLOCK }}
<b>‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>üìÖ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è:</b> <i>{{ change_date }}</i>

<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!</b>
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/notifications_bonus' %>
{{ item = us.id(args.0) }}
{{ TEXT = BLOCK }}
<b>üéÅ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å!</b>

<b>üîπ –ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> <code>{{ item.name }}</code>
<b>üîπ ID —É—Å–ª—É–≥–∏:</b> ‚Ññ <code>{{ item.user_service_id }}</code>
<b>üí∞ –†–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞:</b> <i>{{ bonus_amount }}‚ÇΩ</i>

<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!</b> üíñ
{{ END }}

{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}



<% CASE '/delete' %>
{{
  us = user.service.list_for_api('usi', args.0);
}}
{{ IF us.status != 'ACTIVE' }}
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "ü§î <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ #{{ args.0 }}. –ö–ª—é—á –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</b>",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üß® –î–ê, –£–î–ê–õ–ò–¢–¨! üî•",
                        "callback_data": "user:keys:delete:confirm {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
{{ ELSE }}
{
    "sendMessage": {
        "text": "‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á #{{ args.0 }}, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/list"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'user:keys:delete:confirm' %>
{
    "deleteMessage": { 
        "message_id": "{{ message.message_id }}" 
    }
},
{
    "shmServiceDelete": {
        "usi": "{{ args.0 }}",
        "callback_data": "/menu",
        "error": "–û–®–ò–ë–ö–ê"
    }
},
{
    "answerCallbackQuery": {
        "callback_query_id": "{{ callback_query.id }}",
        "parse_mode": "HTML",
        "text": "‚úÖ –ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!",
        "show_alert": true
    }
}



<% CASE '/referrals' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ TEXT = BLOCK }}
ü§ù <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É!</b>\n\n
–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ <b>{{ config.billing.partner.income_percent }}% –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∏—Ö –ø–ª–∞—Ç–µ–∂–∞</b>.\n\n
üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n
<code>{{ config.tg_bot.url }}?start={{ toBase64Url(toQueryString('partner_id' = user.id)) }}</code>\n\n
–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏!
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
                        "switch_inline_query": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ {{ config.company.name }} –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å –Ω–∞–º–∏! üõ° {{ config.tg_bot.url }}?start={{ user.id }}"
                    }
                ],
                [
                    {
                        "text": "üì§ –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã—Ö",
                        "callback_data": "/ref_list"
                    },
                    {
                        "text": "‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?",
                        "callback_data": "/referral_help"
                    }
                ],
                [
                    {
                        "text": "üîô –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/ref_list' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},

{{
    limit = 5;
    offset = (args.0 || 0);
    referralsArray = ref(user.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter',{"partner_id" = user.id}));
}}
{{ TEXT = BLOCK }}
üìÉ <b>–°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>

–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {{ user.referrals_count }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
         "reply_markup": {
            "inline_keyboard": [
			{{ FOR item in referralsArray }}
				[
                    {
                        "text": "üë§ {{ item.full_name }} üåü",
                        "callback_data": "/ref_info {{ item.id }}"
                    }
                ],
    {{ END }}
                [
                    {{ IF offset > 0 }}
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "/ref_list {{ offset - limit }}"
                    },
                    {{ END }}
                    {{ IF referralsArray.size == limit }}
                    {
                        "text": "–ï—â—ë ‚û°Ô∏è",
                        "callback_data": "/ref_list {{ offset + limit }}"
                    }
                    {{ END }}
                ],
				[
                    {
                        "text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                        "callback_data": "/ref_list"
                    }
                ],
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/ref_info' %>

{{
    ref_user = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

<b>–ò–º—è:</b> {{ ref_user.full_name }}
<b>ID:</b> {{ ref_user.id }}
<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {{ ref_user.created_at }}
<b>–°—Ç–∞—Ç—É—Å:</b> {{ ref_user.status }}

{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                        "callback_data": "/ref_list"
                    }
                ],
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/referral_help' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "üîç <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞?</b>\n\n–í –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π! –ö–∞–∂–¥—ã–π –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω –º–æ–∂–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏.\n\nüí∏ <b>–ß—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:</b>\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>{{ config.billing.partner.income_percent }}%</b> –æ—Ç –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–¥–µ–ª–∞–µ—Ç –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥!\n\nüîó <b>–ö–∞–∫ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞:</b>\n1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.\n2. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏, –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–ª–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö.\n3. –ö–æ–≥–¥–∞ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª —Å–¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç—ë–∂, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é –¥–æ–ª—é!\n\nüí° <b>–°–æ–≤–µ—Ç—ã –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞:</b>\n1. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ —Å—Å—ã–ª–∫—É –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö.\n2. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∏ –±–æ–Ω—É—Å–∞—Ö –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\nüîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n<code>{{ config.tg_bot.url }}?start={{ user.id }}</code>",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üéØ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
                        "switch_inline_query": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ {{ config.company.name }} –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã! üõ° {{ config.tg_bot.url }}?start={{ user.id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/help' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendPhoto": {
        "photo": "https://media.tenor.com/5KHjsG1Aw1YAAAAi/photos-google-photos.gif",
        "protect_content": "true",
        "parse_mode":"HTML",
        "caption": "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:",
        "reply_markup" : {
            "inline_keyboard": [
                [
                    {
                        "text": "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                        "url": "https://t.me/shm_billing"
                    }
                ],
                [
                    {
                        "text": "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android",
                        "callback_data": "/instructions_android"
                    }
                ],
                [
                    {
                        "text": "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone",
                        "callback_data": "/instructions_iphone"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE ['/instructions_android'] %>
{
    "sendMessage": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (Android)</b>\n\n<b>–®–∞–≥ 1:</b>\n\n1Ô∏è‚É£ **–°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify** –∏–∑ [Google Play Store üì≤](https://play.google.com/store/apps/details?id=com.hiddify).\n\n<pre><i>–§–æ—Ç–æ: –ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ ¬´–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å¬ª –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_2"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_android_step_2'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (Android)</b>\n\n<b>–®–∞–≥ 2:</b>\n\n2Ô∏è‚É£ **–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify** –∏ –≤—ã–±–µ—Ä–∏ —Ä–µ–≥–∏–æ–Ω ¬´–†–æ—Å—Å–∏—è¬ª üá∑üá∫.\n\n<pre><i>–§–æ—Ç–æ: –ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_1"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_3"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_1"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_3"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_android_step_3'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (Android)</b>\n\n<b>–®–∞–≥ 3:</b>\n\n3Ô∏è‚É£ **–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–°—Ç–∞—Ä—Ç¬ª üöÄ**, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN.\n\n<pre><i>–§–æ—Ç–æ: –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_2"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_4"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_2"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_4"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_android_step_4'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (Android)</b>\n\n<b>–®–∞–≥ 4:</b>\n\n4Ô∏è‚É£ **–î–æ–±–∞–≤—å –ø–æ–¥–ø–∏—Å–∫—É**: –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É¬ª üîë.\n\n<pre><i>–§–æ—Ç–æ: –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_3"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_5"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_3"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_android_step_5"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_android_step_5'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (Android)</b>\n\n<b>–®–∞–≥ 5:</b>\n\n5Ô∏è‚É£ **–ü–æ–¥–∫–ª—é—á–∏—Å—å –∫ VPN**: –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –±–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN üîå.\n\n<pre><i>–§–æ—Ç–æ: –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_4"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_android_step_4"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE ['/instructions_iphone'] %>
{
    "sendMessage": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (iPhone)</b>\n\n<b>–®–∞–≥ 1:</b>\n\n1Ô∏è‚É£ **–°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify** –∏–∑ [App Store üì±](https://apps.apple.com/ge/app/foxray/id6448898396).\n\n<pre><i>–§–æ—Ç–æ: –ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ ¬´–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å¬ª –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_2"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_iphone_step_2'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (iPhone)</b>\n\n<b>–®–∞–≥ 2:</b>\n\n2Ô∏è‚É£ **–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Hiddify** –∏ –≤—ã–±–µ—Ä–∏ —Ä–µ–≥–∏–æ–Ω ¬´–†–æ—Å—Å–∏—è¬ª üá∑üá∫.\n\n<pre><i>–§–æ—Ç–æ: –ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_1"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_3"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ù–∞ —ç–∫—Ä–∞–Ω–µ –±—É–¥–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_1"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_3"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_iphone_step_3'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (iPhone)</b>\n\n<b>–®–∞–≥ 3:</b>\n\n3Ô∏è‚É£ **–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–°—Ç–∞—Ä—Ç¬ª üöÄ**, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN.\n\n<pre><i>–§–æ—Ç–æ: –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_2"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_4"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_2"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_4"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_iphone_step_4'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (iPhone)</b>\n\n<b>–®–∞–≥ 4:</b>\n\n4Ô∏è‚É£ **–î–æ–±–∞–≤—å –ø–æ–¥–ø–∏—Å–∫—É**: –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É¬ª üîë.\n\n<pre><i>–§–æ—Ç–æ: –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_3"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_5"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_3"
                    },
                    {
                        "text": "–î–∞–ª–µ–µ ‚û°Ô∏è",
                        "callback_data": "instructions_iphone_step_5"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
<% CASE ['instructions_iphone_step_5'] %>
{
    "editMessageText": {
        "text": "üñ• <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é Hiddify (iPhone)</b>\n\n<b>–®–∞–≥ 5:</b>\n\n5Ô∏è‚É£ **–ü–æ–¥–∫–ª—é—á–∏—Å—å –∫ VPN**: –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –±–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN üîå.\n\n<pre><i>–§–æ—Ç–æ: –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.</i></pre>\n\n",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_4"
                    }
                ]
            ]
        }
    }
},
{
    "sendPhoto": {
        "photo": "https://hkadm.github.io/hkdocs/marketplace/security/images/hiddifynext_android_2_hiddify.png",
        "caption": "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN.",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "instructions_iphone_step_4"
                    }
                ],
				[
                    {
                        "text": "‚á¶ –ú–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE '/show_mz_keys' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ location = storage.read('name', 'vpn_mrzb_' _ args.0).location }}
{{ item = us.id(args.0) }}
{{ subscription_url = storage.read('name', 'vpn_mrzb_' _ args.0 _ location).subscription_url }}
{
    "sendPhoto": {
        "photo": "https://sun9-73.userapi.com/impg/e8pkzF2oh-Ac40ZO_dpgJLHT__K9BlIX3I5aaA/O0QGe8WxUg0.jpg?size=1024x1024&quality=95&sign=7bda3be0397d08e13d7edb0db5e1f8a5&type=album",
        "protect_content": false,
        "parse_mode": "HTML",
        "caption": "üåê <b>–í–∞—à–∏ VPN –∫–ª—é—á–∏ –∏ –ø–æ–¥–ø–∏—Å–∫–∞:</b>\n\nüîó <b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:</b>\n<code>{{ subscription_url }}</code>\n\nüí° <i>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç URL –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.</i>\n\nüîê <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—é—á –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è:</b>",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîë –ü–æ–∫–∞–∑–∞—Ç—å 'TCP' ",
                        "callback_data": "/trojan_key {{ args.0 }}"
                    },
                    {
                        "text": "üîë –ü–æ–∫–∞–∑–∞—Ç—å 'UDP' ",
                        "callback_data": "/vless_key {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Å–ª—É–≥–∞–º",
                        "callback_data": "/service {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}

<% CASE '/vless_key' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ vless_tcp = storage.read('name', 'vpn_mrzb_' _ args.0).links.grep('^vless:').first }}
{
    "printQrCode": {
        "data": "{{ vless_tcp }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "‚úÖ <b>–í–∞—à VLESS TCP –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!</b>\n\nüì• <i>QR-–∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.</i>"
        }
    }
},
{
    "sendMessage": {
        "text": "üîë <b>–í–∞—à VLESS TCP –∫–ª—é—á</b>\n\nüåê <b>–ü—Ä–æ—Ç–æ–∫–æ–ª:</b> VLESS TCP\n\nüóùÔ∏è <b>–ö–ª—é—á:</b> <code>{{ vless_tcp }}</code>\n\nüì≤ <i>–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.</i>\n\nüí° <b>–°–æ–≤–µ—Ç:</b> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "/selectservice {{ args.0 }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–ª—é—á–∞–º",
                        "callback_data": "/show_mz_keys {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}

<% CASE '/trojan_key' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{{ trojan = storage.read('name', 'vpn_mrzb_' _ args.0).links.grep('^trojan:').first }}
{
    "printQrCode": {
        "data": "{{ trojan }}",
        "parameters": {
            "parse_mode": "HTML",
            "caption": "‚úÖ <b>–í–∞—à Trojan TCP –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!</b>\n\nüîí <i>QR-–∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.</i>\n\nüí° <b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–ª—é—á –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ.</b>",
            "size": 600
        }
    }
},
{
    "sendMessage": {
        "text": "üîë <b>–í–∞—à Trojan TCP –∫–ª—é—á</b>\n\n<b>–ü—Ä–æ—Ç–æ–∫–æ–ª:</b> Trojan TCP\n\nüóùÔ∏è <b>–ö–ª—é—á:</b> <code>{{ trojan }}</code>\n\nüì≤ <i>–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.</i>\n\nüí° <b>–°–æ–≤–µ—Ç:</b> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—é.\n\nüîí <b>–ß—Ç–æ —Ç–∞–∫–æ–µ Trojan?</b>\nTrojan ‚Äî —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –∑–∞—â–∏—Ç—ã –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –û—Å–æ–±–µ–Ω–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –≤ —Å—Ç—Ä–∞–Ω–∞—Ö —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å–∞–º.",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–ª—é—á–∞–º",
                        "callback_data": "/show_mz_keys {{ args.0 }}"
                    }
                ]
            ]
        }
    }
}

<% CASE '/list_android_tv' %>
{
    "deleteMessage": { "message_id": {{ message.message_id }} }
},
{
    "sendMessage": {
        "text": "üîë  –í—ã–±—Ä–∞—Ç—å –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ö–ª—é—á",
        "reply_markup" : {
            "inline_keyboard": [
                {{ FOR item IN ref( user.services.list_for_api( 'category', 'vpn-mz-tv' ) ) }}
                {{ SWITCH item.status }}
                  {{ CASE 'ACTIVE' }}
                  {{ icon = '‚úÖ' }}
                  {{ status = '–†–∞–±–æ—Ç–∞–µ—Ç' }}
                  {{ CASE 'BLOCK' }}
                  {{ icon = '‚ùå' }}
                  {{ status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞' }}
                  {{ CASE 'NOT PAID' }}
                  {{ icon = 'üí∞' }}
                  {{ status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' }}
                  {{ CASE }}
                  {{ icon = '‚è≥' }}
                  {{ status = '–û–±—Ä–∞–±–æ—Ç–∫–∞' }}
                {{ END }}
                [
                    {
                        "text": "{{ icon }} {{ status }} - {{ item.name }}. {{ user.full_name }} - ({{ item.user_service_id }})",
                        {{ IF item.category != 'vpn-mz-tv' }}
                        "callback_data": "/service {{ item.user_service_id }}"
                        {{ ELSIF item.category == 'vpn-mz-tv' }}
                        "callback_data": "/setup_android {{ item.user_service_id }}"
                        {{ END }}
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üõí –ó–∞–∫–∞–∑–∞—Ç—å –ö–ª—é—á",
                        "callback_data": "/pricelist_android_tv"
                    }
                ],
                [
                    {
                        "text": "‚á¶ –ù–∞–∑–∞–¥",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE [ '/setup_android', '/setup_android_list' ] %>
{{ us = user.services.list_for_api( 'usi', args.0 ) }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
{{ TEXT = BLOCK }}
üîí –ü–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º Android TV –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π üìñ

üé¨ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Android TV –∑–∞ 5 —à–∞–≥–æ–≤:

1Ô∏è‚É£ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π üìñ
–ü–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞.

2Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É üîë
–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –Ω–∞ –≤–∞—à–µ–º Android TV –∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.
üìç –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
<b>{{ config.shmcustomlab.tv_domain }}/{{ us.settings.pin }}</b>

3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ üõ†Ô∏è
–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à Android TV –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ —Å–µ—Ç–∏ Wi-Fi –∏ —á—Ç–æ —Å–∏–≥–Ω–∞–ª —Å—Ç–∞–±–∏–ª–µ–Ω –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã.

4Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ üîÑ
–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Android TV, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É.

5Ô∏è‚É£ –ì–æ—Ç–æ–≤–æ! üéâ
–¢–µ–ø–µ—Ä—å –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤–∞—à–µ–≥–æ Android TV. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üåü
{{ END }}          
        "text": "{{ TEXT.replace('\n','\n') }}",
        "parse_mode":"HTML",
        "reply_markup" : {
            "inline_keyboard": [
                {{ IF us.status == 'ACTIVE' }}
                [
                    {
                        "text": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é",
                        "url": "https://telegra.ph/Podklyuchenie-Android-TV-za-5-shagov-01-22"
                    }
                ],
                {{ END }}
                {{ IF us.status == 'NOT PAID' || us.status == 'BLOCK' }}
                [
                    {
                        "text": "üí∞ –û–ø–ª–∞—Ç–∏—Ç—å {{ user.pays.forecast('blocked',1).total }} ‚ÇΩ",
                        "web_app": {
                        "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
                        }
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
                        "url": "https://t.me/{{ config.shmcustomlab.support }}"
                    }
                ],                
                [
                    {
                        "text": "–ù–∞–∑–∞–¥",
                        "callback_data": "/list_android_tv"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:menu' %>
{{ TEXT = BLOCK }}
„Ä† <b>–ú–µ–Ω—é {{ role = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); role; }}</b>

‚≠ïÔ∏è –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π!
{{ END }}
{
    "sendMessage": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
                        "callback_data": "admin:users:list"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ],
                {{ IF user.settings.role == 'admin' || (user.settings.role == 'moderator' && user.settings.moderate.settings == 1 )}}
                [
                    {
                        "text": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞",
                        "callback_data": "admin:settings"
                    }
                ],
                {{ END }}
                [
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="settings");
}}

{{ TEXT = BLOCK }}
<b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞</b>

–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ: {{ notPaidStatus = (checkNotPaidServices == 0 ? '‚≠ïÔ∏è –í—ã–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –í–∫–ª—é—á–µ–Ω–æ'); notPaidStatus; }}

–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π: {{ messageTypeStatus = (defaultMessageType == 'editMessageText' ? '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : 'üÜï –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'); messageTypeStatus; }}
{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                        "callback_data": "admin:settings:change notpaid"
                    }
                ],
                [
                    {
                        "text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π",
                        "callback_data": "admin:settings:change msg"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:settings:change' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;

    IF args.0 == 'notpaid'; 
        IF checkNotPaidServices == 0;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 1, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        ELSIF checkNotPaidServices == 1;
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => 0, 'messageType' => defaultMessageType, 'menuCmd' => mainMenuCmd );
        END;
        sendAlert(errtext="‚úÖ –ó–∞–ø—Ä–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    
    ELSIF args.0 == 'msg';
        IF defaultMessageType == 'sendMessage';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'editMessageText', 'menuCmd' => 'menu' );
        ELSIF defaultMessageType == 'editMessageText';
            ret = user.id(1).storage.save('bot_configuration', 'checkNotPaidServices' => checkNotPaidServices, 'messageType' => 'sendMessage', 'menuCmd' => 'start' );
        END;
        sendAlert(errtext="‚úÖ –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω!", redirect="admin:settings");
    END;
}}


<% CASE 'admin:users:list' %>
{{
    limit = 7;
    offset = (args.0 || 0);
    users = ref(user.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter',{"gid" = 0}));
    getCountUsers = ref(user.list_for_api('admin', 1, 'limit', 10000, filter, {"gid" = 0})).size;
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {{ getCountUsers - 1 }}
{{ END }}
{
    "sendMessage": {
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item IN users }}
                    {{ status = (item.block == 0 ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status _' '_ item.full_name.replace('"', '\"')  }} ({{ item.user_id _'-'_ item.login }})",
                            "callback_data": "admin:users:id {{ item.user_id _' '_ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF users.size == limit || offset > 0 }}
                    [
                        {{ IF offset > 0 }}
                            {
                                "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                "callback_data": "admin:users:list {{ offset - limit }}"
                            },
                        {{ END }}
                        {{ IF users.size == limit }}
                            {
                                "text": "–ï—â—ë ‚û°Ô∏è",
                                "callback_data": "admin:users:list {{ limit + offset }}"
                            }
                        {{ END }}
                    ],
                {{ END }}
				 [{ "text": "üîé –ù–∞–π—Ç–∏ –ø–æ ID", "callback_data": "admin:users:search" }],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:users:id' %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin'; }}
{{ user = user.switch(args.0) }}
{{
    userData = user.id(args.0);
    userPartner = user.id(userData.partner_id);
    userServices = ref(userData.services.list_for_api('category', '%'));
    offset = args.1;
}}

{{ TEXT = BLOCK }}
üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>

–°—Ç–∞—Ç—É—Å: {{ userStatus = (userData.block == 0 ? "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" : "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"); userStatus; }}

–ò–º—è: {{ userData.full_name.replace('"', '\"') }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {{ userData.created }}
–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞: {{ userData.last_login }}
–ö—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {{ userPartner ? userPartner.full_name + " - " + userPartner.login : "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" }}

–ë–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.  
–ë–æ–Ω—É—Å—ã: {{ userData.get_bonus }} —Ä—É–±.  
–°–∫–∏–¥–∫–∞: {{ userData.discount }}

–ö–æ–ª-–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫: {{ userServices.size }}

{{ END }}

{
    "sendMessage": {
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏",
                        "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ offset }}"
                    }
                ],
                [
                    {
                        "text": "üí∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
				[
                    {
                        "text": "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üí¨",
                        "callback_data": "admin:user:msg {{ user.settings.telegram.chat_id }}"
                    }
                ],
                [
                    {
                        "text": "{{ status = (userData.block == 0 ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                        "callback_data": "admin:users:block {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:user:msg' %>
{
    "sendMessage": {
        "text": "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #{{ args.0 }}#",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:users:block' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="blockUser");

    # Variables
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    retcode = (userData.block == 1 ? "0" : "1");
    ret = userData.set(block = retcode);
    status = (userData.block == 1 ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");

    sendAlert(errtext="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $name ($userData.user_id) $status", redirect="admin:users:id $userData.user_id");
}}

<% CASE 'admin:users:id:subs' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}
{{ TEXT = BLOCK }}
üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏

–ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
ID: {{ userData.user_id }}
Telegram: {{ userData.settings.telegram.login }}
–õ–æ–≥–∏–Ω: {{ userData.login }}

{{ IF userServices.size <= 0}}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                    {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                    [
                        {
                            "text": "{{ status; item.user_service_id _' - '_ item.name  }}",
                            "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                        }
                    ],
                {{ END }}

                {{ IF userServices.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:list {{ limit + offset }}"
                        }
                    ],
                {{ END }}

                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:list {{ offset - limit }}"
                        }
                    ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}

<% CASE ['admin:users:id:subs'] %>
{{ IF user.settings.role == 'moderator' || user.settings.role == 'admin' }}
{{
    limit = 7;
    last_offset = (args.1 || 0);
    offset = (args.2 || 0);
    userData = user.id(args.0);
    userServices = ref(userData.services.list_for_api('limit', limit, 'offset', offset));
}}

{{ TEXT = BLOCK }}
üîê <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏</b>

üë§ –ò–º—è: {{ userData.full_name.replace('"', '\"')  }}
üÜî ID: {{ userData.user_id }}  
üì± Telegram: {{ userData.settings.telegram.login }}
üîë –õ–æ–≥–∏–Ω: {{ userData.login }}  

{{ IF userServices.size <= 0 }}
<b>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫!</b>
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userServices }}
                {{ status = (item.status == 'ACTIVE' ? "üü¢" : "üî¥") }}
                [
                    {
                        "text": "{{ status }} {{ item.user_service_id }} - {{ item.name }}",
                        "callback_data": "admin:subs:id {{ item.user_service_id _ ' ' _ item.user_id }}"
                    }
                ],
                {{ END }}

                {{ IF userServices.size == limit }}
                [
                    {
                        "text": "‚û°Ô∏è –ï—â—ë",
                        "callback_data": "admin:users:list {{ limit + offset }}"
                    }
                ],
                {{ END }}

                {{ IF offset > 0 }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:list {{ offset - limit }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
                        "callback_data": "admin:subs:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
                        "callback_data": "admin:subs:add:free {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    }
                ]
            ]
        }
    }
}
{{ END }}

<% CASE 'admin:subs:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in servicesArray }}
                [
                    {
                        "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                        "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id }}"
                    }
                ],
                {{ END }}

                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                         "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                       "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:add:free' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addFreeSubs");
}}
{{
    # Variables
    userData = user.id(args.0);
    servicesArray = ref(service.list_for_api).nsort('service_id');
}}
{{ TEXT = BLOCK }}
‚ûï –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É —Å 0 —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    {{ FOR item in servicesArray }}
        [
            {
                "text": "{{ item.name _' '_ item.descr }} - {{ item.cost }} ‚ÇΩ",
                "callback_data": "admin:subs:add:confirm {{ userData.user_id _' '_ item.service_id _' free' }}"
            }
        ],
    {{ END }}
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:subs {{ userData.user_id _' '_ args.1 }}"
        }
    ],
    [
        {
            "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id _' '_ last_offset }}"
        }
    ]
            ]
        }
    }
}


<% CASE 'admin:subs:add:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    userData = user.id(args.0);
    createService = service.id(args.1);
    user = user.switch(userData.user_id);
    name = userData.full_name.replace('"', '\"');

    IF args.2 == 'free';
        ret = userData.us.create('service_id' = createService.service_id, 'cost' = 0, 'check_allow_to_order' = 0);
    ELSE;
        ret = userData.us.create('service_id' = createService.service_id, 'check_allow_to_order' = 0);
    END;

    sendAlert(errtext="‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ $createService.name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $name ($userData.user_id)", redirect="admin:users:id:subs $userData.user_id");
}}

<% CASE '/admusermsg' %>
{
"sendMessage": {
        "text": "#{{ args.0 }}#\n–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "reply_markup": {
            "force_reply": true
        }
    }
}

<% CASE 'admin:subs:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listSubs");
}}
{{
    # Arguments:
        # 0 - ID of user service id 
        # 1 - ID of user
    # Variables:
    USE date;
    userData = user.id(args.1);
    userService = userData.us.id(args.0);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
    userSubUrl = (userData.storage.read('name', 'vpn_mrzb_'_ userService.user_service_id).subscription_url || "https://notfound.com");
    subData = http.get(userSubUrl _'/info');
}}
{{ TEXT = BLOCK }}
üîê –ü–æ–¥–ø–∏—Å–∫–∞ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

ID: {{ userService.user_service_id }}
ID —Å–ø–∏—Å–∞–Ω–∏—è: {{ userService.withdraw_id }}
–°—Ç–∞—Ç—É—Å: {{ userService.status }}
–°–æ–∑–¥–∞–Ω–∞: {{ userService.created }}
–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è: {{ userService.expire }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }}

–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–Ω–ª–∞–π–Ω: {{ subData.online_at ? date.format(subData.online_at, '%d.%m.%Y %R') : '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏' }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "üîó –ü–æ–¥–ø–∏—Å–∫–∞ {{ userService.user_service_id }} - {{ userServiceData.name }}",
                        "web_app": {
                            "url": "{{ userSubUrl }}"
                        }
                    }
                ],
                {{ IF userService.status == 'ACTIVE' || userService.status == 'BLOCK' }}
                    [
                        {
                            "text": "{{ status = (userService.status == 'ACTIVE' ? "üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"); status; }}",
                            "callback_data": "admin:subs:change:status {{ userService.user_service_id }}"
                        }
                    ],
                {{ ELSIF userService.status == 'PROGRESS' }}
                    [
                        {
                            "text": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ (–æ–±–Ω–æ–≤–∏—Ç–µ)",
                            "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                {{ IF userService.status == 'BLOCK' || userService.status == 'NOT PAID' }}
                    [
                        {
                            "text": "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                            "callback_data": "admin:subs:delete {{ userService.user_service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "ü´∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏",
                        "callback_data": "admin:withdraws:id {{ userService.withdraw_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:current {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚éò –°–º–µ–Ω–∏—Ç—å —Å–ª–µ–¥. —Ç–∞—Ä–∏—Ñ",
                        "callback_data": "admin:subs:change:next {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:subs {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:current:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:current:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    username = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);
    
    IF (ret = userData.us.id(data.user_service_id).change('service_id' = nextService));
        sendAlert(
            errtext="‚úÖ –¢–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ $serviceData.name #$data.user_service_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username (#$userData.user_id) –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $userServiceNext.name",
            redirect="admin:subs:id $data.user_service_id $userData.user_id"
        );
    END;
}}


<% CASE 'admin:subs:change:next' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    userService = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(userService.user_id);
    userServiceData = service.id(userService.service_id);
    userServiceNext = service.id(userService.next);
}}
{{ TEXT = BLOCK }}
‚éò –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ {{ userServiceData.name }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

{{ IF userService.next != userService.service_id || userService.next != 0 }}
–°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ: {{ userServiceNext.name }} ({{ userService.next }})
{{ END }}
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR list IN ref(service.api_price_list).nsort('service_id') }}
                    [
                        {
                            "text": "{{ list.name _' '_ list.descr }} - {{ list.cost }} ‚ÇΩ",
                            "callback_data": "admin:subs:change:next:confirm {{ userService.user_service_id _ ' ' _ list.service_id }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:subs:id {{ userService.user_service_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:subs:change:next:confirm' %>
{{ PROCESS checkAdminRights }}
{{
    nextService = args.1;
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    username = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);
    userServiceNext = service.id(nextService);

    
    IF (ret = userData.us.id(data.user_service_id).set("next", nextService));
        sendAlert(
            errtext="‚úÖ –°–ª–µ–¥—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ $serviceData.name #$data.user_service_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username ($userData.user_id) –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ $userServiceNext.name",
            redirect="admin:subs:id $data.user_service_id $userData.user_id"
        );
    END;
}}


<% CASE 'admin:subs:change:status' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="changeSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    name = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);

    IF data.status == 'ACTIVE';
        ret = userData.us.id(data.user_service_id).block;
    ELSIF data.status == 'BLOCK';
        ret = userData.us.id(data.user_service_id).activate;
    END;
    
    status = (data.status == 'ACTIVE' ? "üî¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" : "üü¢ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
    sendAlert(
        errtext="‚úÖ –£—Å–ª—É–≥–∞ $serviceData.name ($data.user_service_id) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) $status",
        redirect="admin:subs:id $data.user_service_id $userData.user_id"
    );
}}

<% CASE 'admin:subs:delete' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="deleteSubs");
}}
{{
    data = ref(us.list_for_api('admin', 1, 'filter', {"user_service_id" = args.0})).first;
    userData = user.id(data.user_id);
    name = userData.full_name.replace('"', '\"');
    serviceData = service.id(data.service_id);

    IF data.status == 'BLOCK' || data.status == 'NOT PAID';
        IF (ret = userData.us.id(data.user_service_id).delete);
            sendAlert(
                errtext="‚ùå –£—Å–ª—É–≥–∞ $serviceData.name ($data.user_service_id) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) —É–¥–∞–ª–µ–Ω–∞!",
                redirect="admin:users:id:subs $userData.user_id"
            );
        END;
    END;
}}


<% CASE 'admin:users:id:pays' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    limit = 5;
    offset = args.1 || 0;
    userData = user.id(args.0);
    userPays = ref(userData.pays.list_for_api('limit', limit, 'offset', offset ));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }} ({{ userData.user_id }})

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userPays }}
                    [
                        {
                            "text": "(ID: {{ item.id }}), {{ item.money }} —Ä—É–±, {{ item.date }}",
                            "callback_data": "admin:pays:id {{ item.id }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userPays.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:pays {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂",
                        "callback_data": "admin:pays:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíªüë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listPays");
}}
{{
    userPay = ref(pay.list_for_api('admin', 1, 'filter', {"id" = args.0})).first;
    payData = userPay.comment.object;
    payMethod = payData.payment_method;
    payCard = payMethod.card;
    userData = user.id(userPay.user_id);
	partnerData = user.id(data.comment.from_user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ ID {{ userPay.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–î–∞—Ç–∞ –ø–ª–∞—Ç–µ–∂–∞: {{ userPay.date }}
–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {{ userPay.pay_system_id }}
–°—É–º–º–∞: {{ userPay.money }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}

{{ IF userPay.comment.comment }}
<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É</b>
<blockquote>{{ userPay.comment.comment }}</blockquote>
{{ END }}

{{ IF payData }}
<b>–î–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ</b>
<blockquote>
ID –≤ —Å–∏—Å—Ç–µ–º–µ: {{ payData.id }}
–°—Ç–∞—Ç—É—Å: {{ payData.status }}
{{ IF payCard }}
–¢–∏–ø –∫–∞—Ä—Ç—ã: {{ payCard.card_type }}
–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {{ payCard.first6 }}******{{ payCard.last4 }}
–ë–∞–Ω–∫: {{ payCard.issuer_name }}
–°—Ç—Ä–∞–Ω–∞ –±–∞–Ω–∫–∞: {{ payCard.issuer_country }}
–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {{ payCard.expiry_month }}/{{ payCard.expiry_year }}
{{ END }}
{{ IF payMethod.type == 'sbp' }}
–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –°–ë–ü
–ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –°–ë–ü: {{ payMethod.sbp_operation_id }}
–ë–∏–∫ –ë–∞–Ω–∫–∞: {{ payMethod.payer_bank_details.bic }}
{{ END }}

{{ IF payMethod.title.match('YooMoney') }}
–ö–æ—à–µ–ª–µ–∫ YooMoney: {{ payMethod.title }}
ID –∫–æ—à–µ–ª—å–∫–∞: {{ payMethod.account_number }}
{{ END }}
</blockquote>
{{ END }}

{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:users:id:pays {{ userPay.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
            ]
        }
    }
}

<% CASE 'admin:pays:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {{ userData.balance }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 20"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:pays:add:confirm {{ userData.user_id }} 100"
                    }
                ],
                [
                    {{ FOR item IN ref(service.api_price_list('category', '%')).nsort('cost') }}
                        {
                            "text": "{{ item.name }} - {{ item.cost }}‚ÇΩ",
                            "callback_data": "admin:pays:add:confirm {{ userData.user_id _ ' ' }} {{ item.cost }}"
                        },
                    {{ END }}
                ],
                [
                    {
                        "text": "–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É",
                        "callback_data": "admin:pays:add:manual {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:pays {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:pays:add:manual' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);

    ret = user.set_settings({'state' => 'awaiting_amount'});
    ret = user.set_settings({'bot' => {'switchUser' => userData.user_id} });
}}

{{ TEXT = BLOCK }}
üí¨ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"') }}
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}


<% CASE 'admin:pays:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addPays");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF (pay = userData.payment('money', amount, 'pay_system_id', 'manual'));
        sendAlert(
            errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.balance —Ä—É–±.",
            redirect="admin:pays:add $userData.user_id"
        );
    END;
}}

<% CASE 'admin:users:id:bonuses' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    limit = 5;
    offset = (args.1 || 0);
    userData = user.id(args.0);
    userBonuses = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"user_id" = userData.user_id}));
}}
{{ TEXT = BLOCK }}
üë®‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤: {{ userData.get_bonus }} —Ä—É–±.
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                {{ FOR item in userBonuses }}
                    [
                        {
                            "text": "ID: {{ item.id }} ‚Äî {{ item.bonus }} —Ä—É–±.",
                            "callback_data": "admin:bonuses:id {{ item.id _ ' ' _ offset }}"
                        }
                    ],
                {{ END }}
                {{ IF offset > 0 }}
                    [
                        {
                            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ offset - limit }}"
                        }
                    ],
                {{ END }}
                {{ IF userBonuses.size == limit }}
                    [
                        {
                            "text": "–ï—â—ë ‚û°Ô∏è",
                            "callback_data": "admin:users:id:bonuses {{ userData.user_id _' ' }} {{ limit + offset }}"
                        }
                    ],
                {{ END }}
                [
                    {
                        "text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å—ã",
                        "callback_data": "admin:bonuses:add {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
                        "callback_data": "admin:users:id {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:id' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="listBonus");
}}
{{
    offset = args.1;
    data = ref(bonus.list_for_api('admin', 1, 'limit', limit, 'offset', offset, 'filter', {"id" = args.0})).first;
    userData = user.id(data.user_id);
    partnerData = user.id(data.comment.from_user_id)
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤ ID {{ data.id }} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

ID –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.id }}
–î–∞—Ç–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.date }}
–°—É–º–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {{ data.bonus }} —Ä—É–±.

{{ IF data.comment.from_user_id }}
<blockquote>{{ data.comment.percent }}% –æ—Ç {{ userData.full_name.replace('"', '\"')  }} ({{ partnerData.user_id }})</blockquote>
{{ END }}

{{ IF data.comment.msg }}
<blockquote>{{ data.comment.msg }}</blockquote>
{{ END }}
{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id _ ' ' _ offset }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
}}
{{ TEXT = BLOCK }}
üí∏ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–æ–Ω—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ {{ userData.get_bonus }} —Ä—É–±.

{{ END }}
{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        "text": "10 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 10"
                    },
                    {
                        "text": "20 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 20"
                    },
                    {
                        "text": "30 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 30"
                    },
                    {
                        "text": "40 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 40"
                    }
                ],
                [
                    {
                        "text": "50 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 50"
                    },
                    {
                        "text": "100 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 100"
                    },
                    {
                        "text": "150 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 150"
                    },
                    {
                        "text": "200 —Ä—É–±",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} 200"
                    }
                ],
                [
                    {
                        "text": "–£–±—Ä–∞—Ç—å {{ userData.get_bonus }}",
                        "callback_data": "admin:bonuses:add:confirm {{ userData.user_id }} -{{ userData.get_bonus }}"
                    }
                ],
                [
                    {
                        "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                        "callback_data": "admin:users:id:bonuses {{ userData.user_id }}"
                    }
                ],
                [
                    {
                        "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
                        "callback_data": "admin:menu"
                    },
                    {
                        "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        "callback_data": "/menu"
                    }
                ]
            ]
        }
    }
}

<% CASE 'admin:bonuses:add:confirm' %>
{{
    # Check for admin or moderator rights
    PROCESS checkAdminRights;
    # Check right for change settings
    checkModeratorRights(right="addBonus");
}}
{{
    userData = user.id(args.0);
    name = userData.full_name.replace('"', '\"');
    amount = args.1;

    IF amount < 0;
        ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'});
    ELSE;
        IF (ret = userData.set_bonus('bonus', amount, 'comment', {'msg' => '–†—É—á–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}));
            notification(
                chat_id="$userData.settings.telegram.chat_id",
                TEXT="üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ $amount –±–æ–Ω—É—Å–æ–≤ –Ω–∞ —Å—á–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            ); ",";
        END;
    END;

    sendAlert(
        errtext="‚úÖ –ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $name ($userData.user_id) –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å $userData.get_bonus —Ä—É–±.",
        redirect="admin:bonuses:add $userData.user_id"
    );
}}

<% CASE 'admin:withdraws:id' %>
{{
    data = ref(wd.list_for_api('admin', 1, 'filter', {"withdraw_id" = args.0})).first;
    userData = user.id(data.user_id);
}}
{{ TEXT = BLOCK }}
üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏ ‚Ññ{{ data.withdraw_id }}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ userData.full_name.replace('"', '\"')  }} ({{ userData.user_id }})

–£—Å–ª—É–≥–∞: {{ data.name }} ({{ data.user_service_id }})
–°—Ç–æ–∏–º–æ—Å—Ç—å: {{ data.cost }}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {{ data.create_date }}
–î–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {{ data.withdraw_date }}
–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ —Å–ø–∏—Å–∞–Ω–∏—é: {{ data.end_date }}
–ö–æ–ª-–≤–æ –º–µ—Å—è—Ü–µ–≤: {{ data.months }}

<b>–°–ø–∏—Å–∞–Ω–∏–µ:</b>
<blockquote>
–°–∫–∏–¥–∫–∞: {{ data.discount }}%
–ë–æ–Ω—É—Å–æ–≤: {{ data.bonus }} —Ä—É–±
<b>–í—Å–µ–≥–æ: {{ data.total }}</b>

</blockquote>
{{ END }}

{
    "editMessageText": {
        "message_id": {{ message.message_id }},
        "parse_mode": "HTML",
        "text": "{{ TEXT.replace('\n','\n') }}",
        "reply_markup": {
            "inline_keyboard": [
    [
        {
            "text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "callback_data": "admin:subs:id {{ data.user_service_id _ ' ' _  userData.user_id }}"
        }
    ],
    [
        {
            "text": "üë®‚Äçüíª –ú–µ–Ω—é {{ menuRole = (user.settings.role == 'admin' ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'); menuRole; }}",
            "callback_data": "admin:menu"
        },
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
]
        }
    }
}

<% CASE 'admin:users:search' %>
{{
    # Set state for user
    ret = user.set_settings({'state' => 'awaiting_search'});
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>
{{ END }}
{{ notification(TEXT=TEXT, force=1) }}

<% CASE ['notification:promo'] %>

{{ TEXT = BLOCK }}
‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ {{ args.0 }} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:create' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</b>

üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote><b>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</b></blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:block' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚≠ïÔ∏è <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE ['notification:activate'] %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</b>

üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:prolongate' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ö–ª—é—á #{{ service.user_service_id }} - {{ service.name }} –ø—Ä–æ–¥–ª—ë–Ω!</b>

üóìÔ∏è –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {{ date.format(service.expire, '%d.%m.%Y') }}

<blockquote>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</blockquote>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è",
            "callback_data": "user:keys:id {{ service.user_service_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:forecast' %>
{{
    USE date;
    usi = args.0;
    service = user.services.list_for_api('usi', usi);
    cost = user.pays.forecast('blocked', 1).total;
}}
{{ TEXT = BLOCK }}
üí∞ <b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª—é—á–∏</b>

    {{ FOR item in ref(user.pays.forecast.items('blocked', 1)) }}
<code>
üîë #<b>{{ item.user_service_id }} - {{ item.name }}</b>
        {{ IF item.expire }}
üóìÔ∏è <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</b>: {{ date.format(item.expire, '%d.%m.%Y') }}
        {{ END }}
</code>
    {{ END }}

<b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }} —Ä—É–±.
<b>–ë–∞–ª–∞–Ω—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ </b>{{ cost }} —Ä—É–±.
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å {{ cost }} —Ä—É–±.",
            "web_app": {
                "url": "{{ config.api.url }}/shm/v1/public/tg_payment?format=html"
            }
        }
    ],
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:not_enough_money' %>
{{
    cost = user.pays.forecast('blocked',1).total;
}}
{{ TEXT = BLOCK }}
‚ÑπÔ∏è <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–ª—é—á–µ–π</b>

    {{ FOR item in ref(user.pays.forecast.items) }}
    {{ # NEXT IF item.status != 'NOT PAID'# }}
<code>üîë #<b>{{ item.user_service_id }} - {{ item.name }}</b></code>
    {{ END }}

<b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å </b>{{ cost }} —Ä—É–±.
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å {{ cost }} —Ä—É–±.",
            "web_app": {
                "url": "{{ config.api.url }}/shm/v1/public/tg_payments_webapp?format=html&user_id={{ user.id }}"
            }
        }
    ],
    [
        {
            "text": "üîë –ú–æ–∏ –∫–ª—é—á–∏",
            "callback_data": "user:keys"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


<% CASE 'notification:payment' %>
{{ amount = user.pays.last.money }}
{{ total = user.balance }}
{{
    amount = user.pays.last.money;
}}
{{ TEXT = BLOCK }}
‚úÖ <b>–ü–ª–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É {{ amount }} —Ä—É–±. –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.</b>

üí∞ <b>–ë–∞–ª–∞–Ω—Å</b>: {{ user.balance }}
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'notification:promo' %>

{{ TEXT = BLOCK }}
‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ {{ args.0 }} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>
{{ END }}

{{ BUTTONS = BLOCK }}
    [
        {
            "text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            "callback_data": "user:cabinet"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "{{ mainMenuCmd }}"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}

<% CASE 'promocode' %>
{{
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    ret = user.set_settings({'state' => 'awaiting_promocode'});
    IF user.settings.bot.reqPromo;
        temp = user.settings.bot.reqPromo + 1;
        delete(msgID=[temp, user.settings.bot.reqPromo, message.message_id]);
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    ELSE;
        ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
    END;
}}
{{ TEXT = BLOCK }}
üí¨ <b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:</b>
{{ END }}

{{ notification(TEXT=TEXT, force=1) }}


<% CASE DEFAULT %>

{{ IF user.settings.state == 'awaiting_search'}}
    {{
        temp = message.message_id - 1;
        delete(msgID=[message.message_id, temp]);
        IF message.text.match('^[1-9]\d*$');
            searchString = message.text;
            ret = user.set_settings({'state' => ''});
            ret = ref(user.list_for_api('admin', 1, 'filter', {"user_id" = searchString} ));

            IF (ret.size > 0);
                resultID = ret.first.user_id;
                redirect(callback="admin:users:id $resultID");
            ELSE;
                TEXT = "‚≠ïÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID $searchString –Ω–µ –Ω–∞–π–¥–µ–Ω!";
            END;

        ELSE;
            ret = user.set_settings({'state' => ''});
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> ID –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!";
        END;

        notification(TEXT=TEXT);
    }}
	
{{ ELSIF user.settings.state == 'awaiting_user_message' }}
{{
    temp = message.message_id - 1;
    delete(msgID=[message.message_id, temp]);

    IF message.text.length > 0;
        userID = user.settings.temp_user_id;
        messageText = message.text;
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        ret = user.set_settings({'state' => '', 'temp_user_id' => ''});

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        notification(
            TEXT="üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n<blockquote>$messageText</blockquote>",
            user_id=userID
        );

        TEXT = "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é #$userID!";
    ELSE;
        ret = user.set_settings({'state' => ''});
        TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!";
    END;

    notification(TEXT=TEXT);
}}


{{ ELSIF user.settings.state == 'awaiting_promocode' }}
    {{
        IF user.settings.bot.reqPromo;
            temp = user.settings.bot.reqPromo + 1;
            temp2 = user.settings.bot.reqPromo - 1;
            delete(msgID=[temp, temp2, user.settings.bot.reqPromo, message.message_id]);
            ret = user.set_settings({'bot' => {'reqPromo' => message.message_id} });
        END;

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ
        IF message.text.match('^[a-zA-Z0-9_-]+$');
            promocode = message.text;
            ret = user.set_settings({'state' => ''});
            
            IF promo.apply(promocode);
                TEXT = "‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –ø—Ä–∏–º–µ–Ω—ë–Ω!</b>";
            ELSE;
                TEXT = "‚≠ïÔ∏è <b>–ü—Ä–æ–º–æ–∫–æ–¥ $promocode –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>";
            END;

        ELSE;
            TEXT = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, —Ç–∏—Ä–µ (-) –∏ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (_).";
        END;
    }}

    {{ BUTTONS = BLOCK }}
        [
            {
                "text": "üè∑Ô∏è –í–≤–µ—Å—Ç–∏ –µ—â—ë",
                "callback_data": "promocode"
            }
        ],
        [
            {
                "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                "callback_data": "/menu"
            }
        ]
    {{ END }}
    {{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}


{{ ELSIF user.settings.state == 'awaiting_amount' AND user.settings.bot.switchUser }}
    {{
        userData = user.id(user.settings.bot.switchUser);
        IF message.text.match('^-?\d+(\.\d+)?$');
            amount = message.text;

            IF (ret = userData.payment('money', amount, 'pay_system_id', 'manual'));
                TEXT = "‚úÖ <b>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $userData.user_id –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±.</b>\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: $userData.balance —Ä—É–±.";
            ELSE;
                TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
            END;

            ret = user.set_settings({'state' => ''});
            ret = user.set_settings({'bot' => {'switchUser' => ''} });
        ELSE;
            TEXT = "‚≠ïÔ∏è –û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
        END;
    }}

    {{ BUTTONS = BLOCK }}
    [
        {
            "text": "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            "callback_data": "admin:users:id {{ userData.user_id }}"
        }
    ],
    [
        {
            "text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "callback_data": "/menu"
        }
    ]
{{ END }}
{{ notification(TEXT=TEXT, BUTTONS=BUTTONS) }}
{{ ELSE }}
    {{ 
        ret = user.set_settings({'bot' => {'switchUser' => ''} });
        ret = user.set_settings({'state' => ''});
        delete(msgID=[message.message_id]);
    }}
{{ END }}
<% END %>
